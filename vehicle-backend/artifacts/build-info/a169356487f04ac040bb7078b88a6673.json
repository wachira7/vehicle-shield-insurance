{"id":"a169356487f04ac040bb7078b88a6673","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {ERC721Utils} from \"./utils/ERC721Utils.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if:\n     * - `spender` does not have approval from `owner` for `tokenId`.\n     * - `spender` does not have approval to manage all of `owner`'s assets.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC-721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC-721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC-721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/utils/ERC721Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721Receiver} from \"../IERC721Receiver.sol\";\nimport {IERC721Errors} from \"../../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Library that provide common ERC-721 utility functions.\n *\n * See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n *\n * _Available since v5.1._\n */\nlibrary ERC721Utils {\n    /**\n     * @dev Performs an acceptance check for the provided `operator` by calling {IERC721-onERC721Received}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC721Received(\n        address operator,\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(operator, from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    // Token rejected\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC721Receiver implementer\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n            // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2²⁵⁶ + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 exp;\n        unchecked {\n            exp = 128 * SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 64 * SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 32 * SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 16 * SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 8 * SafeCast.toUint(value > (1 << 8) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 4 * SafeCast.toUint(value > (1 << 4) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 2 * SafeCast.toUint(value > (1 << 2) - 1);\n            value >>= exp;\n            result += exp;\n\n            result += SafeCast.toUint(value > 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 isGt;\n        unchecked {\n            isGt = SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= isGt * 128;\n            result += isGt * 16;\n\n            isGt = SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= isGt * 64;\n            result += isGt * 8;\n\n            isGt = SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= isGt * 32;\n            result += isGt * 4;\n\n            isGt = SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= isGt * 16;\n            result += isGt * 2;\n\n            result += SafeCast.toUint(value > (1 << 8) - 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SafeCast} from \"./math/SafeCast.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    using SafeCast for *;\n\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev The string being parsed contains characters that are not in scope of the given base.\n     */\n    error StringsInvalidChar();\n\n    /**\n     * @dev The string being parsed is not a properly formatted address.\n     */\n    error StringsInvalidAddressFormat();\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input) internal pure returns (uint256) {\n        return parseUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseUint} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        uint256 result = 0;\n        for (uint256 i = begin; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 9) return (false, 0);\n            result *= 10;\n            result += chr;\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `int256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input) internal pure returns (int256) {\n        return parseInt(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\n        (bool success, int256 value) = tryParseInt(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n     * the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\n\n    /**\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character or if the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, int256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseIntUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseInt} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseIntUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, int256 value) {\n        bytes memory buffer = bytes(input);\n\n        // Check presence of a negative sign.\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        bool positiveSign = sign == bytes1(\"+\");\n        bool negativeSign = sign == bytes1(\"-\");\n        uint256 offset = (positiveSign || negativeSign).toUint();\n\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\n\n        if (absSuccess && absValue < ABS_MIN_INT256) {\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\n            return (true, type(int256).min);\n        } else return (false, 0);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input) internal pure returns (uint256) {\n        return parseHexUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n     * invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseHexUint} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseHexUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        // skip 0x prefix if present\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 offset = hasPrefix.toUint() * 2;\n\n        uint256 result = 0;\n        for (uint256 i = begin + offset; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 15) return (false, 0);\n            result *= 16;\n            unchecked {\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\n                // This guaratees that adding a value < 16 will not cause an overflow, hence the unchecked.\n                result += chr;\n            }\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input) internal pure returns (address) {\n        return parseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\n        (bool success, address value) = tryParseAddress(input, begin, end);\n        if (!success) revert StringsInvalidAddressFormat();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n     * formatted address. See {parseAddress} requirements.\n     */\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\n        return tryParseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n     * formatted address. See {parseAddress} requirements.\n     */\n    function tryParseAddress(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, address value) {\n        if (end > bytes(input).length || begin > end) return (false, address(0));\n\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\n\n        // check that input is the correct length\n        if (end - begin == expectedLength) {\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\n            return (s, address(uint160(v)));\n        } else {\n            return (false, address(0));\n        }\n    }\n\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\n        uint8 value = uint8(chr);\n\n        // Try to parse `chr`:\n        // - Case 1: [0-9]\n        // - Case 2: [a-f]\n        // - Case 3: [A-F]\n        // - otherwise not supported\n        unchecked {\n            if (value > 47 && value < 58) value -= 48;\n            else if (value > 96 && value < 103) value -= 87;\n            else if (value > 64 && value < 71) value -= 55;\n            else return type(uint8).max;\n        }\n\n        return value;\n    }\n\n    /**\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\n     *\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n     * assembly block as such would prevent some optimizations.\n     */\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\n        assembly (\"memory-safe\") {\n            value := mload(add(buffer, add(0x20, offset)))\n        }\n    }\n}\n"},"contracts/InsuranceCore.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"./IVehicleShield.sol\";\n\n\ncontract InsuranceCore is ReentrancyGuard, Ownable {\n    IPolicyNFT public policyNFT;\n    IRiskAssessment public riskAssessment;\n    \n    enum VerificationStatus { Pending, Verified, Rejected }\n    \n    \n    struct VehiclePhotos {\n        string frontHash;\n        string backHash;\n        string leftHash;\n        string rightHash;\n        string mirrorLeftHash;\n        string mirrorRightHash;\n        uint256 uploadDate;\n        bool isComplete;\n    }\n    \n    struct Vehicle {\n        string regPlate;\n        string make;\n        string model;\n        uint256 year;\n        address owner;\n        VerificationStatus status;\n        IVehicleShield.VerificationTier tier;\n        uint256 lastVerificationDate;\n        bool isRegistered;\n    }\n    \n    struct Policy {\n        uint256 coverage;\n        uint256 startDate;\n        uint256 endDate;\n        bool isActive;\n        IVehicleShield.VerificationTier tier;\n    }\n    \n    struct Claim {\n        uint256 claimId;\n        uint256 policyId;\n        string description;\n        string photoHash;\n        uint256 amount;\n        bool isProcessed;\n        bool isPaid;\n    }\n    \n    mapping(string => Vehicle) public vehicles;\n    mapping(string => VehiclePhotos) public vehiclePhotos;\n    mapping(uint256 => Policy) public policies;\n    mapping(uint256 => Claim) public claims;\n    mapping(IVehicleShield.VerificationTier => uint256) public coverageLimits;\n    \n    uint256 private _nextClaimId = 1;\n    \n    event VehicleRegistered(string regPlate, address owner, IVehicleShield.VerificationTier tier);\n    event PhotosUploaded(string regPlate, uint256 uploadDate);\n    event VerificationStatusUpdated(string regPlate, VerificationStatus status);\n    event PolicyCreated(uint256 indexed policyId, address indexed owner, string vehicleId);\n    event ClaimSubmitted(uint256 indexed claimId, uint256 indexed policyId);\n    event ClaimProcessed(uint256 indexed claimId, bool approved);\n    event ClaimPaid(uint256 indexed claimId, uint256 amount);\n\n    constructor(address _policyNFTAddress, address _riskAssessmentAddress) Ownable(msg.sender) {\n        policyNFT = IPolicyNFT(_policyNFTAddress);\n        riskAssessment = IRiskAssessment(_riskAssessmentAddress);\n        \n        coverageLimits[IVehicleShield.VerificationTier.Basic] = 0.05 ether;\n        coverageLimits[IVehicleShield.VerificationTier.Medium] = 0.1 ether;\n        coverageLimits[IVehicleShield.VerificationTier.Premium] = 0.2 ether;\n    }\n\n    function registerVehicle(\n        string memory _regPlate,\n        string memory _make,\n        string memory _model,\n        uint256 _year,\n        uint256 _baseValue,\n        uint256 _mileage,\n        uint8 _condition,\n        bool _hasAccidentHistory\n    ) external {\n        require(!vehicles[_regPlate].isRegistered, \"Vehicle already registered\");\n        require(_year <= block.timestamp / 365 days + 1970, \"Invalid year\");\n        \n         (IVehicleShield.VerificationTier tier, ) = riskAssessment.assessVehicle(\n            _regPlate,\n            _baseValue,\n            block.timestamp / 365 days + 1970 - _year,\n            _mileage,\n            _condition,\n            _hasAccidentHistory\n        );\n\n        vehicles[_regPlate] = Vehicle({\n            regPlate: _regPlate,\n            make: _make,\n            model: _model,\n            year: _year,\n            owner: msg.sender,\n            status: VerificationStatus.Pending,\n            tier: tier,\n            lastVerificationDate: block.timestamp,\n            isRegistered: true\n        });\n        \n        emit VehicleRegistered(_regPlate, msg.sender, tier);\n    }\n    \n    function uploadVehiclePhotos(\n        string memory _regPlate,\n        string memory _frontHash,\n        string memory _backHash,\n        string memory _leftHash,\n        string memory _rightHash,\n        string memory _mirrorLeftHash,\n        string memory _mirrorRightHash\n    ) external {\n        require(vehicles[_regPlate].owner == msg.sender, \"Not vehicle owner\");\n        require(!vehiclePhotos[_regPlate].isComplete, \"Photos already uploaded\");\n        \n        vehiclePhotos[_regPlate] = VehiclePhotos({\n            frontHash: _frontHash,\n            backHash: _backHash,\n            leftHash: _leftHash,\n            rightHash: _rightHash,\n            mirrorLeftHash: _mirrorLeftHash,\n            mirrorRightHash: _mirrorRightHash,\n            uploadDate: block.timestamp,\n            isComplete: true\n        });\n        \n        emit PhotosUploaded(_regPlate, block.timestamp);\n    }\n    \n    function updateVerificationStatus(\n        string memory _regPlate,\n        VerificationStatus _status\n    ) external onlyOwner {\n        require(vehicles[_regPlate].isRegistered, \"Vehicle not registered\");\n        require(vehiclePhotos[_regPlate].isComplete, \"Photos not uploaded\");\n        \n        vehicles[_regPlate].status = _status;\n        vehicles[_regPlate].lastVerificationDate = block.timestamp;\n        \n        emit VerificationStatusUpdated(_regPlate, _status);\n    }\n\n    function createPolicy(\n        string memory _regPlate,\n        uint256 _duration,\n        uint256 _coverage\n    ) external payable nonReentrant returns (uint256) {\n        Vehicle storage vehicle = vehicles[_regPlate];\n        require(vehicle.isRegistered, \"Vehicle not registered\");\n        require(vehicle.owner == msg.sender, \"Not vehicle owner\");\n        require(vehicle.status == VerificationStatus.Verified, \"Vehicle not verified\");\n        require(_coverage <= coverageLimits[vehicle.tier], \"Coverage exceeds tier limit\");\n        \n        uint256 requiredPremium = riskAssessment.calculatePremium(_regPlate, vehicle.tier);  \n        require(msg.value >= requiredPremium, \"Insufficient premium payment\");  \n        require(_duration > 0, \"Invalid duration\");\n        \n        uint256 policyId = policyNFT.mintPolicy(msg.sender, _regPlate, vehicle.tier, requiredPremium, _coverage);\n        \n        policies[policyId] = Policy({\n            coverage: _coverage,\n            startDate: block.timestamp,\n            endDate: block.timestamp + _duration,\n            isActive: true,\n            tier: vehicle.tier\n        });\n        \n        emit PolicyCreated(policyId, msg.sender, _regPlate);\n        return policyId;\n    }\n    \n    function submitClaim(\n        uint256 _policyId,\n        string memory _description,\n        string memory _photoHash,\n        uint256 _amount\n    ) external nonReentrant returns (uint256) {\n        require(policies[_policyId].isActive, \"Policy not active\");\n        require(policyNFT.getPolicyOwner(_policyId) == msg.sender, \"Not policy owner\");\n        \n        uint256 claimId = _nextClaimId++;\n        claims[claimId] = Claim({\n            claimId: claimId,\n            policyId: _policyId,\n            description: _description,\n            photoHash: _photoHash,\n            amount: _amount,\n            isProcessed: false,\n            isPaid: false\n        });\n        \n        emit ClaimSubmitted(claimId, _policyId);\n        return claimId;\n    }\n    \n    function processClaim(uint256 _claimId, bool _approved) external onlyOwner {\n        Claim storage claim = claims[_claimId];\n        require(!claim.isProcessed, \"Claim already processed\");\n        \n        claim.isProcessed = true;\n        if (_approved) {\n            _processPayout(claim);\n        }\n        \n        emit ClaimProcessed(_claimId, _approved);\n    }\n    \n    function _processPayout(Claim storage _claim) private {\n        require(!_claim.isPaid, \"Claim already paid\");\n        require(address(this).balance >= _claim.amount, \"Insufficient contract balance\");\n        \n        address payable recipient = payable(policyNFT.getPolicyOwner(_claim.policyId));\n        _claim.isPaid = true;\n        \n        (bool sent, ) = recipient.call{value: _claim.amount}(\"\");\n        require(sent, \"Failed to send payment\");\n        \n        emit ClaimPaid(_claim.claimId, _claim.amount);\n    }\n    \n    receive() external payable {}\n}"},"contracts/IVehicleShield.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface IVehicleShield {\n    enum VerificationTier { Basic, Medium, Premium }\n}\n\ninterface IRiskAssessment {\n    function assessVehicle(\n        string memory _regPlate,\n        uint256 _baseValue,\n        uint256 _age,\n        uint256 _mileage,\n        uint8 _condition,\n        bool _hasAccidentHistory\n    ) external returns (IVehicleShield.VerificationTier, uint256);\n    \n    function calculatePremium(string memory _regPlate, IVehicleShield.VerificationTier _tier) \n        external view returns (uint256);\n}\n\ninterface IPolicyNFT {\n    function mintPolicy(\n        address to, \n        string memory vehicleId,\n        IVehicleShield.VerificationTier tier,\n        uint256 premium,\n        uint256 coverage\n    ) external returns (uint256);\n    function getPolicyOwner(uint256 policyId) external view returns (address);\n    function burnPolicy(uint256 policyId) external;\n}"},"contracts/PolicyNFT.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"./IVehicleShield.sol\";\n\ncontract PolicyNFT is ERC721, Ownable, IPolicyNFT {\n    struct PolicyMetadata {\n        string vehicleId;\n        uint256 createdAt;\n        IVehicleShield.VerificationTier tier;\n        uint256 premium;\n        uint256 coverage;\n    }\n    \n    mapping(uint256 => PolicyMetadata) private _policies;\n    uint256 private _nextPolicyId = 1;\n    address private _insuranceCoreAddress;\n    \n    constructor() ERC721(\"VehicleShield Policy\", \"VSP\") Ownable(msg.sender) {}\n    \n    modifier onlyInsuranceCore() {\n        require(msg.sender == _insuranceCoreAddress, \"Caller is not InsuranceCore\");\n        _;\n    }\n    \n    function setInsuranceCoreAddress(address insuranceCoreAddress) external onlyOwner {\n        _insuranceCoreAddress = insuranceCoreAddress;\n    }\n    \n    function mintPolicy(\n        address to, \n        string memory vehicleId,\n        IVehicleShield.VerificationTier tier,\n        uint256 premium,\n        uint256 coverage\n    ) external onlyInsuranceCore returns (uint256) {\n        uint256 policyId = _nextPolicyId++;\n        _policies[policyId] = PolicyMetadata(\n            vehicleId,\n            block.timestamp,\n            tier,\n            premium,\n            coverage\n        );\n        _safeMint(to, policyId);\n        return policyId;\n    }\n    \n    function getPolicyOwner(uint256 policyId) external view returns (address) {\n        return ownerOf(policyId);\n    }\n    \n    function getPolicyMetadata(uint256 policyId) external view returns (PolicyMetadata memory) {\n        return _policies[policyId];\n    }\n    \n    function burnPolicy(uint256 policyId) external onlyInsuranceCore {\n        _burn(policyId);\n        delete _policies[policyId];\n    }\n}"},"contracts/RiskAssessment.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"./IVehicleShield.sol\";\n\ncontract RiskAssessment is Ownable, IRiskAssessment {\n    struct VehicleRisk {\n        uint256 baseValue;\n        uint256 age;\n        uint256 mileage;\n        uint8 condition;\n        uint8 riskScore;\n        bool hasAccidentHistory;\n        uint256 lastAssessment;\n    }\n    \n    struct PremiumFactors {\n        uint256 baseRate;\n        uint256 ageMultiplier;\n        uint256 conditionMultiplier;\n        uint256 accidentPenalty;\n    }\n\n    mapping(string => VehicleRisk) public vehicleRisks;\n    mapping(IVehicleShield.VerificationTier => PremiumFactors) public tierPremiums;\n    \n    event RiskAssessed(string regPlate, uint8 riskScore, IVehicleShield.VerificationTier tier);\n    \n    constructor() Ownable(msg.sender) {\n        tierPremiums[IVehicleShield.VerificationTier.Basic] = PremiumFactors(0.01 ether, 2, 5, 10);\n        tierPremiums[IVehicleShield.VerificationTier.Medium] = PremiumFactors(0.02 ether, 1, 3, 7);\n        tierPremiums[IVehicleShield.VerificationTier.Premium] = PremiumFactors(0.03 ether, 1, 2, 5);\n    }\n\n    function assessVehicle(\n        string memory _regPlate,\n        uint256 _baseValue,\n        uint256 _age,\n        uint256 _mileage,\n        uint8 _condition,\n        bool _hasAccidentHistory\n    ) external returns (IVehicleShield.VerificationTier, uint256) {\n        require(_condition <= 10, \"Condition must be 1-10\");\n        require(_mileage <= 1000000, \"Invalid mileage\");\n        \n        uint8 riskScore = calculateRiskScore(_age, _mileage, _condition, _hasAccidentHistory);\n        \n        vehicleRisks[_regPlate] = VehicleRisk({\n            baseValue: _baseValue,\n            age: _age,\n            mileage: _mileage,\n            condition: _condition,\n            riskScore: riskScore,\n            hasAccidentHistory: _hasAccidentHistory,\n            lastAssessment: block.timestamp\n        });\n\n        IVehicleShield.VerificationTier tier = determineTier(_baseValue, riskScore);\n        uint256 premium = calculatePremium(_regPlate, tier);\n        \n        emit RiskAssessed(_regPlate, riskScore, tier);\n        \n        return (tier, premium);\n    }\n    \n    function calculateRiskScore(\n        uint256 _age,\n        uint256 _mileage,\n        uint8 _condition,\n        bool _hasAccidentHistory\n    ) public pure returns (uint8) {\n        uint256 score = 100;\n        score = score - (_age * 2);\n        score = score - ((_mileage / 10000) * 3);\n        score = score + (_condition * 5);\n        if (_hasAccidentHistory) {\n            score = score - 20;\n        }\n        if (score > 100) score = 100;\n        if (score < 0) score = 0;\n        return uint8(score);\n    }\n    \n    function determineTier(uint256 _baseValue, uint8 _riskScore) public pure returns (IVehicleShield.VerificationTier) {\n        if (_baseValue >= 0.2 ether && _riskScore >= 80) {\n            return IVehicleShield.VerificationTier.Premium;\n        } else if (_baseValue >= 0.1 ether && _riskScore >= 60) {\n            return IVehicleShield.VerificationTier.Medium;\n        }\n        return IVehicleShield.VerificationTier.Basic;\n    }\n    \n    function calculatePremium(\n        string memory _regPlate, \n        IVehicleShield.VerificationTier _tier\n    ) public view returns (uint256) {\n        VehicleRisk storage risk = vehicleRisks[_regPlate];\n        PremiumFactors storage factors = tierPremiums[_tier];\n        \n        uint256 premium = factors.baseRate;\n        premium += (risk.age * factors.ageMultiplier);\n        premium += ((10 - risk.condition) * factors.conditionMultiplier);\n        if (risk.hasAccidentHistory) {\n            premium += factors.accidentPenalty;\n        }\n        return premium;\n    }\n\n    function updatePremiumFactors(\n        IVehicleShield.VerificationTier _tier,\n        uint256 _baseRate,\n        uint256 _ageMultiplier,\n        uint256 _conditionMultiplier,\n        uint256 _accidentPenalty\n    ) external onlyOwner {\n        tierPremiums[_tier] = PremiumFactors({\n            baseRate: _baseRate,\n            ageMultiplier: _ageMultiplier,\n            conditionMultiplier: _conditionMultiplier,\n            accidentPenalty: _accidentPenalty\n        });\n    }\n\n    function getVehicleRisk(string memory _regPlate) \n        external \n        view \n        returns (VehicleRisk memory) {\n        return vehicleRisks[_regPlate];\n    }\n}"}},"settings":{"optimizer":{"enabled":true,"runs":200},"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[1511],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":1512,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1511,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":1511,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,1511],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[284],"IERC20Errors":[189],"IERC721Errors":[237]},"id":285,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":150,"nodeType":"StructuredDocumentation","src":"138:141:1","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":189,"linearizedBaseContracts":[189],"name":"IERC20Errors","nameLocation":"290:12:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":151,"nodeType":"StructuredDocumentation","src":"309:309:1","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":159,"name":"ERC20InsufficientBalance","nameLocation":"629:24:1","nodeType":"ErrorDefinition","parameters":{"id":158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"sender","nameLocation":"662:6:1","nodeType":"VariableDeclaration","scope":159,"src":"654:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":155,"mutability":"mutable","name":"balance","nameLocation":"678:7:1","nodeType":"VariableDeclaration","scope":159,"src":"670:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":154,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":157,"mutability":"mutable","name":"needed","nameLocation":"695:6:1","nodeType":"VariableDeclaration","scope":159,"src":"687:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":156,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:1"},"src":"623:80:1"},{"documentation":{"id":160,"nodeType":"StructuredDocumentation","src":"709:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":164,"name":"ERC20InvalidSender","nameLocation":"872:18:1","nodeType":"ErrorDefinition","parameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"mutability":"mutable","name":"sender","nameLocation":"899:6:1","nodeType":"VariableDeclaration","scope":164,"src":"891:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:1"},"src":"866:41:1"},{"documentation":{"id":165,"nodeType":"StructuredDocumentation","src":"913:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":169,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:1","nodeType":"ErrorDefinition","parameters":{"id":168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":167,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:1","nodeType":"VariableDeclaration","scope":169,"src":"1104:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":166,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:1"},"src":"1077:45:1"},{"documentation":{"id":170,"nodeType":"StructuredDocumentation","src":"1128:345:1","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":178,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:1","nodeType":"ErrorDefinition","parameters":{"id":177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":172,"mutability":"mutable","name":"spender","nameLocation":"1519:7:1","nodeType":"VariableDeclaration","scope":178,"src":"1511:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":171,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":174,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:1","nodeType":"VariableDeclaration","scope":178,"src":"1528:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":173,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":176,"mutability":"mutable","name":"needed","nameLocation":"1555:6:1","nodeType":"VariableDeclaration","scope":178,"src":"1547:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":175,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:1"},"src":"1478:85:1"},{"documentation":{"id":179,"nodeType":"StructuredDocumentation","src":"1569:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":183,"name":"ERC20InvalidApprover","nameLocation":"1754:20:1","nodeType":"ErrorDefinition","parameters":{"id":182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":181,"mutability":"mutable","name":"approver","nameLocation":"1783:8:1","nodeType":"VariableDeclaration","scope":183,"src":"1775:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":180,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:1"},"src":"1748:45:1"},{"documentation":{"id":184,"nodeType":"StructuredDocumentation","src":"1799:195:1","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":188,"name":"ERC20InvalidSpender","nameLocation":"2005:19:1","nodeType":"ErrorDefinition","parameters":{"id":187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":186,"mutability":"mutable","name":"spender","nameLocation":"2033:7:1","nodeType":"VariableDeclaration","scope":188,"src":"2025:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":185,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:1"},"src":"1999:43:1"}],"scope":285,"src":"280:1764:1","usedErrors":[159,164,169,178,183,188],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":190,"nodeType":"StructuredDocumentation","src":"2046:143:1","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":237,"linearizedBaseContracts":[237],"name":"IERC721Errors","nameLocation":"2200:13:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":191,"nodeType":"StructuredDocumentation","src":"2220:219:1","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":195,"name":"ERC721InvalidOwner","nameLocation":"2450:18:1","nodeType":"ErrorDefinition","parameters":{"id":194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":193,"mutability":"mutable","name":"owner","nameLocation":"2477:5:1","nodeType":"VariableDeclaration","scope":195,"src":"2469:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":192,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:1"},"src":"2444:40:1"},{"documentation":{"id":196,"nodeType":"StructuredDocumentation","src":"2490:132:1","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":200,"name":"ERC721NonexistentToken","nameLocation":"2633:22:1","nodeType":"ErrorDefinition","parameters":{"id":199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":198,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:1","nodeType":"VariableDeclaration","scope":200,"src":"2656:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":197,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:1"},"src":"2627:46:1"},{"documentation":{"id":201,"nodeType":"StructuredDocumentation","src":"2679:289:1","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":209,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:1","nodeType":"ErrorDefinition","parameters":{"id":208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":203,"mutability":"mutable","name":"sender","nameLocation":"3008:6:1","nodeType":"VariableDeclaration","scope":209,"src":"3000:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":202,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":205,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:1","nodeType":"VariableDeclaration","scope":209,"src":"3016:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":204,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":207,"mutability":"mutable","name":"owner","nameLocation":"3041:5:1","nodeType":"VariableDeclaration","scope":209,"src":"3033:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":206,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:1"},"src":"2973:75:1"},{"documentation":{"id":210,"nodeType":"StructuredDocumentation","src":"3054:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":214,"name":"ERC721InvalidSender","nameLocation":"3217:19:1","nodeType":"ErrorDefinition","parameters":{"id":213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":212,"mutability":"mutable","name":"sender","nameLocation":"3245:6:1","nodeType":"VariableDeclaration","scope":214,"src":"3237:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":211,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:1"},"src":"3211:42:1"},{"documentation":{"id":215,"nodeType":"StructuredDocumentation","src":"3259:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":219,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:1","nodeType":"ErrorDefinition","parameters":{"id":218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":217,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:1","nodeType":"VariableDeclaration","scope":219,"src":"3451:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":216,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:1"},"src":"3423:46:1"},{"documentation":{"id":220,"nodeType":"StructuredDocumentation","src":"3475:247:1","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":226,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:1","nodeType":"ErrorDefinition","parameters":{"id":225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":222,"mutability":"mutable","name":"operator","nameLocation":"3768:8:1","nodeType":"VariableDeclaration","scope":226,"src":"3760:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":221,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":224,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:1","nodeType":"VariableDeclaration","scope":226,"src":"3778:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":223,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:1"},"src":"3727:68:1"},{"documentation":{"id":227,"nodeType":"StructuredDocumentation","src":"3801:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":231,"name":"ERC721InvalidApprover","nameLocation":"3986:21:1","nodeType":"ErrorDefinition","parameters":{"id":230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":229,"mutability":"mutable","name":"approver","nameLocation":"4016:8:1","nodeType":"VariableDeclaration","scope":231,"src":"4008:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":228,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:1"},"src":"3980:46:1"},{"documentation":{"id":232,"nodeType":"StructuredDocumentation","src":"4032:197:1","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":236,"name":"ERC721InvalidOperator","nameLocation":"4240:21:1","nodeType":"ErrorDefinition","parameters":{"id":235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":234,"mutability":"mutable","name":"operator","nameLocation":"4270:8:1","nodeType":"VariableDeclaration","scope":236,"src":"4262:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":233,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:1"},"src":"4234:46:1"}],"scope":285,"src":"2190:2092:1","usedErrors":[195,200,209,214,219,226,231,236],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":238,"nodeType":"StructuredDocumentation","src":"4284:145:1","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":284,"linearizedBaseContracts":[284],"name":"IERC1155Errors","nameLocation":"4440:14:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":239,"nodeType":"StructuredDocumentation","src":"4461:361:1","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":249,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:1","nodeType":"ErrorDefinition","parameters":{"id":248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":241,"mutability":"mutable","name":"sender","nameLocation":"4868:6:1","nodeType":"VariableDeclaration","scope":249,"src":"4860:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":240,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":243,"mutability":"mutable","name":"balance","nameLocation":"4884:7:1","nodeType":"VariableDeclaration","scope":249,"src":"4876:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":242,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":245,"mutability":"mutable","name":"needed","nameLocation":"4901:6:1","nodeType":"VariableDeclaration","scope":249,"src":"4893:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":244,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":247,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:1","nodeType":"VariableDeclaration","scope":249,"src":"4909:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":246,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:1"},"src":"4827:99:1"},{"documentation":{"id":250,"nodeType":"StructuredDocumentation","src":"4932:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":254,"name":"ERC1155InvalidSender","nameLocation":"5095:20:1","nodeType":"ErrorDefinition","parameters":{"id":253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":252,"mutability":"mutable","name":"sender","nameLocation":"5124:6:1","nodeType":"VariableDeclaration","scope":254,"src":"5116:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":251,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:1"},"src":"5089:43:1"},{"documentation":{"id":255,"nodeType":"StructuredDocumentation","src":"5138:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":259,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:1","nodeType":"ErrorDefinition","parameters":{"id":258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":257,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:1","nodeType":"VariableDeclaration","scope":259,"src":"5331:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":256,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:1"},"src":"5302:47:1"},{"documentation":{"id":260,"nodeType":"StructuredDocumentation","src":"5355:256:1","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":266,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:1","nodeType":"ErrorDefinition","parameters":{"id":265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":262,"mutability":"mutable","name":"operator","nameLocation":"5659:8:1","nodeType":"VariableDeclaration","scope":266,"src":"5651:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":261,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":264,"mutability":"mutable","name":"owner","nameLocation":"5677:5:1","nodeType":"VariableDeclaration","scope":266,"src":"5669:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":263,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:1"},"src":"5616:68:1"},{"documentation":{"id":267,"nodeType":"StructuredDocumentation","src":"5690:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":271,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:1","nodeType":"ErrorDefinition","parameters":{"id":270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":269,"mutability":"mutable","name":"approver","nameLocation":"5906:8:1","nodeType":"VariableDeclaration","scope":271,"src":"5898:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":268,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:1"},"src":"5869:47:1"},{"documentation":{"id":272,"nodeType":"StructuredDocumentation","src":"5922:197:1","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":276,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:1","nodeType":"ErrorDefinition","parameters":{"id":275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":274,"mutability":"mutable","name":"operator","nameLocation":"6161:8:1","nodeType":"VariableDeclaration","scope":276,"src":"6153:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":273,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:1"},"src":"6124:47:1"},{"documentation":{"id":277,"nodeType":"StructuredDocumentation","src":"6177:280:1","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":283,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:1","nodeType":"ErrorDefinition","parameters":{"id":282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":279,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:1","nodeType":"VariableDeclaration","scope":283,"src":"6494:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":278,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":281,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:1","nodeType":"VariableDeclaration","scope":283,"src":"6513:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":280,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:1"},"src":"6462:73:1"}],"scope":285,"src":"4430:2107:1","usedErrors":[249,254,259,266,271,276,283],"usedEvents":[]}],"src":"112:6426:1"},"id":1},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","exportedSymbols":{"Context":[1511],"ERC165":[2856],"ERC721":[1241],"ERC721Utils":[1481],"IERC165":[2868],"IERC721":[1358],"IERC721Errors":[237],"IERC721Metadata":[1404],"Strings":[2832]},"id":1242,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":286,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:2"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"./IERC721.sol","id":288,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1242,"sourceUnit":1359,"src":"133:38:2","symbolAliases":[{"foreign":{"id":287,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1358,"src":"141:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"./extensions/IERC721Metadata.sol","id":290,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1242,"sourceUnit":1405,"src":"172:65:2","symbolAliases":[{"foreign":{"id":289,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1404,"src":"180:15:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","file":"./utils/ERC721Utils.sol","id":292,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1242,"sourceUnit":1482,"src":"238:52:2","symbolAliases":[{"foreign":{"id":291,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"246:11:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":294,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1242,"sourceUnit":1512,"src":"291:48:2","symbolAliases":[{"foreign":{"id":293,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1511,"src":"299:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../utils/Strings.sol","id":296,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1242,"sourceUnit":2833,"src":"340:48:2","symbolAliases":[{"foreign":{"id":295,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2832,"src":"348:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":299,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1242,"sourceUnit":2857,"src":"389:69:2","symbolAliases":[{"foreign":{"id":297,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2868,"src":"397:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":298,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2856,"src":"406:6:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":301,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1242,"sourceUnit":285,"src":"459:66:2","symbolAliases":[{"foreign":{"id":300,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"467:13:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":303,"name":"Context","nameLocations":["803:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":1511,"src":"803:7:2"},"id":304,"nodeType":"InheritanceSpecifier","src":"803:7:2"},{"baseName":{"id":305,"name":"ERC165","nameLocations":["812:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":2856,"src":"812:6:2"},"id":306,"nodeType":"InheritanceSpecifier","src":"812:6:2"},{"baseName":{"id":307,"name":"IERC721","nameLocations":["820:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":1358,"src":"820:7:2"},"id":308,"nodeType":"InheritanceSpecifier","src":"820:7:2"},{"baseName":{"id":309,"name":"IERC721Metadata","nameLocations":["829:15:2"],"nodeType":"IdentifierPath","referencedDeclaration":1404,"src":"829:15:2"},"id":310,"nodeType":"InheritanceSpecifier","src":"829:15:2"},{"baseName":{"id":311,"name":"IERC721Errors","nameLocations":["846:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":237,"src":"846:13:2"},"id":312,"nodeType":"InheritanceSpecifier","src":"846:13:2"}],"canonicalName":"ERC721","contractDependencies":[],"contractKind":"contract","documentation":{"id":302,"nodeType":"StructuredDocumentation","src":"527:247:2","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."},"fullyImplemented":true,"id":1241,"linearizedBaseContracts":[1241,237,1404,1358,2856,2868,1511],"name":"ERC721","nameLocation":"793:6:2","nodeType":"ContractDefinition","nodes":[{"global":false,"id":315,"libraryName":{"id":313,"name":"Strings","nameLocations":["872:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":2832,"src":"872:7:2"},"nodeType":"UsingForDirective","src":"866:26:2","typeName":{"id":314,"name":"uint256","nodeType":"ElementaryTypeName","src":"884:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":317,"mutability":"mutable","name":"_name","nameLocation":"931:5:2","nodeType":"VariableDeclaration","scope":1241,"src":"916:20:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":316,"name":"string","nodeType":"ElementaryTypeName","src":"916:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":319,"mutability":"mutable","name":"_symbol","nameLocation":"978:7:2","nodeType":"VariableDeclaration","scope":1241,"src":"963:22:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":318,"name":"string","nodeType":"ElementaryTypeName","src":"963:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":323,"mutability":"mutable","name":"_owners","nameLocation":"1036:7:2","nodeType":"VariableDeclaration","scope":1241,"src":"992:51:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":322,"keyName":"tokenId","keyNameLocation":"1008:7:2","keyType":{"id":320,"name":"uint256","nodeType":"ElementaryTypeName","src":"1000:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"992:35:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":321,"name":"address","nodeType":"ElementaryTypeName","src":"1019:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":327,"mutability":"mutable","name":"_balances","nameLocation":"1092:9:2","nodeType":"VariableDeclaration","scope":1241,"src":"1050:51:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":326,"keyName":"owner","keyNameLocation":"1066:5:2","keyType":{"id":324,"name":"address","nodeType":"ElementaryTypeName","src":"1058:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1050:33:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":325,"name":"uint256","nodeType":"ElementaryTypeName","src":"1075:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":331,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"1152:15:2","nodeType":"VariableDeclaration","scope":1241,"src":"1108:59:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":330,"keyName":"tokenId","keyNameLocation":"1124:7:2","keyType":{"id":328,"name":"uint256","nodeType":"ElementaryTypeName","src":"1116:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1108:35:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":329,"name":"address","nodeType":"ElementaryTypeName","src":"1135:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":337,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1242:18:2","nodeType":"VariableDeclaration","scope":1241,"src":"1174:86:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":336,"keyName":"owner","keyNameLocation":"1190:5:2","keyType":{"id":332,"name":"address","nodeType":"ElementaryTypeName","src":"1182:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1174:59:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":335,"keyName":"operator","keyNameLocation":"1215:8:2","keyType":{"id":333,"name":"address","nodeType":"ElementaryTypeName","src":"1207:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1199:33:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":334,"name":"bool","nodeType":"ElementaryTypeName","src":"1227:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"body":{"id":353,"nodeType":"Block","src":"1436:57:2","statements":[{"expression":{"id":347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":345,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"1446:5:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":346,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"1454:5:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1446:13:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":348,"nodeType":"ExpressionStatement","src":"1446:13:2"},{"expression":{"id":351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":349,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":319,"src":"1469:7:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":350,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"1479:7:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1469:17:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":352,"nodeType":"ExpressionStatement","src":"1469:17:2"}]},"documentation":{"id":338,"nodeType":"StructuredDocumentation","src":"1267:108:2","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":354,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":340,"mutability":"mutable","name":"name_","nameLocation":"1406:5:2","nodeType":"VariableDeclaration","scope":354,"src":"1392:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":339,"name":"string","nodeType":"ElementaryTypeName","src":"1392:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":342,"mutability":"mutable","name":"symbol_","nameLocation":"1427:7:2","nodeType":"VariableDeclaration","scope":354,"src":"1413:21:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":341,"name":"string","nodeType":"ElementaryTypeName","src":"1413:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1391:44:2"},"returnParameters":{"id":344,"nodeType":"ParameterList","parameters":[],"src":"1436:0:2"},"scope":1241,"src":"1380:113:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2855,2867],"body":{"id":384,"nodeType":"Block","src":"1668:192:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":365,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":357,"src":"1697:11:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":367,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1358,"src":"1717:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$1358_$","typeString":"type(contract IERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721_$1358_$","typeString":"type(contract IERC721)"}],"id":366,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1712:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1712:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721_$1358","typeString":"type(contract IERC721)"}},"id":369,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1726:11:2","memberName":"interfaceId","nodeType":"MemberAccess","src":"1712:25:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1697:40:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":371,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":357,"src":"1753:11:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":373,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1404,"src":"1773:15:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$1404_$","typeString":"type(contract IERC721Metadata)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$1404_$","typeString":"type(contract IERC721Metadata)"}],"id":372,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1768:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1768:21:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Metadata_$1404","typeString":"type(contract IERC721Metadata)"}},"id":375,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1790:11:2","memberName":"interfaceId","nodeType":"MemberAccess","src":"1768:33:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1753:48:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1697:104:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":380,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":357,"src":"1841:11:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":378,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1817:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721_$1241_$","typeString":"type(contract super ERC721)"}},"id":379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1823:17:2","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":2855,"src":"1817:23:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1817:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1697:156:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":364,"id":383,"nodeType":"Return","src":"1678:175:2"}]},"documentation":{"id":355,"nodeType":"StructuredDocumentation","src":"1499:56:2","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":385,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1569:17:2","nodeType":"FunctionDefinition","overrides":{"id":361,"nodeType":"OverrideSpecifier","overrides":[{"id":359,"name":"ERC165","nameLocations":["1636:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":2856,"src":"1636:6:2"},{"id":360,"name":"IERC165","nameLocations":["1644:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":2868,"src":"1644:7:2"}],"src":"1627:25:2"},"parameters":{"id":358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":357,"mutability":"mutable","name":"interfaceId","nameLocation":"1594:11:2","nodeType":"VariableDeclaration","scope":385,"src":"1587:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":356,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1587:6:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1586:20:2"},"returnParameters":{"id":364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":363,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":385,"src":"1662:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":362,"name":"bool","nodeType":"ElementaryTypeName","src":"1662:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1661:6:2"},"scope":1241,"src":"1560:300:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1283],"body":{"id":412,"nodeType":"Block","src":"1991:136:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":393,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"2005:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2022:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2014:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":394,"name":"address","nodeType":"ElementaryTypeName","src":"2014:7:2","typeDescriptions":{}}},"id":397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2014:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2005:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":407,"nodeType":"IfStatement","src":"2001:87:2","trueBody":{"id":406,"nodeType":"Block","src":"2026:62:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2074:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":401,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2066:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":400,"name":"address","nodeType":"ElementaryTypeName","src":"2066:7:2","typeDescriptions":{}}},"id":403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2066:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":399,"name":"ERC721InvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"2047:18:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2047:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":405,"nodeType":"RevertStatement","src":"2040:37:2"}]}},{"expression":{"baseExpression":{"id":408,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"2104:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":410,"indexExpression":{"id":409,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"2114:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2104:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":392,"id":411,"nodeType":"Return","src":"2097:23:2"}]},"documentation":{"id":386,"nodeType":"StructuredDocumentation","src":"1866:48:2","text":" @dev See {IERC721-balanceOf}."},"functionSelector":"70a08231","id":413,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1928:9:2","nodeType":"FunctionDefinition","parameters":{"id":389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":388,"mutability":"mutable","name":"owner","nameLocation":"1946:5:2","nodeType":"VariableDeclaration","scope":413,"src":"1938:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":387,"name":"address","nodeType":"ElementaryTypeName","src":"1938:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1937:15:2"},"returnParameters":{"id":392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":391,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":413,"src":"1982:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":390,"name":"uint256","nodeType":"ElementaryTypeName","src":"1982:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1981:9:2"},"scope":1241,"src":"1919:208:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1291],"body":{"id":425,"nodeType":"Block","src":"2256:46:2","statements":[{"expression":{"arguments":[{"id":422,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"2287:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":421,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"2273:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2273:22:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":420,"id":424,"nodeType":"Return","src":"2266:29:2"}]},"documentation":{"id":414,"nodeType":"StructuredDocumentation","src":"2133:46:2","text":" @dev See {IERC721-ownerOf}."},"functionSelector":"6352211e","id":426,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"2193:7:2","nodeType":"FunctionDefinition","parameters":{"id":417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":416,"mutability":"mutable","name":"tokenId","nameLocation":"2209:7:2","nodeType":"VariableDeclaration","scope":426,"src":"2201:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":415,"name":"uint256","nodeType":"ElementaryTypeName","src":"2201:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2200:17:2"},"returnParameters":{"id":420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":419,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":426,"src":"2247:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":418,"name":"address","nodeType":"ElementaryTypeName","src":"2247:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2246:9:2"},"scope":1241,"src":"2184:118:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1389],"body":{"id":434,"nodeType":"Block","src":"2424:29:2","statements":[{"expression":{"id":432,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"2441:5:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":431,"id":433,"nodeType":"Return","src":"2434:12:2"}]},"documentation":{"id":427,"nodeType":"StructuredDocumentation","src":"2308:51:2","text":" @dev See {IERC721Metadata-name}."},"functionSelector":"06fdde03","id":435,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2373:4:2","nodeType":"FunctionDefinition","parameters":{"id":428,"nodeType":"ParameterList","parameters":[],"src":"2377:2:2"},"returnParameters":{"id":431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":430,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":435,"src":"2409:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":429,"name":"string","nodeType":"ElementaryTypeName","src":"2409:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2408:15:2"},"scope":1241,"src":"2364:89:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1395],"body":{"id":443,"nodeType":"Block","src":"2579:31:2","statements":[{"expression":{"id":441,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":319,"src":"2596:7:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":440,"id":442,"nodeType":"Return","src":"2589:14:2"}]},"documentation":{"id":436,"nodeType":"StructuredDocumentation","src":"2459:53:2","text":" @dev See {IERC721Metadata-symbol}."},"functionSelector":"95d89b41","id":444,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2526:6:2","nodeType":"FunctionDefinition","parameters":{"id":437,"nodeType":"ParameterList","parameters":[],"src":"2532:2:2"},"returnParameters":{"id":440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":439,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":444,"src":"2564:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":438,"name":"string","nodeType":"ElementaryTypeName","src":"2564:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2563:15:2"},"scope":1241,"src":"2517:93:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1403],"body":{"id":479,"nodeType":"Block","src":"2755:176:2","statements":[{"expression":{"arguments":[{"id":453,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"2779:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":452,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"2765:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2765:22:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":455,"nodeType":"ExpressionStatement","src":"2765:22:2"},{"assignments":[457],"declarations":[{"constant":false,"id":457,"mutability":"mutable","name":"baseURI","nameLocation":"2812:7:2","nodeType":"VariableDeclaration","scope":479,"src":"2798:21:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":456,"name":"string","nodeType":"ElementaryTypeName","src":"2798:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":460,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":458,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"2822:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2822:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2798:34:2"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":463,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"2855:7:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":462,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2849:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":461,"name":"bytes","nodeType":"ElementaryTypeName","src":"2849:5:2","typeDescriptions":{}}},"id":464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2849:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:2","memberName":"length","nodeType":"MemberAccess","src":"2849:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2873:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2849:25:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2922:2:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2849:75:2","trueExpression":{"arguments":[{"id":471,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"2891:7:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":472,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"2900:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2908:8:2","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1710,"src":"2900:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2900:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":469,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2877:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":468,"name":"string","nodeType":"ElementaryTypeName","src":"2877:6:2","typeDescriptions":{}}},"id":470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2884:6:2","memberName":"concat","nodeType":"MemberAccess","src":"2877:13:2","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2877:42:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":451,"id":478,"nodeType":"Return","src":"2842:82:2"}]},"documentation":{"id":445,"nodeType":"StructuredDocumentation","src":"2616:55:2","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":480,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"2685:8:2","nodeType":"FunctionDefinition","parameters":{"id":448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":447,"mutability":"mutable","name":"tokenId","nameLocation":"2702:7:2","nodeType":"VariableDeclaration","scope":480,"src":"2694:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":446,"name":"uint256","nodeType":"ElementaryTypeName","src":"2694:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2693:17:2"},"returnParameters":{"id":451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":450,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":480,"src":"2740:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":449,"name":"string","nodeType":"ElementaryTypeName","src":"2740:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2739:15:2"},"scope":1241,"src":"2676:255:2","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":488,"nodeType":"Block","src":"3239:26:2","statements":[{"expression":{"hexValue":"","id":486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3256:2:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":485,"id":487,"nodeType":"Return","src":"3249:9:2"}]},"documentation":{"id":481,"nodeType":"StructuredDocumentation","src":"2937:231:2","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."},"id":489,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"3182:8:2","nodeType":"FunctionDefinition","parameters":{"id":482,"nodeType":"ParameterList","parameters":[],"src":"3190:2:2"},"returnParameters":{"id":485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":484,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":489,"src":"3224:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":483,"name":"string","nodeType":"ElementaryTypeName","src":"3224:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3223:15:2"},"scope":1241,"src":"3173:92:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1331],"body":{"id":504,"nodeType":"Block","src":"3383:52:2","statements":[{"expression":{"arguments":[{"id":498,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":492,"src":"3402:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":499,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"3406:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":500,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"3415:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3415:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":497,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1108,1174],"referencedDeclaration":1108,"src":"3393:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address)"}},"id":502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3393:35:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":503,"nodeType":"ExpressionStatement","src":"3393:35:2"}]},"documentation":{"id":490,"nodeType":"StructuredDocumentation","src":"3271:46:2","text":" @dev See {IERC721-approve}."},"functionSelector":"095ea7b3","id":505,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3331:7:2","nodeType":"FunctionDefinition","parameters":{"id":495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":492,"mutability":"mutable","name":"to","nameLocation":"3347:2:2","nodeType":"VariableDeclaration","scope":505,"src":"3339:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":491,"name":"address","nodeType":"ElementaryTypeName","src":"3339:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":494,"mutability":"mutable","name":"tokenId","nameLocation":"3359:7:2","nodeType":"VariableDeclaration","scope":505,"src":"3351:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":493,"name":"uint256","nodeType":"ElementaryTypeName","src":"3351:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3338:29:2"},"returnParameters":{"id":496,"nodeType":"ParameterList","parameters":[],"src":"3383:0:2"},"scope":1241,"src":"3322:113:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1347],"body":{"id":521,"nodeType":"Block","src":"3572:78:2","statements":[{"expression":{"arguments":[{"id":514,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"3596:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":513,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"3582:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3582:22:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":516,"nodeType":"ExpressionStatement","src":"3582:22:2"},{"expression":{"arguments":[{"id":518,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"3635:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":517,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"3622:12:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3622:21:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":512,"id":520,"nodeType":"Return","src":"3615:28:2"}]},"documentation":{"id":506,"nodeType":"StructuredDocumentation","src":"3441:50:2","text":" @dev See {IERC721-getApproved}."},"functionSelector":"081812fc","id":522,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"3505:11:2","nodeType":"FunctionDefinition","parameters":{"id":509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":508,"mutability":"mutable","name":"tokenId","nameLocation":"3525:7:2","nodeType":"VariableDeclaration","scope":522,"src":"3517:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":507,"name":"uint256","nodeType":"ElementaryTypeName","src":"3517:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3516:17:2"},"returnParameters":{"id":512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":511,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":522,"src":"3563:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":510,"name":"address","nodeType":"ElementaryTypeName","src":"3563:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3562:9:2"},"scope":1241,"src":"3496:154:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1339],"body":{"id":537,"nodeType":"Block","src":"3792:69:2","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":531,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"3821:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3821:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":533,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"3835:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":534,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"3845:8:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":530,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"3802:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3802:52:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":536,"nodeType":"ExpressionStatement","src":"3802:52:2"}]},"documentation":{"id":523,"nodeType":"StructuredDocumentation","src":"3656:56:2","text":" @dev See {IERC721-setApprovalForAll}."},"functionSelector":"a22cb465","id":538,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"3726:17:2","nodeType":"FunctionDefinition","parameters":{"id":528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":525,"mutability":"mutable","name":"operator","nameLocation":"3752:8:2","nodeType":"VariableDeclaration","scope":538,"src":"3744:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":524,"name":"address","nodeType":"ElementaryTypeName","src":"3744:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":527,"mutability":"mutable","name":"approved","nameLocation":"3767:8:2","nodeType":"VariableDeclaration","scope":538,"src":"3762:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":526,"name":"bool","nodeType":"ElementaryTypeName","src":"3762:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3743:33:2"},"returnParameters":{"id":529,"nodeType":"ParameterList","parameters":[],"src":"3792:0:2"},"scope":1241,"src":"3717:144:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1357],"body":{"id":554,"nodeType":"Block","src":"4021:59:2","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":548,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"4038:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":550,"indexExpression":{"id":549,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"4057:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4038:25:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":552,"indexExpression":{"id":551,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":543,"src":"4064:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4038:35:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":547,"id":553,"nodeType":"Return","src":"4031:42:2"}]},"documentation":{"id":539,"nodeType":"StructuredDocumentation","src":"3867:55:2","text":" @dev See {IERC721-isApprovedForAll}."},"functionSelector":"e985e9c5","id":555,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"3936:16:2","nodeType":"FunctionDefinition","parameters":{"id":544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":541,"mutability":"mutable","name":"owner","nameLocation":"3961:5:2","nodeType":"VariableDeclaration","scope":555,"src":"3953:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":540,"name":"address","nodeType":"ElementaryTypeName","src":"3953:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":543,"mutability":"mutable","name":"operator","nameLocation":"3976:8:2","nodeType":"VariableDeclaration","scope":555,"src":"3968:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":542,"name":"address","nodeType":"ElementaryTypeName","src":"3968:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3952:33:2"},"returnParameters":{"id":547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":546,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":555,"src":"4015:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":545,"name":"bool","nodeType":"ElementaryTypeName","src":"4015:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4014:6:2"},"scope":1241,"src":"3927:153:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1323],"body":{"id":600,"nodeType":"Block","src":"4222:498:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":565,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":560,"src":"4236:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4250:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":567,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4242:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":566,"name":"address","nodeType":"ElementaryTypeName","src":"4242:7:2","typeDescriptions":{}}},"id":569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4242:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4236:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":579,"nodeType":"IfStatement","src":"4232:87:2","trueBody":{"id":578,"nodeType":"Block","src":"4254:65:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4305:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":573,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4297:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":572,"name":"address","nodeType":"ElementaryTypeName","src":"4297:7:2","typeDescriptions":{}}},"id":575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4297:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":571,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"4275:21:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4275:33:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":577,"nodeType":"RevertStatement","src":"4268:40:2"}]}},{"assignments":[581],"declarations":[{"constant":false,"id":581,"mutability":"mutable","name":"previousOwner","nameLocation":"4545:13:2","nodeType":"VariableDeclaration","scope":600,"src":"4537:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":580,"name":"address","nodeType":"ElementaryTypeName","src":"4537:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":588,"initialValue":{"arguments":[{"id":583,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":560,"src":"4569:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":584,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"4573:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":585,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"4582:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4582:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":582,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"4561:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4561:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4537:58:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":589,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":581,"src":"4609:13:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":590,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"4626:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4609:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":599,"nodeType":"IfStatement","src":"4605:109:2","trueBody":{"id":598,"nodeType":"Block","src":"4632:82:2","statements":[{"errorCall":{"arguments":[{"id":593,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"4674:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":594,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"4680:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":595,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":581,"src":"4689:13:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":592,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":209,"src":"4653:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address) pure"}},"id":596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4653:50:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":597,"nodeType":"RevertStatement","src":"4646:57:2"}]}}]},"documentation":{"id":556,"nodeType":"StructuredDocumentation","src":"4086:51:2","text":" @dev See {IERC721-transferFrom}."},"functionSelector":"23b872dd","id":601,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4151:12:2","nodeType":"FunctionDefinition","parameters":{"id":563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":558,"mutability":"mutable","name":"from","nameLocation":"4172:4:2","nodeType":"VariableDeclaration","scope":601,"src":"4164:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":557,"name":"address","nodeType":"ElementaryTypeName","src":"4164:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":560,"mutability":"mutable","name":"to","nameLocation":"4186:2:2","nodeType":"VariableDeclaration","scope":601,"src":"4178:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":559,"name":"address","nodeType":"ElementaryTypeName","src":"4178:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":562,"mutability":"mutable","name":"tokenId","nameLocation":"4198:7:2","nodeType":"VariableDeclaration","scope":601,"src":"4190:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":561,"name":"uint256","nodeType":"ElementaryTypeName","src":"4190:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4163:43:2"},"returnParameters":{"id":564,"nodeType":"ParameterList","parameters":[],"src":"4222:0:2"},"scope":1241,"src":"4142:578:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1313],"body":{"id":618,"nodeType":"Block","src":"4862:56:2","statements":[{"expression":{"arguments":[{"id":612,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":604,"src":"4889:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":613,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"4895:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":614,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"4899:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4908:2:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":611,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[619,649],"referencedDeclaration":649,"src":"4872:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4872:39:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":617,"nodeType":"ExpressionStatement","src":"4872:39:2"}]},"documentation":{"id":602,"nodeType":"StructuredDocumentation","src":"4726:55:2","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"42842e0e","id":619,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4795:16:2","nodeType":"FunctionDefinition","parameters":{"id":609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":604,"mutability":"mutable","name":"from","nameLocation":"4820:4:2","nodeType":"VariableDeclaration","scope":619,"src":"4812:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":603,"name":"address","nodeType":"ElementaryTypeName","src":"4812:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":606,"mutability":"mutable","name":"to","nameLocation":"4834:2:2","nodeType":"VariableDeclaration","scope":619,"src":"4826:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":605,"name":"address","nodeType":"ElementaryTypeName","src":"4826:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":608,"mutability":"mutable","name":"tokenId","nameLocation":"4846:7:2","nodeType":"VariableDeclaration","scope":619,"src":"4838:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":607,"name":"uint256","nodeType":"ElementaryTypeName","src":"4838:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4811:43:2"},"returnParameters":{"id":610,"nodeType":"ParameterList","parameters":[],"src":"4862:0:2"},"scope":1241,"src":"4786:132:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1303],"body":{"id":648,"nodeType":"Block","src":"5087:130:2","statements":[{"expression":{"arguments":[{"id":632,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"5110:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":633,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"5116:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":634,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"5120:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":631,"name":"transferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":601,"src":"5097:12:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5097:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":636,"nodeType":"ExpressionStatement","src":"5097:31:2"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":640,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"5172:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5172:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":642,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"5186:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":643,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"5192:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":644,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"5196:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":645,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":628,"src":"5205:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":637,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"5138:11:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$1481_$","typeString":"type(library ERC721Utils)"}},"id":639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5150:21:2","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":1480,"src":"5138:33:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5138:72:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":647,"nodeType":"ExpressionStatement","src":"5138:72:2"}]},"documentation":{"id":620,"nodeType":"StructuredDocumentation","src":"4924:55:2","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"b88d4fde","id":649,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4993:16:2","nodeType":"FunctionDefinition","parameters":{"id":629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":622,"mutability":"mutable","name":"from","nameLocation":"5018:4:2","nodeType":"VariableDeclaration","scope":649,"src":"5010:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":621,"name":"address","nodeType":"ElementaryTypeName","src":"5010:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":624,"mutability":"mutable","name":"to","nameLocation":"5032:2:2","nodeType":"VariableDeclaration","scope":649,"src":"5024:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":623,"name":"address","nodeType":"ElementaryTypeName","src":"5024:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":626,"mutability":"mutable","name":"tokenId","nameLocation":"5044:7:2","nodeType":"VariableDeclaration","scope":649,"src":"5036:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":625,"name":"uint256","nodeType":"ElementaryTypeName","src":"5036:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":628,"mutability":"mutable","name":"data","nameLocation":"5066:4:2","nodeType":"VariableDeclaration","scope":649,"src":"5053:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":627,"name":"bytes","nodeType":"ElementaryTypeName","src":"5053:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5009:62:2"},"returnParameters":{"id":630,"nodeType":"ParameterList","parameters":[],"src":"5087:0:2"},"scope":1241,"src":"4984:233:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":661,"nodeType":"Block","src":"5807:40:2","statements":[{"expression":{"baseExpression":{"id":657,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"5824:7:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":659,"indexExpression":{"id":658,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":652,"src":"5832:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5824:16:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":656,"id":660,"nodeType":"Return","src":"5817:23:2"}]},"documentation":{"id":650,"nodeType":"StructuredDocumentation","src":"5223:504:2","text":" @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."},"id":662,"implemented":true,"kind":"function","modifiers":[],"name":"_ownerOf","nameLocation":"5741:8:2","nodeType":"FunctionDefinition","parameters":{"id":653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":652,"mutability":"mutable","name":"tokenId","nameLocation":"5758:7:2","nodeType":"VariableDeclaration","scope":662,"src":"5750:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":651,"name":"uint256","nodeType":"ElementaryTypeName","src":"5750:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5749:17:2"},"returnParameters":{"id":656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":655,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":662,"src":"5798:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":654,"name":"address","nodeType":"ElementaryTypeName","src":"5798:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5797:9:2"},"scope":1241,"src":"5732:115:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":674,"nodeType":"Block","src":"6042:48:2","statements":[{"expression":{"baseExpression":{"id":670,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"6059:15:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":672,"indexExpression":{"id":671,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":665,"src":"6075:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6059:24:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":669,"id":673,"nodeType":"Return","src":"6052:31:2"}]},"documentation":{"id":663,"nodeType":"StructuredDocumentation","src":"5853:105:2","text":" @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."},"id":675,"implemented":true,"kind":"function","modifiers":[],"name":"_getApproved","nameLocation":"5972:12:2","nodeType":"FunctionDefinition","parameters":{"id":666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":665,"mutability":"mutable","name":"tokenId","nameLocation":"5993:7:2","nodeType":"VariableDeclaration","scope":675,"src":"5985:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":664,"name":"uint256","nodeType":"ElementaryTypeName","src":"5985:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5984:17:2"},"returnParameters":{"id":669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":668,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":675,"src":"6033:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":667,"name":"address","nodeType":"ElementaryTypeName","src":"6033:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6032:9:2"},"scope":1241,"src":"5963:127:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":710,"nodeType":"Block","src":"6510:163:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":687,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"6539:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6558:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":689,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6550:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":688,"name":"address","nodeType":"ElementaryTypeName","src":"6550:7:2","typeDescriptions":{}}},"id":691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6550:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6539:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":693,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":678,"src":"6577:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":694,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"6586:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6577:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":697,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":678,"src":"6614:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":698,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"6621:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":696,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":555,"src":"6597:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6597:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6577:52:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":702,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"6646:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":701,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"6633:12:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6633:21:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":704,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"6658:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6633:32:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6577:88:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":707,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6576:90:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6539:127:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":686,"id":709,"nodeType":"Return","src":"6520:146:2"}]},"documentation":{"id":676,"nodeType":"StructuredDocumentation","src":"6096:300:2","text":" @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":711,"implemented":true,"kind":"function","modifiers":[],"name":"_isAuthorized","nameLocation":"6410:13:2","nodeType":"FunctionDefinition","parameters":{"id":683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":678,"mutability":"mutable","name":"owner","nameLocation":"6432:5:2","nodeType":"VariableDeclaration","scope":711,"src":"6424:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":677,"name":"address","nodeType":"ElementaryTypeName","src":"6424:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":680,"mutability":"mutable","name":"spender","nameLocation":"6447:7:2","nodeType":"VariableDeclaration","scope":711,"src":"6439:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":679,"name":"address","nodeType":"ElementaryTypeName","src":"6439:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":682,"mutability":"mutable","name":"tokenId","nameLocation":"6464:7:2","nodeType":"VariableDeclaration","scope":711,"src":"6456:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":681,"name":"uint256","nodeType":"ElementaryTypeName","src":"6456:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6423:49:2"},"returnParameters":{"id":686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":685,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":711,"src":"6504:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":684,"name":"bool","nodeType":"ElementaryTypeName","src":"6504:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6503:6:2"},"scope":1241,"src":"6401:272:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":747,"nodeType":"Block","src":"7202:271:2","statements":[{"condition":{"id":726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7216:39:2","subExpression":{"arguments":[{"id":722,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":714,"src":"7231:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":723,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":716,"src":"7238:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":724,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"7247:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":721,"name":"_isAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"7217:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) view returns (bool)"}},"id":725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7217:38:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":746,"nodeType":"IfStatement","src":"7212:255:2","trueBody":{"id":745,"nodeType":"Block","src":"7257:210:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":727,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":714,"src":"7275:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7292:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":729,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7284:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":728,"name":"address","nodeType":"ElementaryTypeName","src":"7284:7:2","typeDescriptions":{}}},"id":731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7284:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7275:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":743,"nodeType":"Block","src":"7373:84:2","statements":[{"errorCall":{"arguments":[{"id":739,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":716,"src":"7425:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":740,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"7434:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":738,"name":"ERC721InsufficientApproval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"7398:26:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) pure"}},"id":741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7398:44:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":742,"nodeType":"RevertStatement","src":"7391:51:2"}]},"id":744,"nodeType":"IfStatement","src":"7271:186:2","trueBody":{"id":737,"nodeType":"Block","src":"7296:71:2","statements":[{"errorCall":{"arguments":[{"id":734,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"7344:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":733,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"7321:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7321:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":736,"nodeType":"RevertStatement","src":"7314:38:2"}]}}]}}]},"documentation":{"id":712,"nodeType":"StructuredDocumentation","src":"6679:421:2","text":" @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if:\n - `spender` does not have approval from `owner` for `tokenId`.\n - `spender` does not have approval to manage all of `owner`'s assets.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":748,"implemented":true,"kind":"function","modifiers":[],"name":"_checkAuthorized","nameLocation":"7114:16:2","nodeType":"FunctionDefinition","parameters":{"id":719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":714,"mutability":"mutable","name":"owner","nameLocation":"7139:5:2","nodeType":"VariableDeclaration","scope":748,"src":"7131:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":713,"name":"address","nodeType":"ElementaryTypeName","src":"7131:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":716,"mutability":"mutable","name":"spender","nameLocation":"7154:7:2","nodeType":"VariableDeclaration","scope":748,"src":"7146:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":715,"name":"address","nodeType":"ElementaryTypeName","src":"7146:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":718,"mutability":"mutable","name":"tokenId","nameLocation":"7171:7:2","nodeType":"VariableDeclaration","scope":748,"src":"7163:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":717,"name":"uint256","nodeType":"ElementaryTypeName","src":"7163:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7130:49:2"},"returnParameters":{"id":720,"nodeType":"ParameterList","parameters":[],"src":"7202:0:2"},"scope":1241,"src":"7105:368:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":763,"nodeType":"Block","src":"8190:78:2","statements":[{"id":762,"nodeType":"UncheckedBlock","src":"8200:62:2","statements":[{"expression":{"id":760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":756,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"8224:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":758,"indexExpression":{"id":757,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":751,"src":"8234:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8224:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":759,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"8246:5:2","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"8224:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":761,"nodeType":"ExpressionStatement","src":"8224:27:2"}]}]},"documentation":{"id":749,"nodeType":"StructuredDocumentation","src":"7479:631:2","text":" @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."},"id":764,"implemented":true,"kind":"function","modifiers":[],"name":"_increaseBalance","nameLocation":"8124:16:2","nodeType":"FunctionDefinition","parameters":{"id":754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":751,"mutability":"mutable","name":"account","nameLocation":"8149:7:2","nodeType":"VariableDeclaration","scope":764,"src":"8141:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":750,"name":"address","nodeType":"ElementaryTypeName","src":"8141:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":753,"mutability":"mutable","name":"value","nameLocation":"8166:5:2","nodeType":"VariableDeclaration","scope":764,"src":"8158:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":752,"name":"uint128","nodeType":"ElementaryTypeName","src":"8158:7:2","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"8140:32:2"},"returnParameters":{"id":755,"nodeType":"ParameterList","parameters":[],"src":"8190:0:2"},"scope":1241,"src":"8115:153:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":853,"nodeType":"Block","src":"8956:700:2","statements":[{"assignments":[777],"declarations":[{"constant":false,"id":777,"mutability":"mutable","name":"from","nameLocation":"8974:4:2","nodeType":"VariableDeclaration","scope":853,"src":"8966:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":776,"name":"address","nodeType":"ElementaryTypeName","src":"8966:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":781,"initialValue":{"arguments":[{"id":779,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"8990:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":778,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"8981:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8981:17:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8966:32:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":782,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"9058:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9074:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9066:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":783,"name":"address","nodeType":"ElementaryTypeName","src":"9066:7:2","typeDescriptions":{}}},"id":786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9066:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9058:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":795,"nodeType":"IfStatement","src":"9054:86:2","trueBody":{"id":794,"nodeType":"Block","src":"9078:62:2","statements":[{"expression":{"arguments":[{"id":789,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"9109:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":790,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"9115:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":791,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"9121:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":788,"name":"_checkAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":748,"src":"9092:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) view"}},"id":792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9092:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":793,"nodeType":"ExpressionStatement","src":"9092:37:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":796,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"9184:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9200:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":798,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9192:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":797,"name":"address","nodeType":"ElementaryTypeName","src":"9192:7:2","typeDescriptions":{}}},"id":800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9192:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9184:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":823,"nodeType":"IfStatement","src":"9180:256:2","trueBody":{"id":822,"nodeType":"Block","src":"9204:232:2","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9317:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":804,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9309:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":803,"name":"address","nodeType":"ElementaryTypeName","src":"9309:7:2","typeDescriptions":{}}},"id":806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9309:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":807,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"9321:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9338:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9330:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":808,"name":"address","nodeType":"ElementaryTypeName","src":"9330:7:2","typeDescriptions":{}}},"id":811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9330:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"66616c7365","id":812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9342:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":802,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1108,1174],"referencedDeclaration":1174,"src":"9300:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9300:48:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":814,"nodeType":"ExpressionStatement","src":"9300:48:2"},{"id":821,"nodeType":"UncheckedBlock","src":"9363:63:2","statements":[{"expression":{"id":819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":815,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"9391:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":817,"indexExpression":{"id":816,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"9401:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9391:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9410:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9391:20:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":820,"nodeType":"ExpressionStatement","src":"9391:20:2"}]}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":824,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"9450:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9464:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":826,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9456:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":825,"name":"address","nodeType":"ElementaryTypeName","src":"9456:7:2","typeDescriptions":{}}},"id":828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9456:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9450:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":838,"nodeType":"IfStatement","src":"9446:107:2","trueBody":{"id":837,"nodeType":"Block","src":"9468:85:2","statements":[{"id":836,"nodeType":"UncheckedBlock","src":"9482:61:2","statements":[{"expression":{"id":834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":830,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"9510:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":832,"indexExpression":{"id":831,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"9520:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9510:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9527:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9510:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":835,"nodeType":"ExpressionStatement","src":"9510:18:2"}]}]}},{"expression":{"id":843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":839,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"9563:7:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":841,"indexExpression":{"id":840,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"9571:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9563:16:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":842,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"9582:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9563:21:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":844,"nodeType":"ExpressionStatement","src":"9563:21:2"},{"eventCall":{"arguments":[{"id":846,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"9609:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":847,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"9615:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":848,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"9619:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":845,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"9600:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9600:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":850,"nodeType":"EmitStatement","src":"9595:32:2"},{"expression":{"id":851,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"9645:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":775,"id":852,"nodeType":"Return","src":"9638:11:2"}]},"documentation":{"id":765,"nodeType":"StructuredDocumentation","src":"8274:582:2","text":" @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."},"id":854,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"8870:7:2","nodeType":"FunctionDefinition","parameters":{"id":772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":767,"mutability":"mutable","name":"to","nameLocation":"8886:2:2","nodeType":"VariableDeclaration","scope":854,"src":"8878:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":766,"name":"address","nodeType":"ElementaryTypeName","src":"8878:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":769,"mutability":"mutable","name":"tokenId","nameLocation":"8898:7:2","nodeType":"VariableDeclaration","scope":854,"src":"8890:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":768,"name":"uint256","nodeType":"ElementaryTypeName","src":"8890:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":771,"mutability":"mutable","name":"auth","nameLocation":"8915:4:2","nodeType":"VariableDeclaration","scope":854,"src":"8907:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":770,"name":"address","nodeType":"ElementaryTypeName","src":"8907:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8877:43:2"},"returnParameters":{"id":775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":774,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":854,"src":"8947:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":773,"name":"address","nodeType":"ElementaryTypeName","src":"8947:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8946:9:2"},"scope":1241,"src":"8861:795:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":903,"nodeType":"Block","src":"10031:274:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":862,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"10045:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10059:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10051:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":863,"name":"address","nodeType":"ElementaryTypeName","src":"10051:7:2","typeDescriptions":{}}},"id":866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10051:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10045:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":876,"nodeType":"IfStatement","src":"10041:87:2","trueBody":{"id":875,"nodeType":"Block","src":"10063:65:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10114:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":870,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10106:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":869,"name":"address","nodeType":"ElementaryTypeName","src":"10106:7:2","typeDescriptions":{}}},"id":872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10106:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":868,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"10084:21:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10084:33:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":874,"nodeType":"RevertStatement","src":"10077:40:2"}]}},{"assignments":[878],"declarations":[{"constant":false,"id":878,"mutability":"mutable","name":"previousOwner","nameLocation":"10145:13:2","nodeType":"VariableDeclaration","scope":903,"src":"10137:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":877,"name":"address","nodeType":"ElementaryTypeName","src":"10137:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":887,"initialValue":{"arguments":[{"id":880,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"10169:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":881,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":859,"src":"10173:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10190:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":883,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10182:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":882,"name":"address","nodeType":"ElementaryTypeName","src":"10182:7:2","typeDescriptions":{}}},"id":885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10182:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":879,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"10161:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10161:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10137:56:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":888,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"10207:13:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10232:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":890,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10224:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":889,"name":"address","nodeType":"ElementaryTypeName","src":"10224:7:2","typeDescriptions":{}}},"id":892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10224:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10207:27:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":902,"nodeType":"IfStatement","src":"10203:96:2","trueBody":{"id":901,"nodeType":"Block","src":"10236:63:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10285:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10277:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":895,"name":"address","nodeType":"ElementaryTypeName","src":"10277:7:2","typeDescriptions":{}}},"id":898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10277:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":894,"name":"ERC721InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"10257:19:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10257:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":900,"nodeType":"RevertStatement","src":"10250:38:2"}]}}]},"documentation":{"id":855,"nodeType":"StructuredDocumentation","src":"9662:311:2","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"id":904,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"9987:5:2","nodeType":"FunctionDefinition","parameters":{"id":860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":857,"mutability":"mutable","name":"to","nameLocation":"10001:2:2","nodeType":"VariableDeclaration","scope":904,"src":"9993:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":856,"name":"address","nodeType":"ElementaryTypeName","src":"9993:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":859,"mutability":"mutable","name":"tokenId","nameLocation":"10013:7:2","nodeType":"VariableDeclaration","scope":904,"src":"10005:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":858,"name":"uint256","nodeType":"ElementaryTypeName","src":"10005:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9992:29:2"},"returnParameters":{"id":861,"nodeType":"ParameterList","parameters":[],"src":"10031:0:2"},"scope":1241,"src":"9978:327:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":918,"nodeType":"Block","src":"10713:43:2","statements":[{"expression":{"arguments":[{"id":913,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":907,"src":"10733:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":914,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"10737:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10746:2:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":912,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[919,949],"referencedDeclaration":949,"src":"10723:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10723:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":917,"nodeType":"ExpressionStatement","src":"10723:26:2"}]},"documentation":{"id":905,"nodeType":"StructuredDocumentation","src":"10311:340:2","text":" @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":919,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10665:9:2","nodeType":"FunctionDefinition","parameters":{"id":910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":907,"mutability":"mutable","name":"to","nameLocation":"10683:2:2","nodeType":"VariableDeclaration","scope":919,"src":"10675:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":906,"name":"address","nodeType":"ElementaryTypeName","src":"10675:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":909,"mutability":"mutable","name":"tokenId","nameLocation":"10695:7:2","nodeType":"VariableDeclaration","scope":919,"src":"10687:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":908,"name":"uint256","nodeType":"ElementaryTypeName","src":"10687:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10674:29:2"},"returnParameters":{"id":911,"nodeType":"ParameterList","parameters":[],"src":"10713:0:2"},"scope":1241,"src":"10656:100:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":948,"nodeType":"Block","src":"11061:123:2","statements":[{"expression":{"arguments":[{"id":930,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":922,"src":"11077:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":931,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"11081:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":929,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":904,"src":"11071:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11071:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":933,"nodeType":"ExpressionStatement","src":"11071:18:2"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":937,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"11133:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11133:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11155:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11147:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":939,"name":"address","nodeType":"ElementaryTypeName","src":"11147:7:2","typeDescriptions":{}}},"id":942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11147:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":943,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":922,"src":"11159:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":944,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"11163:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":945,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":926,"src":"11172:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":934,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"11099:11:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$1481_$","typeString":"type(library ERC721Utils)"}},"id":936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11111:21:2","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":1480,"src":"11099:33:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11099:78:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":947,"nodeType":"ExpressionStatement","src":"11099:78:2"}]},"documentation":{"id":920,"nodeType":"StructuredDocumentation","src":"10762:210:2","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":949,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10986:9:2","nodeType":"FunctionDefinition","parameters":{"id":927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":922,"mutability":"mutable","name":"to","nameLocation":"11004:2:2","nodeType":"VariableDeclaration","scope":949,"src":"10996:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":921,"name":"address","nodeType":"ElementaryTypeName","src":"10996:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":924,"mutability":"mutable","name":"tokenId","nameLocation":"11016:7:2","nodeType":"VariableDeclaration","scope":949,"src":"11008:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":923,"name":"uint256","nodeType":"ElementaryTypeName","src":"11008:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":926,"mutability":"mutable","name":"data","nameLocation":"11038:4:2","nodeType":"VariableDeclaration","scope":949,"src":"11025:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":925,"name":"bytes","nodeType":"ElementaryTypeName","src":"11025:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10995:48:2"},"returnParameters":{"id":928,"nodeType":"ParameterList","parameters":[],"src":"11061:0:2"},"scope":1241,"src":"10977:207:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":981,"nodeType":"Block","src":"11551:186:2","statements":[{"assignments":[956],"declarations":[{"constant":false,"id":956,"mutability":"mutable","name":"previousOwner","nameLocation":"11569:13:2","nodeType":"VariableDeclaration","scope":981,"src":"11561:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":955,"name":"address","nodeType":"ElementaryTypeName","src":"11561:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":968,"initialValue":{"arguments":[{"arguments":[{"hexValue":"30","id":960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11601:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":959,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11593:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":958,"name":"address","nodeType":"ElementaryTypeName","src":"11593:7:2","typeDescriptions":{}}},"id":961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11593:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":962,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":952,"src":"11605:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11622:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":964,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11614:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":963,"name":"address","nodeType":"ElementaryTypeName","src":"11614:7:2","typeDescriptions":{}}},"id":966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11614:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":957,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"11585:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11585:40:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11561:64:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":969,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"11639:13:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11664:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":971,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11656:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":970,"name":"address","nodeType":"ElementaryTypeName","src":"11656:7:2","typeDescriptions":{}}},"id":973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11656:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11639:27:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":980,"nodeType":"IfStatement","src":"11635:96:2","trueBody":{"id":979,"nodeType":"Block","src":"11668:63:2","statements":[{"errorCall":{"arguments":[{"id":976,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":952,"src":"11712:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":975,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"11689:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11689:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":978,"nodeType":"RevertStatement","src":"11682:38:2"}]}}]},"documentation":{"id":950,"nodeType":"StructuredDocumentation","src":"11190:315:2","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":982,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"11519:5:2","nodeType":"FunctionDefinition","parameters":{"id":953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":952,"mutability":"mutable","name":"tokenId","nameLocation":"11533:7:2","nodeType":"VariableDeclaration","scope":982,"src":"11525:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":951,"name":"uint256","nodeType":"ElementaryTypeName","src":"11525:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11524:17:2"},"returnParameters":{"id":954,"nodeType":"ParameterList","parameters":[],"src":"11551:0:2"},"scope":1241,"src":"11510:227:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1041,"nodeType":"Block","src":"12132:389:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":992,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"12146:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12160:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":994,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12152:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":993,"name":"address","nodeType":"ElementaryTypeName","src":"12152:7:2","typeDescriptions":{}}},"id":996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12152:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12146:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1006,"nodeType":"IfStatement","src":"12142:87:2","trueBody":{"id":1005,"nodeType":"Block","src":"12164:65:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12215:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1000,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12207:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":999,"name":"address","nodeType":"ElementaryTypeName","src":"12207:7:2","typeDescriptions":{}}},"id":1002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12207:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":998,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"12185:21:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12185:33:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1004,"nodeType":"RevertStatement","src":"12178:40:2"}]}},{"assignments":[1008],"declarations":[{"constant":false,"id":1008,"mutability":"mutable","name":"previousOwner","nameLocation":"12246:13:2","nodeType":"VariableDeclaration","scope":1041,"src":"12238:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1007,"name":"address","nodeType":"ElementaryTypeName","src":"12238:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1017,"initialValue":{"arguments":[{"id":1010,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"12270:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1011,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"12274:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12291:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1013,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12283:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1012,"name":"address","nodeType":"ElementaryTypeName","src":"12283:7:2","typeDescriptions":{}}},"id":1015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12283:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1009,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"12262:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12262:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"12238:56:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1018,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"12308:13:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12333:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1020,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12325:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1019,"name":"address","nodeType":"ElementaryTypeName","src":"12325:7:2","typeDescriptions":{}}},"id":1022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12325:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12308:27:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1029,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"12410:13:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1030,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"12427:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12410:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1039,"nodeType":"IfStatement","src":"12406:109:2","trueBody":{"id":1038,"nodeType":"Block","src":"12433:82:2","statements":[{"errorCall":{"arguments":[{"id":1033,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"12475:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1034,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"12481:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1035,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"12490:13:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1032,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":209,"src":"12454:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address) pure"}},"id":1036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12454:50:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1037,"nodeType":"RevertStatement","src":"12447:57:2"}]}},"id":1040,"nodeType":"IfStatement","src":"12304:211:2","trueBody":{"id":1028,"nodeType":"Block","src":"12337:63:2","statements":[{"errorCall":{"arguments":[{"id":1025,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"12381:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1024,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"12358:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12358:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1027,"nodeType":"RevertStatement","src":"12351:38:2"}]}}]},"documentation":{"id":983,"nodeType":"StructuredDocumentation","src":"11743:313:2","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"id":1042,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"12070:9:2","nodeType":"FunctionDefinition","parameters":{"id":990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":985,"mutability":"mutable","name":"from","nameLocation":"12088:4:2","nodeType":"VariableDeclaration","scope":1042,"src":"12080:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":984,"name":"address","nodeType":"ElementaryTypeName","src":"12080:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":987,"mutability":"mutable","name":"to","nameLocation":"12102:2:2","nodeType":"VariableDeclaration","scope":1042,"src":"12094:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":986,"name":"address","nodeType":"ElementaryTypeName","src":"12094:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":989,"mutability":"mutable","name":"tokenId","nameLocation":"12114:7:2","nodeType":"VariableDeclaration","scope":1042,"src":"12106:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":988,"name":"uint256","nodeType":"ElementaryTypeName","src":"12106:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12079:43:2"},"returnParameters":{"id":991,"nodeType":"ParameterList","parameters":[],"src":"12132:0:2"},"scope":1241,"src":"12061:460:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1059,"nodeType":"Block","src":"13530:53:2","statements":[{"expression":{"arguments":[{"id":1053,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"13554:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1054,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1047,"src":"13560:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1055,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1049,"src":"13564:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13573:2:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1052,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[1060,1090],"referencedDeclaration":1090,"src":"13540:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13540:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1058,"nodeType":"ExpressionStatement","src":"13540:36:2"}]},"documentation":{"id":1043,"nodeType":"StructuredDocumentation","src":"12527:923:2","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC-721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":1060,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13464:13:2","nodeType":"FunctionDefinition","parameters":{"id":1050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1045,"mutability":"mutable","name":"from","nameLocation":"13486:4:2","nodeType":"VariableDeclaration","scope":1060,"src":"13478:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1044,"name":"address","nodeType":"ElementaryTypeName","src":"13478:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1047,"mutability":"mutable","name":"to","nameLocation":"13500:2:2","nodeType":"VariableDeclaration","scope":1060,"src":"13492:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1046,"name":"address","nodeType":"ElementaryTypeName","src":"13492:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1049,"mutability":"mutable","name":"tokenId","nameLocation":"13512:7:2","nodeType":"VariableDeclaration","scope":1060,"src":"13504:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1048,"name":"uint256","nodeType":"ElementaryTypeName","src":"13504:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13477:43:2"},"returnParameters":{"id":1051,"nodeType":"ParameterList","parameters":[],"src":"13530:0:2"},"scope":1241,"src":"13455:128:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1089,"nodeType":"Block","src":"13922:127:2","statements":[{"expression":{"arguments":[{"id":1073,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1063,"src":"13942:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1074,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"13948:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1075,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1067,"src":"13952:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1072,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"13932:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13932:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1077,"nodeType":"ExpressionStatement","src":"13932:28:2"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1081,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"14004:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14004:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1083,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1063,"src":"14018:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1084,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"14024:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1085,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1067,"src":"14028:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1086,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1069,"src":"14037:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1078,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"13970:11:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$1481_$","typeString":"type(library ERC721Utils)"}},"id":1080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13982:21:2","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":1480,"src":"13970:33:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":1087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13970:72:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1088,"nodeType":"ExpressionStatement","src":"13970:72:2"}]},"documentation":{"id":1061,"nodeType":"StructuredDocumentation","src":"13589:226:2","text":" @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":1090,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13829:13:2","nodeType":"FunctionDefinition","parameters":{"id":1070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1063,"mutability":"mutable","name":"from","nameLocation":"13851:4:2","nodeType":"VariableDeclaration","scope":1090,"src":"13843:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1062,"name":"address","nodeType":"ElementaryTypeName","src":"13843:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1065,"mutability":"mutable","name":"to","nameLocation":"13865:2:2","nodeType":"VariableDeclaration","scope":1090,"src":"13857:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1064,"name":"address","nodeType":"ElementaryTypeName","src":"13857:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1067,"mutability":"mutable","name":"tokenId","nameLocation":"13877:7:2","nodeType":"VariableDeclaration","scope":1090,"src":"13869:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1066,"name":"uint256","nodeType":"ElementaryTypeName","src":"13869:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1069,"mutability":"mutable","name":"data","nameLocation":"13899:4:2","nodeType":"VariableDeclaration","scope":1090,"src":"13886:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1068,"name":"bytes","nodeType":"ElementaryTypeName","src":"13886:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13842:62:2"},"returnParameters":{"id":1071,"nodeType":"ParameterList","parameters":[],"src":"13922:0:2"},"scope":1241,"src":"13820:229:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1107,"nodeType":"Block","src":"14562:50:2","statements":[{"expression":{"arguments":[{"id":1101,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1093,"src":"14581:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1102,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1095,"src":"14585:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1103,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1097,"src":"14594:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":1104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14600:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1100,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1108,1174],"referencedDeclaration":1174,"src":"14572:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":1105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14572:33:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1106,"nodeType":"ExpressionStatement","src":"14572:33:2"}]},"documentation":{"id":1091,"nodeType":"StructuredDocumentation","src":"14055:432:2","text":" @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":1108,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14501:8:2","nodeType":"FunctionDefinition","parameters":{"id":1098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1093,"mutability":"mutable","name":"to","nameLocation":"14518:2:2","nodeType":"VariableDeclaration","scope":1108,"src":"14510:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1092,"name":"address","nodeType":"ElementaryTypeName","src":"14510:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1095,"mutability":"mutable","name":"tokenId","nameLocation":"14530:7:2","nodeType":"VariableDeclaration","scope":1108,"src":"14522:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1094,"name":"uint256","nodeType":"ElementaryTypeName","src":"14522:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1097,"mutability":"mutable","name":"auth","nameLocation":"14547:4:2","nodeType":"VariableDeclaration","scope":1108,"src":"14539:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1096,"name":"address","nodeType":"ElementaryTypeName","src":"14539:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14509:43:2"},"returnParameters":{"id":1099,"nodeType":"ParameterList","parameters":[],"src":"14562:0:2"},"scope":1241,"src":"14492:120:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1173,"nodeType":"Block","src":"14888:568:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1120,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"14954:9:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1121,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"14967:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14983:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1123,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14975:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1122,"name":"address","nodeType":"ElementaryTypeName","src":"14975:7:2","typeDescriptions":{}}},"id":1125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14975:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14967:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14954:31:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1166,"nodeType":"IfStatement","src":"14950:460:2","trueBody":{"id":1165,"nodeType":"Block","src":"14987:423:2","statements":[{"assignments":[1129],"declarations":[{"constant":false,"id":1129,"mutability":"mutable","name":"owner","nameLocation":"15009:5:2","nodeType":"VariableDeclaration","scope":1165,"src":"15001:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1128,"name":"address","nodeType":"ElementaryTypeName","src":"15001:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1133,"initialValue":{"arguments":[{"id":1131,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"15031:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1130,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"15017:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15017:22:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"15001:38:2"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1134,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"15167:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15183:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1136,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15175:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1135,"name":"address","nodeType":"ElementaryTypeName","src":"15175:7:2","typeDescriptions":{}}},"id":1138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15175:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15167:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1140,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"15189:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1141,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"15198:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15189:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15167:35:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":1148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"15206:30:2","subExpression":{"arguments":[{"id":1145,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"15224:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1146,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"15231:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1144,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":555,"src":"15207:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15207:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15167:69:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1155,"nodeType":"IfStatement","src":"15163:142:2","trueBody":{"id":1154,"nodeType":"Block","src":"15238:67:2","statements":[{"errorCall":{"arguments":[{"id":1151,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"15285:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1150,"name":"ERC721InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":231,"src":"15263:21:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15263:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1153,"nodeType":"RevertStatement","src":"15256:34:2"}]}},{"condition":{"id":1156,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"15323:9:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1164,"nodeType":"IfStatement","src":"15319:81:2","trueBody":{"id":1163,"nodeType":"Block","src":"15334:66:2","statements":[{"eventCall":{"arguments":[{"id":1158,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"15366:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1159,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"15373:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1160,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"15377:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1157,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"15357:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15357:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1162,"nodeType":"EmitStatement","src":"15352:33:2"}]}}]}},{"expression":{"id":1171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1167,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"15420:15:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1169,"indexExpression":{"id":1168,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"15436:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15420:24:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1170,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"15447:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15420:29:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1172,"nodeType":"ExpressionStatement","src":"15420:29:2"}]},"documentation":{"id":1109,"nodeType":"StructuredDocumentation","src":"14618:171:2","text":" @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."},"id":1174,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14803:8:2","nodeType":"FunctionDefinition","parameters":{"id":1118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1111,"mutability":"mutable","name":"to","nameLocation":"14820:2:2","nodeType":"VariableDeclaration","scope":1174,"src":"14812:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1110,"name":"address","nodeType":"ElementaryTypeName","src":"14812:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1113,"mutability":"mutable","name":"tokenId","nameLocation":"14832:7:2","nodeType":"VariableDeclaration","scope":1174,"src":"14824:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1112,"name":"uint256","nodeType":"ElementaryTypeName","src":"14824:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1115,"mutability":"mutable","name":"auth","nameLocation":"14849:4:2","nodeType":"VariableDeclaration","scope":1174,"src":"14841:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1114,"name":"address","nodeType":"ElementaryTypeName","src":"14841:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1117,"mutability":"mutable","name":"emitEvent","nameLocation":"14860:9:2","nodeType":"VariableDeclaration","scope":1174,"src":"14855:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1116,"name":"bool","nodeType":"ElementaryTypeName","src":"14855:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14811:59:2"},"returnParameters":{"id":1119,"nodeType":"ParameterList","parameters":[],"src":"14888:0:2"},"scope":1241,"src":"14794:662:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1210,"nodeType":"Block","src":"15758:219:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1184,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"15772:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15792:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1186,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15784:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1185,"name":"address","nodeType":"ElementaryTypeName","src":"15784:7:2","typeDescriptions":{}}},"id":1188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15784:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15772:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1195,"nodeType":"IfStatement","src":"15768:91:2","trueBody":{"id":1194,"nodeType":"Block","src":"15796:63:2","statements":[{"errorCall":{"arguments":[{"id":1191,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"15839:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1190,"name":"ERC721InvalidOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"15817:21:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15817:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1193,"nodeType":"RevertStatement","src":"15810:38:2"}]}},{"expression":{"id":1202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1196,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"15868:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1199,"indexExpression":{"id":1197,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1177,"src":"15887:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15868:25:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1200,"indexExpression":{"id":1198,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"15894:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15868:35:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1201,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1181,"src":"15906:8:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15868:46:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1203,"nodeType":"ExpressionStatement","src":"15868:46:2"},{"eventCall":{"arguments":[{"id":1205,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1177,"src":"15944:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1206,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"15951:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1207,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1181,"src":"15961:8:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1204,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"15929:14:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15929:41:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1209,"nodeType":"EmitStatement","src":"15924:46:2"}]},"documentation":{"id":1175,"nodeType":"StructuredDocumentation","src":"15462:198:2","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."},"id":1211,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"15674:18:2","nodeType":"FunctionDefinition","parameters":{"id":1182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1177,"mutability":"mutable","name":"owner","nameLocation":"15701:5:2","nodeType":"VariableDeclaration","scope":1211,"src":"15693:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1176,"name":"address","nodeType":"ElementaryTypeName","src":"15693:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1179,"mutability":"mutable","name":"operator","nameLocation":"15716:8:2","nodeType":"VariableDeclaration","scope":1211,"src":"15708:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1178,"name":"address","nodeType":"ElementaryTypeName","src":"15708:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1181,"mutability":"mutable","name":"approved","nameLocation":"15731:8:2","nodeType":"VariableDeclaration","scope":1211,"src":"15726:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1180,"name":"bool","nodeType":"ElementaryTypeName","src":"15726:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15692:48:2"},"returnParameters":{"id":1183,"nodeType":"ParameterList","parameters":[],"src":"15758:0:2"},"scope":1241,"src":"15665:312:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1239,"nodeType":"Block","src":"16284:169:2","statements":[{"assignments":[1220],"declarations":[{"constant":false,"id":1220,"mutability":"mutable","name":"owner","nameLocation":"16302:5:2","nodeType":"VariableDeclaration","scope":1239,"src":"16294:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1219,"name":"address","nodeType":"ElementaryTypeName","src":"16294:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1224,"initialValue":{"arguments":[{"id":1222,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1214,"src":"16319:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1221,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"16310:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16310:17:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"16294:33:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1225,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"16341:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16358:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1227,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16350:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1226,"name":"address","nodeType":"ElementaryTypeName","src":"16350:7:2","typeDescriptions":{}}},"id":1229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16350:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16341:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1236,"nodeType":"IfStatement","src":"16337:88:2","trueBody":{"id":1235,"nodeType":"Block","src":"16362:63:2","statements":[{"errorCall":{"arguments":[{"id":1232,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1214,"src":"16406:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1231,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"16383:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16383:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1234,"nodeType":"RevertStatement","src":"16376:38:2"}]}},{"expression":{"id":1237,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"16441:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1218,"id":1238,"nodeType":"Return","src":"16434:12:2"}]},"documentation":{"id":1212,"nodeType":"StructuredDocumentation","src":"15983:224:2","text":" @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."},"id":1240,"implemented":true,"kind":"function","modifiers":[],"name":"_requireOwned","nameLocation":"16221:13:2","nodeType":"FunctionDefinition","parameters":{"id":1215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1214,"mutability":"mutable","name":"tokenId","nameLocation":"16243:7:2","nodeType":"VariableDeclaration","scope":1240,"src":"16235:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1213,"name":"uint256","nodeType":"ElementaryTypeName","src":"16235:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16234:17:2"},"returnParameters":{"id":1218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1217,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1240,"src":"16275:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1216,"name":"address","nodeType":"ElementaryTypeName","src":"16275:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16274:9:2"},"scope":1241,"src":"16212:241:2","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1242,"src":"775:15680:2","usedErrors":[195,200,209,214,219,226,231,236],"usedEvents":[1257,1266,1275]}],"src":"107:16349:2"},"id":2},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[2868],"IERC721":[1358]},"id":1359,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1243,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:3"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1245,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1359,"sourceUnit":2869,"src":"134:62:3","symbolAliases":[{"foreign":{"id":1244,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2868,"src":"142:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1247,"name":"IERC165","nameLocations":["288:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":2868,"src":"288:7:3"},"id":1248,"nodeType":"InheritanceSpecifier","src":"288:7:3"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":1246,"nodeType":"StructuredDocumentation","src":"198:68:3","text":" @dev Required interface of an ERC-721 compliant contract."},"fullyImplemented":false,"id":1358,"linearizedBaseContracts":[1358,2868],"name":"IERC721","nameLocation":"277:7:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1249,"nodeType":"StructuredDocumentation","src":"302:88:3","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1257,"name":"Transfer","nameLocation":"401:8:3","nodeType":"EventDefinition","parameters":{"id":1256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1251,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"426:4:3","nodeType":"VariableDeclaration","scope":1257,"src":"410:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1250,"name":"address","nodeType":"ElementaryTypeName","src":"410:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1253,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"448:2:3","nodeType":"VariableDeclaration","scope":1257,"src":"432:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1252,"name":"address","nodeType":"ElementaryTypeName","src":"432:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1255,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"468:7:3","nodeType":"VariableDeclaration","scope":1257,"src":"452:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1254,"name":"uint256","nodeType":"ElementaryTypeName","src":"452:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"409:67:3"},"src":"395:82:3"},{"anonymous":false,"documentation":{"id":1258,"nodeType":"StructuredDocumentation","src":"483:94:3","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1266,"name":"Approval","nameLocation":"588:8:3","nodeType":"EventDefinition","parameters":{"id":1265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1260,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"613:5:3","nodeType":"VariableDeclaration","scope":1266,"src":"597:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1259,"name":"address","nodeType":"ElementaryTypeName","src":"597:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1262,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"636:8:3","nodeType":"VariableDeclaration","scope":1266,"src":"620:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1261,"name":"address","nodeType":"ElementaryTypeName","src":"620:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1264,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"662:7:3","nodeType":"VariableDeclaration","scope":1266,"src":"646:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1263,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"596:74:3"},"src":"582:89:3"},{"anonymous":false,"documentation":{"id":1267,"nodeType":"StructuredDocumentation","src":"677:117:3","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":1275,"name":"ApprovalForAll","nameLocation":"805:14:3","nodeType":"EventDefinition","parameters":{"id":1274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1269,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"836:5:3","nodeType":"VariableDeclaration","scope":1275,"src":"820:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1268,"name":"address","nodeType":"ElementaryTypeName","src":"820:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1271,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"859:8:3","nodeType":"VariableDeclaration","scope":1275,"src":"843:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1270,"name":"address","nodeType":"ElementaryTypeName","src":"843:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1273,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"874:8:3","nodeType":"VariableDeclaration","scope":1275,"src":"869:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1272,"name":"bool","nodeType":"ElementaryTypeName","src":"869:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"819:64:3"},"src":"799:85:3"},{"documentation":{"id":1276,"nodeType":"StructuredDocumentation","src":"890:76:3","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":1283,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"980:9:3","nodeType":"FunctionDefinition","parameters":{"id":1279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1278,"mutability":"mutable","name":"owner","nameLocation":"998:5:3","nodeType":"VariableDeclaration","scope":1283,"src":"990:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1277,"name":"address","nodeType":"ElementaryTypeName","src":"990:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"989:15:3"},"returnParameters":{"id":1282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1281,"mutability":"mutable","name":"balance","nameLocation":"1036:7:3","nodeType":"VariableDeclaration","scope":1283,"src":"1028:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1280,"name":"uint256","nodeType":"ElementaryTypeName","src":"1028:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1027:17:3"},"scope":1358,"src":"971:74:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1284,"nodeType":"StructuredDocumentation","src":"1051:131:3","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":1291,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1196:7:3","nodeType":"FunctionDefinition","parameters":{"id":1287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1286,"mutability":"mutable","name":"tokenId","nameLocation":"1212:7:3","nodeType":"VariableDeclaration","scope":1291,"src":"1204:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1285,"name":"uint256","nodeType":"ElementaryTypeName","src":"1204:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1203:17:3"},"returnParameters":{"id":1290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1289,"mutability":"mutable","name":"owner","nameLocation":"1252:5:3","nodeType":"VariableDeclaration","scope":1291,"src":"1244:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1288,"name":"address","nodeType":"ElementaryTypeName","src":"1244:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1243:15:3"},"scope":1358,"src":"1187:72:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1292,"nodeType":"StructuredDocumentation","src":"1265:565:3","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":1303,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1844:16:3","nodeType":"FunctionDefinition","parameters":{"id":1301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1294,"mutability":"mutable","name":"from","nameLocation":"1869:4:3","nodeType":"VariableDeclaration","scope":1303,"src":"1861:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1293,"name":"address","nodeType":"ElementaryTypeName","src":"1861:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1296,"mutability":"mutable","name":"to","nameLocation":"1883:2:3","nodeType":"VariableDeclaration","scope":1303,"src":"1875:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1295,"name":"address","nodeType":"ElementaryTypeName","src":"1875:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1298,"mutability":"mutable","name":"tokenId","nameLocation":"1895:7:3","nodeType":"VariableDeclaration","scope":1303,"src":"1887:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1297,"name":"uint256","nodeType":"ElementaryTypeName","src":"1887:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1300,"mutability":"mutable","name":"data","nameLocation":"1919:4:3","nodeType":"VariableDeclaration","scope":1303,"src":"1904:19:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1299,"name":"bytes","nodeType":"ElementaryTypeName","src":"1904:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1860:64:3"},"returnParameters":{"id":1302,"nodeType":"ParameterList","parameters":[],"src":"1933:0:3"},"scope":1358,"src":"1835:99:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1304,"nodeType":"StructuredDocumentation","src":"1940:706:3","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":1313,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2660:16:3","nodeType":"FunctionDefinition","parameters":{"id":1311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1306,"mutability":"mutable","name":"from","nameLocation":"2685:4:3","nodeType":"VariableDeclaration","scope":1313,"src":"2677:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1305,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1308,"mutability":"mutable","name":"to","nameLocation":"2699:2:3","nodeType":"VariableDeclaration","scope":1313,"src":"2691:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1307,"name":"address","nodeType":"ElementaryTypeName","src":"2691:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1310,"mutability":"mutable","name":"tokenId","nameLocation":"2711:7:3","nodeType":"VariableDeclaration","scope":1313,"src":"2703:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1309,"name":"uint256","nodeType":"ElementaryTypeName","src":"2703:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2676:43:3"},"returnParameters":{"id":1312,"nodeType":"ParameterList","parameters":[],"src":"2728:0:3"},"scope":1358,"src":"2651:78:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1314,"nodeType":"StructuredDocumentation","src":"2735:733:3","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1323,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3482:12:3","nodeType":"FunctionDefinition","parameters":{"id":1321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1316,"mutability":"mutable","name":"from","nameLocation":"3503:4:3","nodeType":"VariableDeclaration","scope":1323,"src":"3495:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1315,"name":"address","nodeType":"ElementaryTypeName","src":"3495:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1318,"mutability":"mutable","name":"to","nameLocation":"3517:2:3","nodeType":"VariableDeclaration","scope":1323,"src":"3509:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1317,"name":"address","nodeType":"ElementaryTypeName","src":"3509:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1320,"mutability":"mutable","name":"tokenId","nameLocation":"3529:7:3","nodeType":"VariableDeclaration","scope":1323,"src":"3521:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1319,"name":"uint256","nodeType":"ElementaryTypeName","src":"3521:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3494:43:3"},"returnParameters":{"id":1322,"nodeType":"ParameterList","parameters":[],"src":"3546:0:3"},"scope":1358,"src":"3473:74:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1324,"nodeType":"StructuredDocumentation","src":"3553:452:3","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1331,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4019:7:3","nodeType":"FunctionDefinition","parameters":{"id":1329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1326,"mutability":"mutable","name":"to","nameLocation":"4035:2:3","nodeType":"VariableDeclaration","scope":1331,"src":"4027:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1325,"name":"address","nodeType":"ElementaryTypeName","src":"4027:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1328,"mutability":"mutable","name":"tokenId","nameLocation":"4047:7:3","nodeType":"VariableDeclaration","scope":1331,"src":"4039:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1327,"name":"uint256","nodeType":"ElementaryTypeName","src":"4039:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4026:29:3"},"returnParameters":{"id":1330,"nodeType":"ParameterList","parameters":[],"src":"4064:0:3"},"scope":1358,"src":"4010:55:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1332,"nodeType":"StructuredDocumentation","src":"4071:315:3","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":1339,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4400:17:3","nodeType":"FunctionDefinition","parameters":{"id":1337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1334,"mutability":"mutable","name":"operator","nameLocation":"4426:8:3","nodeType":"VariableDeclaration","scope":1339,"src":"4418:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1333,"name":"address","nodeType":"ElementaryTypeName","src":"4418:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1336,"mutability":"mutable","name":"approved","nameLocation":"4441:8:3","nodeType":"VariableDeclaration","scope":1339,"src":"4436:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1335,"name":"bool","nodeType":"ElementaryTypeName","src":"4436:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4417:33:3"},"returnParameters":{"id":1338,"nodeType":"ParameterList","parameters":[],"src":"4459:0:3"},"scope":1358,"src":"4391:69:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1340,"nodeType":"StructuredDocumentation","src":"4466:139:3","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":1347,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4619:11:3","nodeType":"FunctionDefinition","parameters":{"id":1343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1342,"mutability":"mutable","name":"tokenId","nameLocation":"4639:7:3","nodeType":"VariableDeclaration","scope":1347,"src":"4631:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1341,"name":"uint256","nodeType":"ElementaryTypeName","src":"4631:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4630:17:3"},"returnParameters":{"id":1346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1345,"mutability":"mutable","name":"operator","nameLocation":"4679:8:3","nodeType":"VariableDeclaration","scope":1347,"src":"4671:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1344,"name":"address","nodeType":"ElementaryTypeName","src":"4671:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4670:18:3"},"scope":1358,"src":"4610:79:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1348,"nodeType":"StructuredDocumentation","src":"4695:138:3","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":1357,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4847:16:3","nodeType":"FunctionDefinition","parameters":{"id":1353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1350,"mutability":"mutable","name":"owner","nameLocation":"4872:5:3","nodeType":"VariableDeclaration","scope":1357,"src":"4864:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1349,"name":"address","nodeType":"ElementaryTypeName","src":"4864:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1352,"mutability":"mutable","name":"operator","nameLocation":"4887:8:3","nodeType":"VariableDeclaration","scope":1357,"src":"4879:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1351,"name":"address","nodeType":"ElementaryTypeName","src":"4879:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4863:33:3"},"returnParameters":{"id":1356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1355,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1357,"src":"4920:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1354,"name":"bool","nodeType":"ElementaryTypeName","src":"4920:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4919:6:3"},"scope":1358,"src":"4838:88:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1359,"src":"267:4661:3","usedErrors":[],"usedEvents":[1257,1266,1275]}],"src":"108:4821:3"},"id":3},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[1376]},"id":1377,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1360,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"116:24:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":1361,"nodeType":"StructuredDocumentation","src":"142:154:4","text":" @title ERC-721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC-721 asset contracts."},"fullyImplemented":false,"id":1376,"linearizedBaseContracts":[1376],"name":"IERC721Receiver","nameLocation":"307:15:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1362,"nodeType":"StructuredDocumentation","src":"329:500:4","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":1375,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"843:16:4","nodeType":"FunctionDefinition","parameters":{"id":1371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1364,"mutability":"mutable","name":"operator","nameLocation":"877:8:4","nodeType":"VariableDeclaration","scope":1375,"src":"869:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1363,"name":"address","nodeType":"ElementaryTypeName","src":"869:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1366,"mutability":"mutable","name":"from","nameLocation":"903:4:4","nodeType":"VariableDeclaration","scope":1375,"src":"895:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1365,"name":"address","nodeType":"ElementaryTypeName","src":"895:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1368,"mutability":"mutable","name":"tokenId","nameLocation":"925:7:4","nodeType":"VariableDeclaration","scope":1375,"src":"917:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1367,"name":"uint256","nodeType":"ElementaryTypeName","src":"917:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1370,"mutability":"mutable","name":"data","nameLocation":"957:4:4","nodeType":"VariableDeclaration","scope":1375,"src":"942:19:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1369,"name":"bytes","nodeType":"ElementaryTypeName","src":"942:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"859:108:4"},"returnParameters":{"id":1374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1373,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1375,"src":"986:6:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1372,"name":"bytes4","nodeType":"ElementaryTypeName","src":"986:6:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"985:8:4"},"scope":1376,"src":"834:160:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1377,"src":"297:699:4","usedErrors":[],"usedEvents":[]}],"src":"116:881:4"},"id":4},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","exportedSymbols":{"IERC721":[1358],"IERC721Metadata":[1404]},"id":1405,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1378,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"127:24:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":1380,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1405,"sourceUnit":1359,"src":"153:39:5","symbolAliases":[{"foreign":{"id":1379,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1358,"src":"161:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1382,"name":"IERC721","nameLocations":["357:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":1358,"src":"357:7:5"},"id":1383,"nodeType":"InheritanceSpecifier","src":"357:7:5"}],"canonicalName":"IERC721Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1381,"nodeType":"StructuredDocumentation","src":"194:133:5","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":1404,"linearizedBaseContracts":[1404,1358,2868],"name":"IERC721Metadata","nameLocation":"338:15:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1384,"nodeType":"StructuredDocumentation","src":"371:58:5","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":1389,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"443:4:5","nodeType":"FunctionDefinition","parameters":{"id":1385,"nodeType":"ParameterList","parameters":[],"src":"447:2:5"},"returnParameters":{"id":1388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1387,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1389,"src":"473:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1386,"name":"string","nodeType":"ElementaryTypeName","src":"473:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"472:15:5"},"scope":1404,"src":"434:54:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1390,"nodeType":"StructuredDocumentation","src":"494:60:5","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":1395,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"568:6:5","nodeType":"FunctionDefinition","parameters":{"id":1391,"nodeType":"ParameterList","parameters":[],"src":"574:2:5"},"returnParameters":{"id":1394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1393,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1395,"src":"600:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1392,"name":"string","nodeType":"ElementaryTypeName","src":"600:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"599:15:5"},"scope":1404,"src":"559:56:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1396,"nodeType":"StructuredDocumentation","src":"621:90:5","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":1403,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"725:8:5","nodeType":"FunctionDefinition","parameters":{"id":1399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1398,"mutability":"mutable","name":"tokenId","nameLocation":"742:7:5","nodeType":"VariableDeclaration","scope":1403,"src":"734:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1397,"name":"uint256","nodeType":"ElementaryTypeName","src":"734:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"733:17:5"},"returnParameters":{"id":1402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1401,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1403,"src":"774:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1400,"name":"string","nodeType":"ElementaryTypeName","src":"774:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"773:15:5"},"scope":1404,"src":"716:73:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1405,"src":"328:463:5","usedErrors":[],"usedEvents":[1257,1266,1275]}],"src":"127:665:5"},"id":5},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","exportedSymbols":{"ERC721Utils":[1481],"IERC721Errors":[237],"IERC721Receiver":[1376]},"id":1482,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1406,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"118:24:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"../IERC721Receiver.sol","id":1408,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1482,"sourceUnit":1377,"src":"144:55:6","symbolAliases":[{"foreign":{"id":1407,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"152:15:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../../interfaces/draft-IERC6093.sol","id":1410,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1482,"sourceUnit":285,"src":"200:69:6","symbolAliases":[{"foreign":{"id":1409,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"208:13:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC721Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":1411,"nodeType":"StructuredDocumentation","src":"271:159:6","text":" @dev Library that provide common ERC-721 utility functions.\n See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n _Available since v5.1._"},"fullyImplemented":true,"id":1481,"linearizedBaseContracts":[1481],"name":"ERC721Utils","nameLocation":"439:11:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":1479,"nodeType":"Block","src":"1151:758:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1425,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"1165:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1168:4:6","memberName":"code","nodeType":"MemberAccess","src":"1165:7:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1173:6:6","memberName":"length","nodeType":"MemberAccess","src":"1165:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1182:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1165:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1478,"nodeType":"IfStatement","src":"1161:742:6","trueBody":{"id":1477,"nodeType":"Block","src":"1185:718:6","statements":[{"clauses":[{"block":{"id":1455,"nodeType":"Block","src":"1295:214:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1442,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1440,"src":"1317:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":1443,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"1327:15:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1376_$","typeString":"type(contract IERC721Receiver)"}},"id":1444,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1343:16:6","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1375,"src":"1327:32:6","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":1445,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1360:8:6","memberName":"selector","nodeType":"MemberAccess","src":"1327:41:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1317:51:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1454,"nodeType":"IfStatement","src":"1313:182:6","trueBody":{"id":1453,"nodeType":"Block","src":"1370:125:6","statements":[{"errorCall":{"arguments":[{"id":1450,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"1473:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1447,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"1437:13:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Errors_$237_$","typeString":"type(contract IERC721Errors)"}},"id":1449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1451:21:6","memberName":"ERC721InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":219,"src":"1437:35:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1437:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1452,"nodeType":"RevertStatement","src":"1430:46:6"}]}}]},"errorName":"","id":1456,"nodeType":"TryCatchClause","parameters":{"id":1441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1440,"mutability":"mutable","name":"retval","nameLocation":"1287:6:6","nodeType":"VariableDeclaration","scope":1456,"src":"1280:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1439,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1280:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1279:15:6"},"src":"1271:238:6"},{"block":{"id":1474,"nodeType":"Block","src":"1538:355:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1460,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"1560:6:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1567:6:6","memberName":"length","nodeType":"MemberAccess","src":"1560:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1577:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1560:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1472,"nodeType":"Block","src":"1728:151:6","statements":[{"AST":{"nodeType":"YulBlock","src":"1775:86:6","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1812:2:6","type":"","value":"32"},{"name":"reason","nodeType":"YulIdentifier","src":"1816:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1808:3:6"},"nodeType":"YulFunctionCall","src":"1808:15:6"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"1831:6:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1825:5:6"},"nodeType":"YulFunctionCall","src":"1825:13:6"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1801:6:6"},"nodeType":"YulFunctionCall","src":"1801:38:6"},"nodeType":"YulExpressionStatement","src":"1801:38:6"}]},"evmVersion":"paris","externalReferences":[{"declaration":1458,"isOffset":false,"isSlot":false,"src":"1816:6:6","valueSize":1},{"declaration":1458,"isOffset":false,"isSlot":false,"src":"1831:6:6","valueSize":1}],"flags":["memory-safe"],"id":1471,"nodeType":"InlineAssembly","src":"1750:111:6"}]},"id":1473,"nodeType":"IfStatement","src":"1556:323:6","trueBody":{"id":1470,"nodeType":"Block","src":"1580:142:6","statements":[{"errorCall":{"arguments":[{"id":1467,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"1700:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1464,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"1664:13:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Errors_$237_$","typeString":"type(contract IERC721Errors)"}},"id":1466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1678:21:6","memberName":"ERC721InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":219,"src":"1664:35:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1664:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1469,"nodeType":"RevertStatement","src":"1657:46:6"}]}}]},"errorName":"","id":1475,"nodeType":"TryCatchClause","parameters":{"id":1459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1458,"mutability":"mutable","name":"reason","nameLocation":"1530:6:6","nodeType":"VariableDeclaration","scope":1475,"src":"1517:19:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1457,"name":"bytes","nodeType":"ElementaryTypeName","src":"1517:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1516:21:6"},"src":"1510:383:6"}],"externalCall":{"arguments":[{"id":1434,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1414,"src":"1240:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1435,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1416,"src":"1250:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1436,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1420,"src":"1256:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1437,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1422,"src":"1265:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1431,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"1219:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1430,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"1203:15:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1376_$","typeString":"type(contract IERC721Receiver)"}},"id":1432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1203:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$1376","typeString":"contract IERC721Receiver"}},"id":1433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1223:16:6","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1375,"src":"1203:36:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":1438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1203:67:6","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1476,"nodeType":"TryStatement","src":"1199:694:6"}]}}]},"documentation":{"id":1412,"nodeType":"StructuredDocumentation","src":"457:523:6","text":" @dev Performs an acceptance check for the provided `operator` by calling {IERC721-onERC721Received}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n the transfer."},"id":1480,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC721Received","nameLocation":"994:21:6","nodeType":"FunctionDefinition","parameters":{"id":1423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1414,"mutability":"mutable","name":"operator","nameLocation":"1033:8:6","nodeType":"VariableDeclaration","scope":1480,"src":"1025:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1413,"name":"address","nodeType":"ElementaryTypeName","src":"1025:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1416,"mutability":"mutable","name":"from","nameLocation":"1059:4:6","nodeType":"VariableDeclaration","scope":1480,"src":"1051:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1415,"name":"address","nodeType":"ElementaryTypeName","src":"1051:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1418,"mutability":"mutable","name":"to","nameLocation":"1081:2:6","nodeType":"VariableDeclaration","scope":1480,"src":"1073:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1417,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1420,"mutability":"mutable","name":"tokenId","nameLocation":"1101:7:6","nodeType":"VariableDeclaration","scope":1480,"src":"1093:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1419,"name":"uint256","nodeType":"ElementaryTypeName","src":"1093:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1422,"mutability":"mutable","name":"data","nameLocation":"1131:4:6","nodeType":"VariableDeclaration","scope":1480,"src":"1118:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1421,"name":"bytes","nodeType":"ElementaryTypeName","src":"1118:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1015:126:6"},"returnParameters":{"id":1424,"nodeType":"ParameterList","parameters":[],"src":"1151:0:6"},"scope":1481,"src":"985:924:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":1482,"src":"431:1480:6","usedErrors":[],"usedEvents":[]}],"src":"118:1794:6"},"id":6},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1511]},"id":1512,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1483,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:7"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1484,"nodeType":"StructuredDocumentation","src":"127:496:7","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1511,"linearizedBaseContracts":[1511],"name":"Context","nameLocation":"642:7:7","nodeType":"ContractDefinition","nodes":[{"body":{"id":1492,"nodeType":"Block","src":"718:34:7","statements":[{"expression":{"expression":{"id":1489,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:7","memberName":"sender","nodeType":"MemberAccess","src":"735:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1488,"id":1491,"nodeType":"Return","src":"728:17:7"}]},"id":1493,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:7","nodeType":"FunctionDefinition","parameters":{"id":1485,"nodeType":"ParameterList","parameters":[],"src":"675:2:7"},"returnParameters":{"id":1488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1487,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1493,"src":"709:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1486,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:7"},"scope":1511,"src":"656:96:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1501,"nodeType":"Block","src":"825:32:7","statements":[{"expression":{"expression":{"id":1498,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:7","memberName":"data","nodeType":"MemberAccess","src":"842:8:7","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1497,"id":1500,"nodeType":"Return","src":"835:15:7"}]},"id":1502,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:7","nodeType":"FunctionDefinition","parameters":{"id":1494,"nodeType":"ParameterList","parameters":[],"src":"775:2:7"},"returnParameters":{"id":1497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1496,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1502,"src":"809:14:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1495,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:7"},"scope":1511,"src":"758:99:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1509,"nodeType":"Block","src":"935:25:7","statements":[{"expression":{"hexValue":"30","id":1507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1506,"id":1508,"nodeType":"Return","src":"945:8:7"}]},"id":1510,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:7","nodeType":"FunctionDefinition","parameters":{"id":1503,"nodeType":"ParameterList","parameters":[],"src":"892:2:7"},"returnParameters":{"id":1506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1505,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1510,"src":"926:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1504,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:7"},"scope":1511,"src":"863:97:7","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1512,"src":"624:338:7","usedErrors":[],"usedEvents":[]}],"src":"101:862:7"},"id":7},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[1563]},"id":1564,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1513,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:8"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":1514,"nodeType":"StructuredDocumentation","src":"125:489:8","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":1563,"linearizedBaseContracts":[1563],"name":"Panic","nameLocation":"665:5:8","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":1515,"nodeType":"StructuredDocumentation","src":"677:36:8","text":"@dev generic / unspecified error"},"id":1518,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:8","nodeType":"VariableDeclaration","scope":1563,"src":"718:40:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1516,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":1517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":1519,"nodeType":"StructuredDocumentation","src":"764:37:8","text":"@dev used by the assert() builtin"},"id":1522,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:8","nodeType":"VariableDeclaration","scope":1563,"src":"806:39:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1520,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":1521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":1523,"nodeType":"StructuredDocumentation","src":"851:41:8","text":"@dev arithmetic underflow or overflow"},"id":1526,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:8","nodeType":"VariableDeclaration","scope":1563,"src":"897:47:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1524,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":1525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:8","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":1527,"nodeType":"StructuredDocumentation","src":"950:35:8","text":"@dev division or modulo by zero"},"id":1530,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:8","nodeType":"VariableDeclaration","scope":1563,"src":"990:49:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1528,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":1529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:8","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":1531,"nodeType":"StructuredDocumentation","src":"1045:30:8","text":"@dev enum conversion error"},"id":1534,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:8","nodeType":"VariableDeclaration","scope":1563,"src":"1080:54:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1532,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":1533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:8","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":1535,"nodeType":"StructuredDocumentation","src":"1140:36:8","text":"@dev invalid encoding in storage"},"id":1538,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:8","nodeType":"VariableDeclaration","scope":1563,"src":"1181:55:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1536,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":1537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:8","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":1539,"nodeType":"StructuredDocumentation","src":"1242:24:8","text":"@dev empty array pop"},"id":1542,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:8","nodeType":"VariableDeclaration","scope":1563,"src":"1271:48:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1540,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":1541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:8","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":1543,"nodeType":"StructuredDocumentation","src":"1325:35:8","text":"@dev array out of bounds access"},"id":1546,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:8","nodeType":"VariableDeclaration","scope":1563,"src":"1365:52:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1544,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":1545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:8","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":1547,"nodeType":"StructuredDocumentation","src":"1423:65:8","text":"@dev resource error (too large allocation or too large array)"},"id":1550,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:8","nodeType":"VariableDeclaration","scope":1563,"src":"1493:47:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1548,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":1549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:8","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":1551,"nodeType":"StructuredDocumentation","src":"1546:42:8","text":"@dev calling invalid internal function"},"id":1554,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:8","nodeType":"VariableDeclaration","scope":1563,"src":"1593:58:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1552,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":1553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:8","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":1561,"nodeType":"Block","src":"1819:151:8","statements":[{"AST":{"nodeType":"YulBlock","src":"1854:110:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1875:4:8","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1881:10:8","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1868:6:8"},"nodeType":"YulFunctionCall","src":"1868:24:8"},"nodeType":"YulExpressionStatement","src":"1868:24:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1912:4:8","type":"","value":"0x20"},{"name":"code","nodeType":"YulIdentifier","src":"1918:4:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1905:6:8"},"nodeType":"YulFunctionCall","src":"1905:18:8"},"nodeType":"YulExpressionStatement","src":"1905:18:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1943:4:8","type":"","value":"0x1c"},{"kind":"number","nodeType":"YulLiteral","src":"1949:4:8","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1936:6:8"},"nodeType":"YulFunctionCall","src":"1936:18:8"},"nodeType":"YulExpressionStatement","src":"1936:18:8"}]},"evmVersion":"paris","externalReferences":[{"declaration":1557,"isOffset":false,"isSlot":false,"src":"1918:4:8","valueSize":1}],"flags":["memory-safe"],"id":1560,"nodeType":"InlineAssembly","src":"1829:135:8"}]},"documentation":{"id":1555,"nodeType":"StructuredDocumentation","src":"1658:113:8","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":1562,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:8","nodeType":"FunctionDefinition","parameters":{"id":1558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1557,"mutability":"mutable","name":"code","nameLocation":"1799:4:8","nodeType":"VariableDeclaration","scope":1562,"src":"1791:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1556,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:8"},"returnParameters":{"id":1559,"nodeType":"ParameterList","parameters":[],"src":"1819:0:8"},"scope":1563,"src":"1776:194:8","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1564,"src":"657:1315:8","usedErrors":[],"usedEvents":[]}],"src":"99:1874:8"},"id":8},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[1632]},"id":1633,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1565,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:9"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":1566,"nodeType":"StructuredDocumentation","src":"135:894:9","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":1632,"linearizedBaseContracts":[1632],"name":"ReentrancyGuard","nameLocation":"1048:15:9","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1569,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1843:11:9","nodeType":"VariableDeclaration","scope":1632,"src":"1818:40:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1567,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":1568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1857:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":1572,"mutability":"constant","name":"ENTERED","nameLocation":"1889:7:9","nodeType":"VariableDeclaration","scope":1632,"src":"1864:36:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1570,"name":"uint256","nodeType":"ElementaryTypeName","src":"1864:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":1571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1899:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":1574,"mutability":"mutable","name":"_status","nameLocation":"1923:7:9","nodeType":"VariableDeclaration","scope":1632,"src":"1907:23:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1573,"name":"uint256","nodeType":"ElementaryTypeName","src":"1907:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"documentation":{"id":1575,"nodeType":"StructuredDocumentation","src":"1937:52:9","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":1577,"name":"ReentrancyGuardReentrantCall","nameLocation":"2000:28:9","nodeType":"ErrorDefinition","parameters":{"id":1576,"nodeType":"ParameterList","parameters":[],"src":"2028:2:9"},"src":"1994:37:9"},{"body":{"id":1584,"nodeType":"Block","src":"2051:38:9","statements":[{"expression":{"id":1582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1580,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1574,"src":"2061:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1581,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1569,"src":"2071:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2061:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1583,"nodeType":"ExpressionStatement","src":"2061:21:9"}]},"id":1585,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1578,"nodeType":"ParameterList","parameters":[],"src":"2048:2:9"},"returnParameters":{"id":1579,"nodeType":"ParameterList","parameters":[],"src":"2051:0:9"},"scope":1632,"src":"2037:52:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1595,"nodeType":"Block","src":"2490:79:9","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1588,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1612,"src":"2500:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2500:21:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1590,"nodeType":"ExpressionStatement","src":"2500:21:9"},{"id":1591,"nodeType":"PlaceholderStatement","src":"2531:1:9"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1592,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1620,"src":"2542:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2542:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1594,"nodeType":"ExpressionStatement","src":"2542:20:9"}]},"documentation":{"id":1586,"nodeType":"StructuredDocumentation","src":"2095:366:9","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":1596,"name":"nonReentrant","nameLocation":"2475:12:9","nodeType":"ModifierDefinition","parameters":{"id":1587,"nodeType":"ParameterList","parameters":[],"src":"2487:2:9"},"src":"2466:103:9","virtual":false,"visibility":"internal"},{"body":{"id":1611,"nodeType":"Block","src":"2614:268:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1599,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1574,"src":"2702:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1600,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1572,"src":"2713:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2702:18:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1606,"nodeType":"IfStatement","src":"2698:86:9","trueBody":{"id":1605,"nodeType":"Block","src":"2722:62:9","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1602,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1577,"src":"2743:28:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2743:30:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1604,"nodeType":"RevertStatement","src":"2736:37:9"}]}},{"expression":{"id":1609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1607,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1574,"src":"2858:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1608,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1572,"src":"2868:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2858:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1610,"nodeType":"ExpressionStatement","src":"2858:17:9"}]},"id":1612,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2584:19:9","nodeType":"FunctionDefinition","parameters":{"id":1597,"nodeType":"ParameterList","parameters":[],"src":"2603:2:9"},"returnParameters":{"id":1598,"nodeType":"ParameterList","parameters":[],"src":"2614:0:9"},"scope":1632,"src":"2575:307:9","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1619,"nodeType":"Block","src":"2926:170:9","statements":[{"expression":{"id":1617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1615,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1574,"src":"3068:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1616,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1569,"src":"3078:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3068:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1618,"nodeType":"ExpressionStatement","src":"3068:21:9"}]},"id":1620,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2897:18:9","nodeType":"FunctionDefinition","parameters":{"id":1613,"nodeType":"ParameterList","parameters":[],"src":"2915:2:9"},"returnParameters":{"id":1614,"nodeType":"ParameterList","parameters":[],"src":"2926:0:9"},"scope":1632,"src":"2888:208:9","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1630,"nodeType":"Block","src":"3339:42:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1626,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1574,"src":"3356:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1627,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1572,"src":"3367:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3356:18:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1625,"id":1629,"nodeType":"Return","src":"3349:25:9"}]},"documentation":{"id":1621,"nodeType":"StructuredDocumentation","src":"3102:168:9","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":1631,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3284:23:9","nodeType":"FunctionDefinition","parameters":{"id":1622,"nodeType":"ParameterList","parameters":[],"src":"3307:2:9"},"returnParameters":{"id":1625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1624,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1631,"src":"3333:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1623,"name":"bool","nodeType":"ElementaryTypeName","src":"3333:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3332:6:9"},"scope":1632,"src":"3275:106:9","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1633,"src":"1030:2353:9","usedErrors":[1577],"usedEvents":[]}],"src":"109:3275:9"},"id":9},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[4474],"SafeCast":[6239],"SignedMath":[6383],"Strings":[2832]},"id":2833,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1634,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:10"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":1636,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2833,"sourceUnit":4475,"src":"127:37:10","symbolAliases":[{"foreign":{"id":1635,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4474,"src":"135:4:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":1638,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2833,"sourceUnit":6240,"src":"165:45:10","symbolAliases":[{"foreign":{"id":1637,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"173:8:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":1640,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2833,"sourceUnit":6384,"src":"211:49:10","symbolAliases":[{"foreign":{"id":1639,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6383,"src":"219:10:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":1641,"nodeType":"StructuredDocumentation","src":"262:34:10","text":" @dev String operations."},"fullyImplemented":true,"id":2832,"linearizedBaseContracts":[2832],"name":"Strings","nameLocation":"305:7:10","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1643,"libraryName":{"id":1642,"name":"SafeCast","nameLocations":["325:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":6239,"src":"325:8:10"},"nodeType":"UsingForDirective","src":"319:21:10"},{"constant":true,"id":1646,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"371:10:10","nodeType":"VariableDeclaration","scope":2832,"src":"346:56:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":1644,"name":"bytes16","nodeType":"ElementaryTypeName","src":"346:7:10","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":1645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:18:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":1649,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"431:14:10","nodeType":"VariableDeclaration","scope":2832,"src":"408:42:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1647,"name":"uint8","nodeType":"ElementaryTypeName","src":"408:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":1648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"448:2:10","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"documentation":{"id":1650,"nodeType":"StructuredDocumentation","src":"457:81:10","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":1656,"name":"StringsInsufficientHexLength","nameLocation":"549:28:10","nodeType":"ErrorDefinition","parameters":{"id":1655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1652,"mutability":"mutable","name":"value","nameLocation":"586:5:10","nodeType":"VariableDeclaration","scope":1656,"src":"578:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1651,"name":"uint256","nodeType":"ElementaryTypeName","src":"578:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1654,"mutability":"mutable","name":"length","nameLocation":"601:6:10","nodeType":"VariableDeclaration","scope":1656,"src":"593:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1653,"name":"uint256","nodeType":"ElementaryTypeName","src":"593:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"577:31:10"},"src":"543:66:10"},{"documentation":{"id":1657,"nodeType":"StructuredDocumentation","src":"615:108:10","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","id":1659,"name":"StringsInvalidChar","nameLocation":"734:18:10","nodeType":"ErrorDefinition","parameters":{"id":1658,"nodeType":"ParameterList","parameters":[],"src":"752:2:10"},"src":"728:27:10"},{"documentation":{"id":1660,"nodeType":"StructuredDocumentation","src":"761:84:10","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","id":1662,"name":"StringsInvalidAddressFormat","nameLocation":"856:27:10","nodeType":"ErrorDefinition","parameters":{"id":1661,"nodeType":"ParameterList","parameters":[],"src":"883:2:10"},"src":"850:36:10"},{"body":{"id":1709,"nodeType":"Block","src":"1058:561:10","statements":[{"id":1708,"nodeType":"UncheckedBlock","src":"1068:545:10","statements":[{"assignments":[1671],"declarations":[{"constant":false,"id":1671,"mutability":"mutable","name":"length","nameLocation":"1100:6:10","nodeType":"VariableDeclaration","scope":1708,"src":"1092:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1670,"name":"uint256","nodeType":"ElementaryTypeName","src":"1092:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1678,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1674,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1665,"src":"1120:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1672,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4474,"src":"1109:4:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4474_$","typeString":"type(library Math)"}},"id":1673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1114:5:10","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":4246,"src":"1109:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1109:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1129:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1109:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1092:38:10"},{"assignments":[1680],"declarations":[{"constant":false,"id":1680,"mutability":"mutable","name":"buffer","nameLocation":"1158:6:10","nodeType":"VariableDeclaration","scope":1708,"src":"1144:20:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1679,"name":"string","nodeType":"ElementaryTypeName","src":"1144:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1685,"initialValue":{"arguments":[{"id":1683,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1671,"src":"1178:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1682,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1167:10:10","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1681,"name":"string","nodeType":"ElementaryTypeName","src":"1171:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1167:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1144:41:10"},{"assignments":[1687],"declarations":[{"constant":false,"id":1687,"mutability":"mutable","name":"ptr","nameLocation":"1207:3:10","nodeType":"VariableDeclaration","scope":1708,"src":"1199:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1686,"name":"uint256","nodeType":"ElementaryTypeName","src":"1199:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1688,"nodeType":"VariableDeclarationStatement","src":"1199:11:10"},{"AST":{"nodeType":"YulBlock","src":"1249:67:10","statements":[{"nodeType":"YulAssignment","src":"1267:35:10","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"1278:6:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1290:2:10","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"1294:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1286:3:10"},"nodeType":"YulFunctionCall","src":"1286:15:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1274:3:10"},"nodeType":"YulFunctionCall","src":"1274:28:10"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"1267:3:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1680,"isOffset":false,"isSlot":false,"src":"1278:6:10","valueSize":1},{"declaration":1671,"isOffset":false,"isSlot":false,"src":"1294:6:10","valueSize":1},{"declaration":1687,"isOffset":false,"isSlot":false,"src":"1267:3:10","valueSize":1}],"flags":["memory-safe"],"id":1689,"nodeType":"InlineAssembly","src":"1224:92:10"},{"body":{"id":1704,"nodeType":"Block","src":"1342:234:10","statements":[{"expression":{"id":1692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1360:5:10","subExpression":{"id":1691,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1687,"src":"1360:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1693,"nodeType":"ExpressionStatement","src":"1360:5:10"},{"AST":{"nodeType":"YulBlock","src":"1408:86:10","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1438:3:10"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1452:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"1459:2:10","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"1448:3:10"},"nodeType":"YulFunctionCall","src":"1448:14:10"},{"name":"HEX_DIGITS","nodeType":"YulIdentifier","src":"1464:10:10"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"1443:4:10"},"nodeType":"YulFunctionCall","src":"1443:32:10"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"1430:7:10"},"nodeType":"YulFunctionCall","src":"1430:46:10"},"nodeType":"YulExpressionStatement","src":"1430:46:10"}]},"evmVersion":"paris","externalReferences":[{"declaration":1646,"isOffset":false,"isSlot":false,"src":"1464:10:10","valueSize":1},{"declaration":1687,"isOffset":false,"isSlot":false,"src":"1438:3:10","valueSize":1},{"declaration":1665,"isOffset":false,"isSlot":false,"src":"1452:5:10","valueSize":1}],"flags":["memory-safe"],"id":1694,"nodeType":"InlineAssembly","src":"1383:111:10"},{"expression":{"id":1697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1695,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1665,"src":"1511:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1520:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1511:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1698,"nodeType":"ExpressionStatement","src":"1511:11:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1699,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1665,"src":"1544:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1553:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1544:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1703,"nodeType":"IfStatement","src":"1540:21:10","trueBody":{"id":1702,"nodeType":"Break","src":"1556:5:10"}}]},"condition":{"hexValue":"74727565","id":1690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1336:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":1705,"nodeType":"WhileStatement","src":"1329:247:10"},{"expression":{"id":1706,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1680,"src":"1596:6:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1669,"id":1707,"nodeType":"Return","src":"1589:13:10"}]}]},"documentation":{"id":1663,"nodeType":"StructuredDocumentation","src":"892:90:10","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":1710,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"996:8:10","nodeType":"FunctionDefinition","parameters":{"id":1666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1665,"mutability":"mutable","name":"value","nameLocation":"1013:5:10","nodeType":"VariableDeclaration","scope":1710,"src":"1005:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1664,"name":"uint256","nodeType":"ElementaryTypeName","src":"1005:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1004:15:10"},"returnParameters":{"id":1669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1668,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1710,"src":"1043:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1667,"name":"string","nodeType":"ElementaryTypeName","src":"1043:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1042:15:10"},"scope":2832,"src":"987:632:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1735,"nodeType":"Block","src":"1795:92:10","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1721,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1713,"src":"1826:5:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":1722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1834:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1826:9:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1844:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1826:20:10","trueExpression":{"hexValue":"2d","id":1724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1838:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":1730,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1713,"src":"1872:5:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":1728,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6383,"src":"1857:10:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$6383_$","typeString":"type(library SignedMath)"}},"id":1729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1868:3:10","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":6382,"src":"1857:14:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":1731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1857:21:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1727,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"1848:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1848:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1719,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1812:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1718,"name":"string","nodeType":"ElementaryTypeName","src":"1812:6:10","typeDescriptions":{}}},"id":1720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1819:6:10","memberName":"concat","nodeType":"MemberAccess","src":"1812:13:10","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":1733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1812:68:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1717,"id":1734,"nodeType":"Return","src":"1805:75:10"}]},"documentation":{"id":1711,"nodeType":"StructuredDocumentation","src":"1625:89:10","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":1736,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"1728:14:10","nodeType":"FunctionDefinition","parameters":{"id":1714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1713,"mutability":"mutable","name":"value","nameLocation":"1750:5:10","nodeType":"VariableDeclaration","scope":1736,"src":"1743:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1712,"name":"int256","nodeType":"ElementaryTypeName","src":"1743:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1742:14:10"},"returnParameters":{"id":1717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1716,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1736,"src":"1780:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1715,"name":"string","nodeType":"ElementaryTypeName","src":"1780:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1779:15:10"},"scope":2832,"src":"1719:168:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1755,"nodeType":"Block","src":"2066:100:10","statements":[{"id":1754,"nodeType":"UncheckedBlock","src":"2076:84:10","statements":[{"expression":{"arguments":[{"id":1745,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1739,"src":"2119:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1748,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1739,"src":"2138:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1746,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4474,"src":"2126:4:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4474_$","typeString":"type(library Math)"}},"id":1747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2131:6:10","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":4417,"src":"2126:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2126:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2147:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2126:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1744,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1756,1839,1859],"referencedDeclaration":1839,"src":"2107:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2107:42:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1743,"id":1753,"nodeType":"Return","src":"2100:49:10"}]}]},"documentation":{"id":1737,"nodeType":"StructuredDocumentation","src":"1893:94:10","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":1756,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2001:11:10","nodeType":"FunctionDefinition","parameters":{"id":1740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1739,"mutability":"mutable","name":"value","nameLocation":"2021:5:10","nodeType":"VariableDeclaration","scope":1756,"src":"2013:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1738,"name":"uint256","nodeType":"ElementaryTypeName","src":"2013:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2012:15:10"},"returnParameters":{"id":1743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1742,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1756,"src":"2051:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1741,"name":"string","nodeType":"ElementaryTypeName","src":"2051:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2050:15:10"},"scope":2832,"src":"1992:174:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1838,"nodeType":"Block","src":"2379:435:10","statements":[{"assignments":[1767],"declarations":[{"constant":false,"id":1767,"mutability":"mutable","name":"localValue","nameLocation":"2397:10:10","nodeType":"VariableDeclaration","scope":1838,"src":"2389:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1766,"name":"uint256","nodeType":"ElementaryTypeName","src":"2389:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1769,"initialValue":{"id":1768,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1759,"src":"2410:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2389:26:10"},{"assignments":[1771],"declarations":[{"constant":false,"id":1771,"mutability":"mutable","name":"buffer","nameLocation":"2438:6:10","nodeType":"VariableDeclaration","scope":1838,"src":"2425:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1770,"name":"bytes","nodeType":"ElementaryTypeName","src":"2425:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1780,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2457:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1775,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1761,"src":"2461:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2457:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":1777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2470:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2457:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1773,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2447:9:10","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1772,"name":"bytes","nodeType":"ElementaryTypeName","src":"2451:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2447:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2425:47:10"},{"expression":{"id":1785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1781,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"2482:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1783,"indexExpression":{"hexValue":"30","id":1782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2489:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2482:9:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2494:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2482:15:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1786,"nodeType":"ExpressionStatement","src":"2482:15:10"},{"expression":{"id":1791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1787,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"2507:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1789,"indexExpression":{"hexValue":"31","id":1788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2514:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2507:9:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":1790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2519:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2507:15:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1792,"nodeType":"ExpressionStatement","src":"2507:15:10"},{"body":{"id":1821,"nodeType":"Block","src":"2577:95:10","statements":[{"expression":{"id":1815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1807,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"2591:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1809,"indexExpression":{"id":1808,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1794,"src":"2598:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2591:9:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1810,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1646,"src":"2603:10:10","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":1814,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1811,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"2614:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2627:3:10","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2614:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2603:28:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2591:40:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1816,"nodeType":"ExpressionStatement","src":"2591:40:10"},{"expression":{"id":1819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1817,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"2645:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2660:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2645:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1820,"nodeType":"ExpressionStatement","src":"2645:16:10"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1801,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1794,"src":"2565:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2569:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2565:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1822,"initializationExpression":{"assignments":[1794],"declarations":[{"constant":false,"id":1794,"mutability":"mutable","name":"i","nameLocation":"2545:1:10","nodeType":"VariableDeclaration","scope":1822,"src":"2537:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1793,"name":"uint256","nodeType":"ElementaryTypeName","src":"2537:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1800,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2549:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1796,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1761,"src":"2553:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2549:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2562:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2549:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2537:26:10"},"loopExpression":{"expression":{"id":1805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2572:3:10","subExpression":{"id":1804,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1794,"src":"2574:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1806,"nodeType":"ExpressionStatement","src":"2572:3:10"},"nodeType":"ForStatement","src":"2532:140:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1823,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"2685:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2699:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2685:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1832,"nodeType":"IfStatement","src":"2681:96:10","trueBody":{"id":1831,"nodeType":"Block","src":"2702:75:10","statements":[{"errorCall":{"arguments":[{"id":1827,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1759,"src":"2752:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1828,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1761,"src":"2759:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1826,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1656,"src":"2723:28:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":1829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:43:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1830,"nodeType":"RevertStatement","src":"2716:50:10"}]}},{"expression":{"arguments":[{"id":1835,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"2800:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1834,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2793:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1833,"name":"string","nodeType":"ElementaryTypeName","src":"2793:6:10","typeDescriptions":{}}},"id":1836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2793:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1765,"id":1837,"nodeType":"Return","src":"2786:21:10"}]},"documentation":{"id":1757,"nodeType":"StructuredDocumentation","src":"2172:112:10","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":1839,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2298:11:10","nodeType":"FunctionDefinition","parameters":{"id":1762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1759,"mutability":"mutable","name":"value","nameLocation":"2318:5:10","nodeType":"VariableDeclaration","scope":1839,"src":"2310:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1758,"name":"uint256","nodeType":"ElementaryTypeName","src":"2310:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1761,"mutability":"mutable","name":"length","nameLocation":"2333:6:10","nodeType":"VariableDeclaration","scope":1839,"src":"2325:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1760,"name":"uint256","nodeType":"ElementaryTypeName","src":"2325:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2309:31:10"},"returnParameters":{"id":1765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1764,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1839,"src":"2364:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1763,"name":"string","nodeType":"ElementaryTypeName","src":"2364:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2363:15:10"},"scope":2832,"src":"2289:525:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1858,"nodeType":"Block","src":"3046:75:10","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":1852,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1842,"src":"3091:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1851,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3083:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1850,"name":"uint160","nodeType":"ElementaryTypeName","src":"3083:7:10","typeDescriptions":{}}},"id":1853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3083:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1849,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3075:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1848,"name":"uint256","nodeType":"ElementaryTypeName","src":"3075:7:10","typeDescriptions":{}}},"id":1854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3075:22:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1855,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1649,"src":"3099:14:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1847,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1756,1839,1859],"referencedDeclaration":1839,"src":"3063:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3063:51:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1846,"id":1857,"nodeType":"Return","src":"3056:58:10"}]},"documentation":{"id":1840,"nodeType":"StructuredDocumentation","src":"2820:148:10","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":1859,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2982:11:10","nodeType":"FunctionDefinition","parameters":{"id":1843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1842,"mutability":"mutable","name":"addr","nameLocation":"3002:4:10","nodeType":"VariableDeclaration","scope":1859,"src":"2994:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1841,"name":"address","nodeType":"ElementaryTypeName","src":"2994:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2993:14:10"},"returnParameters":{"id":1846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1845,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1859,"src":"3031:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1844,"name":"string","nodeType":"ElementaryTypeName","src":"3031:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3030:15:10"},"scope":2832,"src":"2973:148:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1923,"nodeType":"Block","src":"3378:642:10","statements":[{"assignments":[1868],"declarations":[{"constant":false,"id":1868,"mutability":"mutable","name":"buffer","nameLocation":"3401:6:10","nodeType":"VariableDeclaration","scope":1923,"src":"3388:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1867,"name":"bytes","nodeType":"ElementaryTypeName","src":"3388:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1875,"initialValue":{"arguments":[{"arguments":[{"id":1872,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1862,"src":"3428:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1871,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1756,1839,1859],"referencedDeclaration":1859,"src":"3416:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":1873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3416:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1870,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3410:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1869,"name":"bytes","nodeType":"ElementaryTypeName","src":"3410:5:10","typeDescriptions":{}}},"id":1874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3410:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3388:46:10"},{"assignments":[1877],"declarations":[{"constant":false,"id":1877,"mutability":"mutable","name":"hashValue","nameLocation":"3527:9:10","nodeType":"VariableDeclaration","scope":1923,"src":"3519:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1876,"name":"uint256","nodeType":"ElementaryTypeName","src":"3519:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1878,"nodeType":"VariableDeclarationStatement","src":"3519:17:10"},{"AST":{"nodeType":"YulBlock","src":"3571:78:10","statements":[{"nodeType":"YulAssignment","src":"3585:54:10","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3602:2:10","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"3620:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"3628:4:10","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3616:3:10"},"nodeType":"YulFunctionCall","src":"3616:17:10"},{"kind":"number","nodeType":"YulLiteral","src":"3635:2:10","type":"","value":"40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3606:9:10"},"nodeType":"YulFunctionCall","src":"3606:32:10"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3598:3:10"},"nodeType":"YulFunctionCall","src":"3598:41:10"},"variableNames":[{"name":"hashValue","nodeType":"YulIdentifier","src":"3585:9:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1868,"isOffset":false,"isSlot":false,"src":"3620:6:10","valueSize":1},{"declaration":1877,"isOffset":false,"isSlot":false,"src":"3585:9:10","valueSize":1}],"flags":["memory-safe"],"id":1879,"nodeType":"InlineAssembly","src":"3546:103:10"},{"body":{"id":1916,"nodeType":"Block","src":"3692:291:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1890,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1877,"src":"3798:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3810:3:10","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"3798:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":1893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3816:1:10","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"3798:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":1897,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1868,"src":"3827:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1899,"indexExpression":{"id":1898,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1881,"src":"3834:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3827:9:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":1896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3821:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1895,"name":"uint8","nodeType":"ElementaryTypeName","src":"3821:5:10","typeDescriptions":{}}},"id":1900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3821:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":1901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3840:2:10","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"3821:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3798:44:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1911,"nodeType":"IfStatement","src":"3794:150:10","trueBody":{"id":1910,"nodeType":"Block","src":"3844:100:10","statements":[{"expression":{"id":1908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1904,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1868,"src":"3912:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1906,"indexExpression":{"id":1905,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1881,"src":"3919:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3912:9:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":1907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3925:4:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"3912:17:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1909,"nodeType":"ExpressionStatement","src":"3912:17:10"}]}},{"expression":{"id":1914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1912,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1877,"src":"3957:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3971:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"3957:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1915,"nodeType":"ExpressionStatement","src":"3957:15:10"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1884,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1881,"src":"3680:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3684:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3680:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1917,"initializationExpression":{"assignments":[1881],"declarations":[{"constant":false,"id":1881,"mutability":"mutable","name":"i","nameLocation":"3672:1:10","nodeType":"VariableDeclaration","scope":1917,"src":"3664:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1880,"name":"uint256","nodeType":"ElementaryTypeName","src":"3664:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1883,"initialValue":{"hexValue":"3431","id":1882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3676:2:10","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3664:14:10"},"loopExpression":{"expression":{"id":1888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"3687:3:10","subExpression":{"id":1887,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1881,"src":"3689:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1889,"nodeType":"ExpressionStatement","src":"3687:3:10"},"nodeType":"ForStatement","src":"3659:324:10"},{"expression":{"arguments":[{"id":1920,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1868,"src":"4006:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1919,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3999:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1918,"name":"string","nodeType":"ElementaryTypeName","src":"3999:6:10","typeDescriptions":{}}},"id":1921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3999:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1866,"id":1922,"nodeType":"Return","src":"3992:21:10"}]},"documentation":{"id":1860,"nodeType":"StructuredDocumentation","src":"3127:165:10","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":1924,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3306:19:10","nodeType":"FunctionDefinition","parameters":{"id":1863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1862,"mutability":"mutable","name":"addr","nameLocation":"3334:4:10","nodeType":"VariableDeclaration","scope":1924,"src":"3326:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1861,"name":"address","nodeType":"ElementaryTypeName","src":"3326:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3325:14:10"},"returnParameters":{"id":1866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1865,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1924,"src":"3363:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1864,"name":"string","nodeType":"ElementaryTypeName","src":"3363:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3362:15:10"},"scope":2832,"src":"3297:723:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1960,"nodeType":"Block","src":"4175:104:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1936,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1927,"src":"4198:1:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1935,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4192:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1934,"name":"bytes","nodeType":"ElementaryTypeName","src":"4192:5:10","typeDescriptions":{}}},"id":1937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4192:8:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4201:6:10","memberName":"length","nodeType":"MemberAccess","src":"4192:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1941,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1929,"src":"4217:1:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4211:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1939,"name":"bytes","nodeType":"ElementaryTypeName","src":"4211:5:10","typeDescriptions":{}}},"id":1942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4211:8:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4220:6:10","memberName":"length","nodeType":"MemberAccess","src":"4211:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4192:34:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1948,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1927,"src":"4246:1:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1947,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4240:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1946,"name":"bytes","nodeType":"ElementaryTypeName","src":"4240:5:10","typeDescriptions":{}}},"id":1949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4240:8:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1945,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4230:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4230:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":1954,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1929,"src":"4269:1:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1953,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4263:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1952,"name":"bytes","nodeType":"ElementaryTypeName","src":"4263:5:10","typeDescriptions":{}}},"id":1955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4263:8:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1951,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4253:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4253:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4230:42:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4192:80:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1933,"id":1959,"nodeType":"Return","src":"4185:87:10"}]},"documentation":{"id":1925,"nodeType":"StructuredDocumentation","src":"4026:66:10","text":" @dev Returns true if the two strings are equal."},"id":1961,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4106:5:10","nodeType":"FunctionDefinition","parameters":{"id":1930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1927,"mutability":"mutable","name":"a","nameLocation":"4126:1:10","nodeType":"VariableDeclaration","scope":1961,"src":"4112:15:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1926,"name":"string","nodeType":"ElementaryTypeName","src":"4112:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1929,"mutability":"mutable","name":"b","nameLocation":"4143:1:10","nodeType":"VariableDeclaration","scope":1961,"src":"4129:15:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1928,"name":"string","nodeType":"ElementaryTypeName","src":"4129:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4111:34:10"},"returnParameters":{"id":1933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1932,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1961,"src":"4169:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1931,"name":"bool","nodeType":"ElementaryTypeName","src":"4169:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4168:6:10"},"scope":2832,"src":"4097:182:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1979,"nodeType":"Block","src":"4576:64:10","statements":[{"expression":{"arguments":[{"id":1970,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1964,"src":"4603:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4610:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1974,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1964,"src":"4619:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1973,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4613:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1972,"name":"bytes","nodeType":"ElementaryTypeName","src":"4613:5:10","typeDescriptions":{}}},"id":1975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4613:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4626:6:10","memberName":"length","nodeType":"MemberAccess","src":"4613:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1969,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[1980,2011],"referencedDeclaration":2011,"src":"4593:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":1977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4593:40:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1968,"id":1978,"nodeType":"Return","src":"4586:47:10"}]},"documentation":{"id":1962,"nodeType":"StructuredDocumentation","src":"4285:214:10","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":1980,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4513:9:10","nodeType":"FunctionDefinition","parameters":{"id":1965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1964,"mutability":"mutable","name":"input","nameLocation":"4537:5:10","nodeType":"VariableDeclaration","scope":1980,"src":"4523:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1963,"name":"string","nodeType":"ElementaryTypeName","src":"4523:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4522:21:10"},"returnParameters":{"id":1968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1967,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1980,"src":"4567:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1966,"name":"uint256","nodeType":"ElementaryTypeName","src":"4567:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4566:9:10"},"scope":2832,"src":"4504:136:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2010,"nodeType":"Block","src":"5038:153:10","statements":[{"assignments":[1993,1995],"declarations":[{"constant":false,"id":1993,"mutability":"mutable","name":"success","nameLocation":"5054:7:10","nodeType":"VariableDeclaration","scope":2010,"src":"5049:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1992,"name":"bool","nodeType":"ElementaryTypeName","src":"5049:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1995,"mutability":"mutable","name":"value","nameLocation":"5071:5:10","nodeType":"VariableDeclaration","scope":2010,"src":"5063:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1994,"name":"uint256","nodeType":"ElementaryTypeName","src":"5063:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2001,"initialValue":{"arguments":[{"id":1997,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1983,"src":"5093:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1998,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"5100:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1999,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1987,"src":"5107:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1996,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[2032,2069],"referencedDeclaration":2069,"src":"5080:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5080:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5048:63:10"},{"condition":{"id":2003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5125:8:10","subExpression":{"id":2002,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1993,"src":"5126:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2007,"nodeType":"IfStatement","src":"5121:41:10","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2004,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1659,"src":"5142:18:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5142:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2006,"nodeType":"RevertStatement","src":"5135:27:10"}},{"expression":{"id":2008,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1995,"src":"5179:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1991,"id":2009,"nodeType":"Return","src":"5172:12:10"}]},"documentation":{"id":1981,"nodeType":"StructuredDocumentation","src":"4646:287:10","text":" @dev Variant of {parseUint} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":2011,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4947:9:10","nodeType":"FunctionDefinition","parameters":{"id":1988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1983,"mutability":"mutable","name":"input","nameLocation":"4971:5:10","nodeType":"VariableDeclaration","scope":2011,"src":"4957:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1982,"name":"string","nodeType":"ElementaryTypeName","src":"4957:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1985,"mutability":"mutable","name":"begin","nameLocation":"4986:5:10","nodeType":"VariableDeclaration","scope":2011,"src":"4978:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1984,"name":"uint256","nodeType":"ElementaryTypeName","src":"4978:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1987,"mutability":"mutable","name":"end","nameLocation":"5001:3:10","nodeType":"VariableDeclaration","scope":2011,"src":"4993:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1986,"name":"uint256","nodeType":"ElementaryTypeName","src":"4993:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4956:49:10"},"returnParameters":{"id":1991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1990,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2011,"src":"5029:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1989,"name":"uint256","nodeType":"ElementaryTypeName","src":"5029:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5028:9:10"},"scope":2832,"src":"4938:253:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2031,"nodeType":"Block","src":"5512:83:10","statements":[{"expression":{"arguments":[{"id":2022,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2014,"src":"5558:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5565:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2026,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2014,"src":"5574:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2025,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5568:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2024,"name":"bytes","nodeType":"ElementaryTypeName","src":"5568:5:10","typeDescriptions":{}}},"id":2027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5568:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5581:6:10","memberName":"length","nodeType":"MemberAccess","src":"5568:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2021,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2139,"src":"5529:28:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5529:59:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2020,"id":2030,"nodeType":"Return","src":"5522:66:10"}]},"documentation":{"id":2012,"nodeType":"StructuredDocumentation","src":"5197:215:10","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2032,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5426:12:10","nodeType":"FunctionDefinition","parameters":{"id":2015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2014,"mutability":"mutable","name":"input","nameLocation":"5453:5:10","nodeType":"VariableDeclaration","scope":2032,"src":"5439:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2013,"name":"string","nodeType":"ElementaryTypeName","src":"5439:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5438:21:10"},"returnParameters":{"id":2020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2017,"mutability":"mutable","name":"success","nameLocation":"5488:7:10","nodeType":"VariableDeclaration","scope":2032,"src":"5483:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2016,"name":"bool","nodeType":"ElementaryTypeName","src":"5483:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2019,"mutability":"mutable","name":"value","nameLocation":"5505:5:10","nodeType":"VariableDeclaration","scope":2032,"src":"5497:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2018,"name":"uint256","nodeType":"ElementaryTypeName","src":"5497:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5482:29:10"},"scope":2832,"src":"5417:178:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2068,"nodeType":"Block","src":"5997:144:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2046,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2039,"src":"6011:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2049,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2035,"src":"6023:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2048,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6017:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2047,"name":"bytes","nodeType":"ElementaryTypeName","src":"6017:5:10","typeDescriptions":{}}},"id":2050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6017:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6030:6:10","memberName":"length","nodeType":"MemberAccess","src":"6017:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6011:25:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2053,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2037,"src":"6040:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2054,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2039,"src":"6048:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6040:11:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6011:40:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2061,"nodeType":"IfStatement","src":"6007:63:10","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6061:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6068:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2059,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6060:10:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2045,"id":2060,"nodeType":"Return","src":"6053:17:10"}},{"expression":{"arguments":[{"id":2063,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2035,"src":"6116:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2064,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2037,"src":"6123:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2065,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2039,"src":"6130:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2062,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2139,"src":"6087:28:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6087:47:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2045,"id":2067,"nodeType":"Return","src":"6080:54:10"}]},"documentation":{"id":2033,"nodeType":"StructuredDocumentation","src":"5601:238:10","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2069,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5853:12:10","nodeType":"FunctionDefinition","parameters":{"id":2040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2035,"mutability":"mutable","name":"input","nameLocation":"5889:5:10","nodeType":"VariableDeclaration","scope":2069,"src":"5875:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2034,"name":"string","nodeType":"ElementaryTypeName","src":"5875:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2037,"mutability":"mutable","name":"begin","nameLocation":"5912:5:10","nodeType":"VariableDeclaration","scope":2069,"src":"5904:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2036,"name":"uint256","nodeType":"ElementaryTypeName","src":"5904:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2039,"mutability":"mutable","name":"end","nameLocation":"5935:3:10","nodeType":"VariableDeclaration","scope":2069,"src":"5927:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2038,"name":"uint256","nodeType":"ElementaryTypeName","src":"5927:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5865:79:10"},"returnParameters":{"id":2045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2042,"mutability":"mutable","name":"success","nameLocation":"5973:7:10","nodeType":"VariableDeclaration","scope":2069,"src":"5968:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2041,"name":"bool","nodeType":"ElementaryTypeName","src":"5968:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2044,"mutability":"mutable","name":"value","nameLocation":"5990:5:10","nodeType":"VariableDeclaration","scope":2069,"src":"5982:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2043,"name":"uint256","nodeType":"ElementaryTypeName","src":"5982:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5967:29:10"},"scope":2832,"src":"5844:297:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2138,"nodeType":"Block","src":"6521:347:10","statements":[{"assignments":[2084],"declarations":[{"constant":false,"id":2084,"mutability":"mutable","name":"buffer","nameLocation":"6544:6:10","nodeType":"VariableDeclaration","scope":2138,"src":"6531:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2083,"name":"bytes","nodeType":"ElementaryTypeName","src":"6531:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2089,"initialValue":{"arguments":[{"id":2087,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2072,"src":"6559:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2086,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6553:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2085,"name":"bytes","nodeType":"ElementaryTypeName","src":"6553:5:10","typeDescriptions":{}}},"id":2088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6553:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6531:34:10"},{"assignments":[2091],"declarations":[{"constant":false,"id":2091,"mutability":"mutable","name":"result","nameLocation":"6584:6:10","nodeType":"VariableDeclaration","scope":2138,"src":"6576:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2090,"name":"uint256","nodeType":"ElementaryTypeName","src":"6576:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2093,"initialValue":{"hexValue":"30","id":2092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6593:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6576:18:10"},{"body":{"id":2132,"nodeType":"Block","src":"6642:189:10","statements":[{"assignments":[2105],"declarations":[{"constant":false,"id":2105,"mutability":"mutable","name":"chr","nameLocation":"6662:3:10","nodeType":"VariableDeclaration","scope":2132,"src":"6656:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2104,"name":"uint8","nodeType":"ElementaryTypeName","src":"6656:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2115,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":2110,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2084,"src":"6711:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2111,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2095,"src":"6719:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2109,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2831,"src":"6688:22:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6688:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6681:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2107,"name":"bytes1","nodeType":"ElementaryTypeName","src":"6681:6:10","typeDescriptions":{}}},"id":2113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6681:41:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2106,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2819,"src":"6668:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":2114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6668:55:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"6656:67:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2116,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2105,"src":"6741:3:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":2117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6747:1:10","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"6741:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2123,"nodeType":"IfStatement","src":"6737:30:10","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6758:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6765:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2121,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6757:10:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2082,"id":2122,"nodeType":"Return","src":"6750:17:10"}},{"expression":{"id":2126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2124,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2091,"src":"6781:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":2125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6791:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"6781:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2127,"nodeType":"ExpressionStatement","src":"6781:12:10"},{"expression":{"id":2130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2128,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2091,"src":"6807:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2129,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2105,"src":"6817:3:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6807:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2131,"nodeType":"ExpressionStatement","src":"6807:13:10"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2098,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2095,"src":"6628:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2099,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"6632:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6628:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2133,"initializationExpression":{"assignments":[2095],"declarations":[{"constant":false,"id":2095,"mutability":"mutable","name":"i","nameLocation":"6617:1:10","nodeType":"VariableDeclaration","scope":2133,"src":"6609:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2094,"name":"uint256","nodeType":"ElementaryTypeName","src":"6609:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2097,"initialValue":{"id":2096,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2074,"src":"6621:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6609:17:10"},"loopExpression":{"expression":{"id":2102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6637:3:10","subExpression":{"id":2101,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2095,"src":"6639:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2103,"nodeType":"ExpressionStatement","src":"6637:3:10"},"nodeType":"ForStatement","src":"6604:227:10"},{"expression":{"components":[{"hexValue":"74727565","id":2134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6848:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2135,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2091,"src":"6854:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2136,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6847:14:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2082,"id":2137,"nodeType":"Return","src":"6840:21:10"}]},"documentation":{"id":2070,"nodeType":"StructuredDocumentation","src":"6147:201:10","text":" @dev Implementation of {tryParseUint} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2139,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6362:28:10","nodeType":"FunctionDefinition","parameters":{"id":2077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2072,"mutability":"mutable","name":"input","nameLocation":"6414:5:10","nodeType":"VariableDeclaration","scope":2139,"src":"6400:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2071,"name":"string","nodeType":"ElementaryTypeName","src":"6400:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2074,"mutability":"mutable","name":"begin","nameLocation":"6437:5:10","nodeType":"VariableDeclaration","scope":2139,"src":"6429:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2073,"name":"uint256","nodeType":"ElementaryTypeName","src":"6429:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2076,"mutability":"mutable","name":"end","nameLocation":"6460:3:10","nodeType":"VariableDeclaration","scope":2139,"src":"6452:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2075,"name":"uint256","nodeType":"ElementaryTypeName","src":"6452:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6390:79:10"},"returnParameters":{"id":2082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2079,"mutability":"mutable","name":"success","nameLocation":"6497:7:10","nodeType":"VariableDeclaration","scope":2139,"src":"6492:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2078,"name":"bool","nodeType":"ElementaryTypeName","src":"6492:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2081,"mutability":"mutable","name":"value","nameLocation":"6514:5:10","nodeType":"VariableDeclaration","scope":2139,"src":"6506:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2080,"name":"uint256","nodeType":"ElementaryTypeName","src":"6506:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6491:29:10"},"scope":2832,"src":"6353:515:10","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2157,"nodeType":"Block","src":"7165:63:10","statements":[{"expression":{"arguments":[{"id":2148,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2142,"src":"7191:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7198:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2152,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2142,"src":"7207:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2151,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7201:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2150,"name":"bytes","nodeType":"ElementaryTypeName","src":"7201:5:10","typeDescriptions":{}}},"id":2153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7201:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7214:6:10","memberName":"length","nodeType":"MemberAccess","src":"7201:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2147,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[2158,2189],"referencedDeclaration":2189,"src":"7182:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":2155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7182:39:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2146,"id":2156,"nodeType":"Return","src":"7175:46:10"}]},"documentation":{"id":2140,"nodeType":"StructuredDocumentation","src":"6874:216:10","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":2158,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7104:8:10","nodeType":"FunctionDefinition","parameters":{"id":2143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2142,"mutability":"mutable","name":"input","nameLocation":"7127:5:10","nodeType":"VariableDeclaration","scope":2158,"src":"7113:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2141,"name":"string","nodeType":"ElementaryTypeName","src":"7113:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7112:21:10"},"returnParameters":{"id":2146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2145,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2158,"src":"7157:6:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2144,"name":"int256","nodeType":"ElementaryTypeName","src":"7157:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7156:8:10"},"scope":2832,"src":"7095:133:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2188,"nodeType":"Block","src":"7633:151:10","statements":[{"assignments":[2171,2173],"declarations":[{"constant":false,"id":2171,"mutability":"mutable","name":"success","nameLocation":"7649:7:10","nodeType":"VariableDeclaration","scope":2188,"src":"7644:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2170,"name":"bool","nodeType":"ElementaryTypeName","src":"7644:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2173,"mutability":"mutable","name":"value","nameLocation":"7665:5:10","nodeType":"VariableDeclaration","scope":2188,"src":"7658:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2172,"name":"int256","nodeType":"ElementaryTypeName","src":"7658:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2179,"initialValue":{"arguments":[{"id":2175,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"7686:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2176,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2163,"src":"7693:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2177,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"7700:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2174,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[2210,2252],"referencedDeclaration":2252,"src":"7674:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7674:30:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"7643:61:10"},{"condition":{"id":2181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7718:8:10","subExpression":{"id":2180,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2171,"src":"7719:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2185,"nodeType":"IfStatement","src":"7714:41:10","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2182,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1659,"src":"7735:18:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7735:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2184,"nodeType":"RevertStatement","src":"7728:27:10"}},{"expression":{"id":2186,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2173,"src":"7772:5:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2169,"id":2187,"nodeType":"Return","src":"7765:12:10"}]},"documentation":{"id":2159,"nodeType":"StructuredDocumentation","src":"7234:296:10","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":2189,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7544:8:10","nodeType":"FunctionDefinition","parameters":{"id":2166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2161,"mutability":"mutable","name":"input","nameLocation":"7567:5:10","nodeType":"VariableDeclaration","scope":2189,"src":"7553:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2160,"name":"string","nodeType":"ElementaryTypeName","src":"7553:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2163,"mutability":"mutable","name":"begin","nameLocation":"7582:5:10","nodeType":"VariableDeclaration","scope":2189,"src":"7574:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2162,"name":"uint256","nodeType":"ElementaryTypeName","src":"7574:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2165,"mutability":"mutable","name":"end","nameLocation":"7597:3:10","nodeType":"VariableDeclaration","scope":2189,"src":"7589:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2164,"name":"uint256","nodeType":"ElementaryTypeName","src":"7589:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7552:49:10"},"returnParameters":{"id":2169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2168,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2189,"src":"7625:6:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2167,"name":"int256","nodeType":"ElementaryTypeName","src":"7625:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7624:8:10"},"scope":2832,"src":"7535:249:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2209,"nodeType":"Block","src":"8175:82:10","statements":[{"expression":{"arguments":[{"id":2200,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2192,"src":"8220:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8227:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2204,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2192,"src":"8236:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2203,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8230:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2202,"name":"bytes","nodeType":"ElementaryTypeName","src":"8230:5:10","typeDescriptions":{}}},"id":2205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8230:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8243:6:10","memberName":"length","nodeType":"MemberAccess","src":"8230:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2199,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2373,"src":"8192:27:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8192:58:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2198,"id":2208,"nodeType":"Return","src":"8185:65:10"}]},"documentation":{"id":2190,"nodeType":"StructuredDocumentation","src":"7790:287:10","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":2210,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8091:11:10","nodeType":"FunctionDefinition","parameters":{"id":2193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2192,"mutability":"mutable","name":"input","nameLocation":"8117:5:10","nodeType":"VariableDeclaration","scope":2210,"src":"8103:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2191,"name":"string","nodeType":"ElementaryTypeName","src":"8103:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8102:21:10"},"returnParameters":{"id":2198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2195,"mutability":"mutable","name":"success","nameLocation":"8152:7:10","nodeType":"VariableDeclaration","scope":2210,"src":"8147:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2194,"name":"bool","nodeType":"ElementaryTypeName","src":"8147:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2197,"mutability":"mutable","name":"value","nameLocation":"8168:5:10","nodeType":"VariableDeclaration","scope":2210,"src":"8161:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2196,"name":"int256","nodeType":"ElementaryTypeName","src":"8161:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8146:28:10"},"scope":2832,"src":"8082:175:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":2215,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8288:14:10","nodeType":"VariableDeclaration","scope":2832,"src":"8263:50:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2211,"name":"uint256","nodeType":"ElementaryTypeName","src":"8263:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":2214,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8305:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":2213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8310:3:10","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8305:8:10","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"body":{"id":2251,"nodeType":"Block","src":"8779:143:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2229,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2222,"src":"8793:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2232,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2218,"src":"8805:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2231,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8799:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2230,"name":"bytes","nodeType":"ElementaryTypeName","src":"8799:5:10","typeDescriptions":{}}},"id":2233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8799:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8812:6:10","memberName":"length","nodeType":"MemberAccess","src":"8799:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8793:25:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2236,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2220,"src":"8822:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2237,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2222,"src":"8830:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8822:11:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8793:40:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2244,"nodeType":"IfStatement","src":"8789:63:10","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8843:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8850:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2242,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"8842:10:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2228,"id":2243,"nodeType":"Return","src":"8835:17:10"}},{"expression":{"arguments":[{"id":2246,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2218,"src":"8897:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2247,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2220,"src":"8904:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2248,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2222,"src":"8911:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2245,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2373,"src":"8869:27:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8869:46:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2228,"id":2250,"nodeType":"Return","src":"8862:53:10"}]},"documentation":{"id":2216,"nodeType":"StructuredDocumentation","src":"8320:303:10","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":2252,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8637:11:10","nodeType":"FunctionDefinition","parameters":{"id":2223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2218,"mutability":"mutable","name":"input","nameLocation":"8672:5:10","nodeType":"VariableDeclaration","scope":2252,"src":"8658:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2217,"name":"string","nodeType":"ElementaryTypeName","src":"8658:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2220,"mutability":"mutable","name":"begin","nameLocation":"8695:5:10","nodeType":"VariableDeclaration","scope":2252,"src":"8687:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2219,"name":"uint256","nodeType":"ElementaryTypeName","src":"8687:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2222,"mutability":"mutable","name":"end","nameLocation":"8718:3:10","nodeType":"VariableDeclaration","scope":2252,"src":"8710:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2221,"name":"uint256","nodeType":"ElementaryTypeName","src":"8710:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8648:79:10"},"returnParameters":{"id":2228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2225,"mutability":"mutable","name":"success","nameLocation":"8756:7:10","nodeType":"VariableDeclaration","scope":2252,"src":"8751:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2224,"name":"bool","nodeType":"ElementaryTypeName","src":"8751:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2227,"mutability":"mutable","name":"value","nameLocation":"8772:5:10","nodeType":"VariableDeclaration","scope":2252,"src":"8765:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2226,"name":"int256","nodeType":"ElementaryTypeName","src":"8765:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8750:28:10"},"scope":2832,"src":"8628:294:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2372,"nodeType":"Block","src":"9299:812:10","statements":[{"assignments":[2267],"declarations":[{"constant":false,"id":2267,"mutability":"mutable","name":"buffer","nameLocation":"9322:6:10","nodeType":"VariableDeclaration","scope":2372,"src":"9309:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2266,"name":"bytes","nodeType":"ElementaryTypeName","src":"9309:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2272,"initialValue":{"arguments":[{"id":2270,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2255,"src":"9337:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2269,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9331:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2268,"name":"bytes","nodeType":"ElementaryTypeName","src":"9331:5:10","typeDescriptions":{}}},"id":2271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9331:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9309:34:10"},{"assignments":[2274],"declarations":[{"constant":false,"id":2274,"mutability":"mutable","name":"sign","nameLocation":"9407:4:10","nodeType":"VariableDeclaration","scope":2372,"src":"9400:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2273,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9400:6:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":2290,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2275,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2257,"src":"9414:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2276,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2259,"src":"9423:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9414:12:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":2285,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2267,"src":"9471:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2286,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2257,"src":"9479:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2284,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2831,"src":"9448:22:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9448:37:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2283,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9441:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2282,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9441:6:10","typeDescriptions":{}}},"id":2288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9441:45:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9414:72:10","trueExpression":{"arguments":[{"hexValue":"30","id":2280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9436:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2279,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9429:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2278,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9429:6:10","typeDescriptions":{}}},"id":2281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9429:9:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"9400:86:10"},{"assignments":[2292],"declarations":[{"constant":false,"id":2292,"mutability":"mutable","name":"positiveSign","nameLocation":"9572:12:10","nodeType":"VariableDeclaration","scope":2372,"src":"9567:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2291,"name":"bool","nodeType":"ElementaryTypeName","src":"9567:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2299,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2293,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2274,"src":"9587:4:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":2296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9602:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":2295,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9595:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2294,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9595:6:10","typeDescriptions":{}}},"id":2297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9595:11:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9587:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9567:39:10"},{"assignments":[2301],"declarations":[{"constant":false,"id":2301,"mutability":"mutable","name":"negativeSign","nameLocation":"9621:12:10","nodeType":"VariableDeclaration","scope":2372,"src":"9616:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2300,"name":"bool","nodeType":"ElementaryTypeName","src":"9616:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2308,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2302,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2274,"src":"9636:4:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":2305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9651:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":2304,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9644:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2303,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9644:6:10","typeDescriptions":{}}},"id":2306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9644:11:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9636:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9616:39:10"},{"assignments":[2310],"declarations":[{"constant":false,"id":2310,"mutability":"mutable","name":"offset","nameLocation":"9673:6:10","nodeType":"VariableDeclaration","scope":2372,"src":"9665:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2309,"name":"uint256","nodeType":"ElementaryTypeName","src":"9665:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2317,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2311,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2292,"src":"9683:12:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":2312,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"9699:12:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9683:28:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2314,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9682:30:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9713:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6238,"src":"9682:37:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9682:39:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9665:56:10"},{"assignments":[2319,2321],"declarations":[{"constant":false,"id":2319,"mutability":"mutable","name":"absSuccess","nameLocation":"9738:10:10","nodeType":"VariableDeclaration","scope":2372,"src":"9733:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2318,"name":"bool","nodeType":"ElementaryTypeName","src":"9733:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2321,"mutability":"mutable","name":"absValue","nameLocation":"9758:8:10","nodeType":"VariableDeclaration","scope":2372,"src":"9750:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2320,"name":"uint256","nodeType":"ElementaryTypeName","src":"9750:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2329,"initialValue":{"arguments":[{"id":2323,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2255,"src":"9783:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2324,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2257,"src":"9790:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2325,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2310,"src":"9798:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9790:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2327,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2259,"src":"9806:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2322,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[2032,2069],"referencedDeclaration":2069,"src":"9770:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9770:40:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"9732:78:10"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2330,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2319,"src":"9825:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2331,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2321,"src":"9839:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2332,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2215,"src":"9850:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9839:25:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9825:39:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2350,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2319,"src":"9967:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":2351,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"9981:12:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9967:26:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2353,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2321,"src":"9997:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2354,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2215,"src":"10009:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9997:26:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9967:56:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10095:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10102:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2368,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10094:10:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2265,"id":2369,"nodeType":"Return","src":"10087:17:10"},"id":2370,"nodeType":"IfStatement","src":"9963:141:10","trueBody":{"id":2365,"nodeType":"Block","src":"10025:56:10","statements":[{"expression":{"components":[{"hexValue":"74727565","id":2357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10047:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":2360,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10058:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2359,"name":"int256","nodeType":"ElementaryTypeName","src":"10058:6:10","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":2358,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10053:4:10","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10053:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":2362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10066:3:10","memberName":"min","nodeType":"MemberAccess","src":"10053:16:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2363,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10046:24:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2265,"id":2364,"nodeType":"Return","src":"10039:31:10"}]}},"id":2371,"nodeType":"IfStatement","src":"9821:283:10","trueBody":{"id":2349,"nodeType":"Block","src":"9866:91:10","statements":[{"expression":{"components":[{"hexValue":"74727565","id":2335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9888:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":2336,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"9894:12:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":2344,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2321,"src":"9936:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2343,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9929:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2342,"name":"int256","nodeType":"ElementaryTypeName","src":"9929:6:10","typeDescriptions":{}}},"id":2345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9929:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9894:51:10","trueExpression":{"id":2341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"9909:17:10","subExpression":{"arguments":[{"id":2339,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2321,"src":"9917:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2338,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9910:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2337,"name":"int256","nodeType":"ElementaryTypeName","src":"9910:6:10","typeDescriptions":{}}},"id":2340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9910:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2347,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9887:59:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2265,"id":2348,"nodeType":"Return","src":"9880:66:10"}]}}]},"documentation":{"id":2253,"nodeType":"StructuredDocumentation","src":"8928:200:10","text":" @dev Implementation of {tryParseInt} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2373,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9142:27:10","nodeType":"FunctionDefinition","parameters":{"id":2260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2255,"mutability":"mutable","name":"input","nameLocation":"9193:5:10","nodeType":"VariableDeclaration","scope":2373,"src":"9179:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2254,"name":"string","nodeType":"ElementaryTypeName","src":"9179:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2257,"mutability":"mutable","name":"begin","nameLocation":"9216:5:10","nodeType":"VariableDeclaration","scope":2373,"src":"9208:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2256,"name":"uint256","nodeType":"ElementaryTypeName","src":"9208:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2259,"mutability":"mutable","name":"end","nameLocation":"9239:3:10","nodeType":"VariableDeclaration","scope":2373,"src":"9231:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2258,"name":"uint256","nodeType":"ElementaryTypeName","src":"9231:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9169:79:10"},"returnParameters":{"id":2265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2262,"mutability":"mutable","name":"success","nameLocation":"9276:7:10","nodeType":"VariableDeclaration","scope":2373,"src":"9271:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2261,"name":"bool","nodeType":"ElementaryTypeName","src":"9271:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2264,"mutability":"mutable","name":"value","nameLocation":"9292:5:10","nodeType":"VariableDeclaration","scope":2373,"src":"9285:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2263,"name":"int256","nodeType":"ElementaryTypeName","src":"9285:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9270:28:10"},"scope":2832,"src":"9133:978:10","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2391,"nodeType":"Block","src":"10456:67:10","statements":[{"expression":{"arguments":[{"id":2382,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2376,"src":"10486:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10493:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2386,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2376,"src":"10502:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2385,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10496:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2384,"name":"bytes","nodeType":"ElementaryTypeName","src":"10496:5:10","typeDescriptions":{}}},"id":2387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10496:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10509:6:10","memberName":"length","nodeType":"MemberAccess","src":"10496:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2381,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[2392,2423],"referencedDeclaration":2423,"src":"10473:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":2389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10473:43:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2380,"id":2390,"nodeType":"Return","src":"10466:50:10"}]},"documentation":{"id":2374,"nodeType":"StructuredDocumentation","src":"10117:259:10","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":2392,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10390:12:10","nodeType":"FunctionDefinition","parameters":{"id":2377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2376,"mutability":"mutable","name":"input","nameLocation":"10417:5:10","nodeType":"VariableDeclaration","scope":2392,"src":"10403:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2375,"name":"string","nodeType":"ElementaryTypeName","src":"10403:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10402:21:10"},"returnParameters":{"id":2380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2379,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2392,"src":"10447:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2378,"name":"uint256","nodeType":"ElementaryTypeName","src":"10447:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10446:9:10"},"scope":2832,"src":"10381:142:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2422,"nodeType":"Block","src":"10937:156:10","statements":[{"assignments":[2405,2407],"declarations":[{"constant":false,"id":2405,"mutability":"mutable","name":"success","nameLocation":"10953:7:10","nodeType":"VariableDeclaration","scope":2422,"src":"10948:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2404,"name":"bool","nodeType":"ElementaryTypeName","src":"10948:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2407,"mutability":"mutable","name":"value","nameLocation":"10970:5:10","nodeType":"VariableDeclaration","scope":2422,"src":"10962:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2406,"name":"uint256","nodeType":"ElementaryTypeName","src":"10962:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2413,"initialValue":{"arguments":[{"id":2409,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2395,"src":"10995:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2410,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2397,"src":"11002:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2411,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2399,"src":"11009:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2408,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[2444,2481],"referencedDeclaration":2481,"src":"10979:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10979:34:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10947:66:10"},{"condition":{"id":2415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11027:8:10","subExpression":{"id":2414,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2405,"src":"11028:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2419,"nodeType":"IfStatement","src":"11023:41:10","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2416,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1659,"src":"11044:18:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11044:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2418,"nodeType":"RevertStatement","src":"11037:27:10"}},{"expression":{"id":2420,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2407,"src":"11081:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2403,"id":2421,"nodeType":"Return","src":"11074:12:10"}]},"documentation":{"id":2393,"nodeType":"StructuredDocumentation","src":"10529:300:10","text":" @dev Variant of {parseHexUint} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":2423,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10843:12:10","nodeType":"FunctionDefinition","parameters":{"id":2400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2395,"mutability":"mutable","name":"input","nameLocation":"10870:5:10","nodeType":"VariableDeclaration","scope":2423,"src":"10856:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2394,"name":"string","nodeType":"ElementaryTypeName","src":"10856:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2397,"mutability":"mutable","name":"begin","nameLocation":"10885:5:10","nodeType":"VariableDeclaration","scope":2423,"src":"10877:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2396,"name":"uint256","nodeType":"ElementaryTypeName","src":"10877:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2399,"mutability":"mutable","name":"end","nameLocation":"10900:3:10","nodeType":"VariableDeclaration","scope":2423,"src":"10892:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2398,"name":"uint256","nodeType":"ElementaryTypeName","src":"10892:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10855:49:10"},"returnParameters":{"id":2403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2402,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2423,"src":"10928:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2401,"name":"uint256","nodeType":"ElementaryTypeName","src":"10928:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10927:9:10"},"scope":2832,"src":"10834:259:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2443,"nodeType":"Block","src":"11420:86:10","statements":[{"expression":{"arguments":[{"id":2434,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"11469:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11476:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2438,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"11485:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2437,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11479:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2436,"name":"bytes","nodeType":"ElementaryTypeName","src":"11479:5:10","typeDescriptions":{}}},"id":2439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11479:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11492:6:10","memberName":"length","nodeType":"MemberAccess","src":"11479:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2433,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2584,"src":"11437:31:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11437:62:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2432,"id":2442,"nodeType":"Return","src":"11430:69:10"}]},"documentation":{"id":2424,"nodeType":"StructuredDocumentation","src":"11099:218:10","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2444,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11331:15:10","nodeType":"FunctionDefinition","parameters":{"id":2427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2426,"mutability":"mutable","name":"input","nameLocation":"11361:5:10","nodeType":"VariableDeclaration","scope":2444,"src":"11347:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2425,"name":"string","nodeType":"ElementaryTypeName","src":"11347:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11346:21:10"},"returnParameters":{"id":2432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2429,"mutability":"mutable","name":"success","nameLocation":"11396:7:10","nodeType":"VariableDeclaration","scope":2444,"src":"11391:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2428,"name":"bool","nodeType":"ElementaryTypeName","src":"11391:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2431,"mutability":"mutable","name":"value","nameLocation":"11413:5:10","nodeType":"VariableDeclaration","scope":2444,"src":"11405:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2430,"name":"uint256","nodeType":"ElementaryTypeName","src":"11405:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11390:29:10"},"scope":2832,"src":"11322:184:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2480,"nodeType":"Block","src":"11914:147:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2458,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2451,"src":"11928:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2461,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2447,"src":"11940:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2460,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11934:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2459,"name":"bytes","nodeType":"ElementaryTypeName","src":"11934:5:10","typeDescriptions":{}}},"id":2462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11934:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11947:6:10","memberName":"length","nodeType":"MemberAccess","src":"11934:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11928:25:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2465,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2449,"src":"11957:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2466,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2451,"src":"11965:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11957:11:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11928:40:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2473,"nodeType":"IfStatement","src":"11924:63:10","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11978:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11985:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2471,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"11977:10:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2457,"id":2472,"nodeType":"Return","src":"11970:17:10"}},{"expression":{"arguments":[{"id":2475,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2447,"src":"12036:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2476,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2449,"src":"12043:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2477,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2451,"src":"12050:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2474,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2584,"src":"12004:31:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12004:50:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2457,"id":2479,"nodeType":"Return","src":"11997:57:10"}]},"documentation":{"id":2445,"nodeType":"StructuredDocumentation","src":"11512:241:10","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2481,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11767:15:10","nodeType":"FunctionDefinition","parameters":{"id":2452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2447,"mutability":"mutable","name":"input","nameLocation":"11806:5:10","nodeType":"VariableDeclaration","scope":2481,"src":"11792:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2446,"name":"string","nodeType":"ElementaryTypeName","src":"11792:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2449,"mutability":"mutable","name":"begin","nameLocation":"11829:5:10","nodeType":"VariableDeclaration","scope":2481,"src":"11821:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2448,"name":"uint256","nodeType":"ElementaryTypeName","src":"11821:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2451,"mutability":"mutable","name":"end","nameLocation":"11852:3:10","nodeType":"VariableDeclaration","scope":2481,"src":"11844:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2450,"name":"uint256","nodeType":"ElementaryTypeName","src":"11844:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11782:79:10"},"returnParameters":{"id":2457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2454,"mutability":"mutable","name":"success","nameLocation":"11890:7:10","nodeType":"VariableDeclaration","scope":2481,"src":"11885:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2453,"name":"bool","nodeType":"ElementaryTypeName","src":"11885:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2456,"mutability":"mutable","name":"value","nameLocation":"11907:5:10","nodeType":"VariableDeclaration","scope":2481,"src":"11899:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2455,"name":"uint256","nodeType":"ElementaryTypeName","src":"11899:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11884:29:10"},"scope":2832,"src":"11758:303:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2583,"nodeType":"Block","src":"12447:880:10","statements":[{"assignments":[2496],"declarations":[{"constant":false,"id":2496,"mutability":"mutable","name":"buffer","nameLocation":"12470:6:10","nodeType":"VariableDeclaration","scope":2583,"src":"12457:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2495,"name":"bytes","nodeType":"ElementaryTypeName","src":"12457:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2501,"initialValue":{"arguments":[{"id":2499,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2484,"src":"12485:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12479:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2497,"name":"bytes","nodeType":"ElementaryTypeName","src":"12479:5:10","typeDescriptions":{}}},"id":2500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12479:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12457:34:10"},{"assignments":[2503],"declarations":[{"constant":false,"id":2503,"mutability":"mutable","name":"hasPrefix","nameLocation":"12544:9:10","nodeType":"VariableDeclaration","scope":2583,"src":"12539:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2502,"name":"bool","nodeType":"ElementaryTypeName","src":"12539:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2523,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2504,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2488,"src":"12557:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2505,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2486,"src":"12563:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12571:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12563:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12557:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2509,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12556:17:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":2521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2513,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2496,"src":"12607:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2514,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2486,"src":"12615:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2512,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2831,"src":"12584:22:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12584:37:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2511,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12577:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2510,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12577:6:10","typeDescriptions":{}}},"id":2516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12577:45:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":2519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12633:4:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":2518,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12626:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2517,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12626:6:10","typeDescriptions":{}}},"id":2520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12626:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"12577:61:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12556:82:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12539:99:10"},{"assignments":[2525],"declarations":[{"constant":false,"id":2525,"mutability":"mutable","name":"offset","nameLocation":"12727:6:10","nodeType":"VariableDeclaration","scope":2583,"src":"12719:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2524,"name":"uint256","nodeType":"ElementaryTypeName","src":"12719:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2531,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2526,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2503,"src":"12736:9:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12746:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6238,"src":"12736:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12736:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":2529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12757:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12736:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12719:39:10"},{"assignments":[2533],"declarations":[{"constant":false,"id":2533,"mutability":"mutable","name":"result","nameLocation":"12777:6:10","nodeType":"VariableDeclaration","scope":2583,"src":"12769:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2532,"name":"uint256","nodeType":"ElementaryTypeName","src":"12769:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2535,"initialValue":{"hexValue":"30","id":2534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12786:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12769:18:10"},{"body":{"id":2577,"nodeType":"Block","src":"12844:446:10","statements":[{"assignments":[2549],"declarations":[{"constant":false,"id":2549,"mutability":"mutable","name":"chr","nameLocation":"12864:3:10","nodeType":"VariableDeclaration","scope":2577,"src":"12858:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2548,"name":"uint8","nodeType":"ElementaryTypeName","src":"12858:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2559,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":2554,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2496,"src":"12913:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2555,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2537,"src":"12921:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2553,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2831,"src":"12890:22:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12890:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2552,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12883:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2551,"name":"bytes1","nodeType":"ElementaryTypeName","src":"12883:6:10","typeDescriptions":{}}},"id":2557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12883:41:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2550,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2819,"src":"12870:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":2558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12870:55:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"12858:67:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2560,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2549,"src":"12943:3:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":2561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12949:2:10","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"12943:8:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2567,"nodeType":"IfStatement","src":"12939:31:10","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12961:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12968:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2565,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12960:10:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2494,"id":2566,"nodeType":"Return","src":"12953:17:10"}},{"expression":{"id":2570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2568,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2533,"src":"12984:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":2569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12994:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12984:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2571,"nodeType":"ExpressionStatement","src":"12984:12:10"},{"id":2576,"nodeType":"UncheckedBlock","src":"13010:270:10","statements":[{"expression":{"id":2574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2572,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2533,"src":"13252:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2573,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2549,"src":"13262:3:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13252:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2575,"nodeType":"ExpressionStatement","src":"13252:13:10"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2542,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2537,"src":"12830:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2543,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2488,"src":"12834:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12830:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2578,"initializationExpression":{"assignments":[2537],"declarations":[{"constant":false,"id":2537,"mutability":"mutable","name":"i","nameLocation":"12810:1:10","nodeType":"VariableDeclaration","scope":2578,"src":"12802:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2536,"name":"uint256","nodeType":"ElementaryTypeName","src":"12802:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2541,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2538,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2486,"src":"12814:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2539,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"12822:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12814:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12802:26:10"},"loopExpression":{"expression":{"id":2546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"12839:3:10","subExpression":{"id":2545,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2537,"src":"12841:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2547,"nodeType":"ExpressionStatement","src":"12839:3:10"},"nodeType":"ForStatement","src":"12797:493:10"},{"expression":{"components":[{"hexValue":"74727565","id":2579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13307:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2580,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2533,"src":"13313:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2581,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13306:14:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2494,"id":2582,"nodeType":"Return","src":"13299:21:10"}]},"documentation":{"id":2482,"nodeType":"StructuredDocumentation","src":"12067:204:10","text":" @dev Implementation of {tryParseHexUint} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2584,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"12285:31:10","nodeType":"FunctionDefinition","parameters":{"id":2489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2484,"mutability":"mutable","name":"input","nameLocation":"12340:5:10","nodeType":"VariableDeclaration","scope":2584,"src":"12326:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2483,"name":"string","nodeType":"ElementaryTypeName","src":"12326:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2486,"mutability":"mutable","name":"begin","nameLocation":"12363:5:10","nodeType":"VariableDeclaration","scope":2584,"src":"12355:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2485,"name":"uint256","nodeType":"ElementaryTypeName","src":"12355:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2488,"mutability":"mutable","name":"end","nameLocation":"12386:3:10","nodeType":"VariableDeclaration","scope":2584,"src":"12378:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2487,"name":"uint256","nodeType":"ElementaryTypeName","src":"12378:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12316:79:10"},"returnParameters":{"id":2494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2491,"mutability":"mutable","name":"success","nameLocation":"12423:7:10","nodeType":"VariableDeclaration","scope":2584,"src":"12418:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2490,"name":"bool","nodeType":"ElementaryTypeName","src":"12418:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2493,"mutability":"mutable","name":"value","nameLocation":"12440:5:10","nodeType":"VariableDeclaration","scope":2584,"src":"12432:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2492,"name":"uint256","nodeType":"ElementaryTypeName","src":"12432:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12417:29:10"},"scope":2832,"src":"12276:1051:10","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2602,"nodeType":"Block","src":"13625:67:10","statements":[{"expression":{"arguments":[{"id":2593,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2587,"src":"13655:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13662:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2597,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2587,"src":"13671:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2596,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13665:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2595,"name":"bytes","nodeType":"ElementaryTypeName","src":"13665:5:10","typeDescriptions":{}}},"id":2598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13665:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13678:6:10","memberName":"length","nodeType":"MemberAccess","src":"13665:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2592,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[2603,2634],"referencedDeclaration":2634,"src":"13642:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":2600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13642:43:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2591,"id":2601,"nodeType":"Return","src":"13635:50:10"}]},"documentation":{"id":2585,"nodeType":"StructuredDocumentation","src":"13333:212:10","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":2603,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13559:12:10","nodeType":"FunctionDefinition","parameters":{"id":2588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2587,"mutability":"mutable","name":"input","nameLocation":"13586:5:10","nodeType":"VariableDeclaration","scope":2603,"src":"13572:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2586,"name":"string","nodeType":"ElementaryTypeName","src":"13572:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13571:21:10"},"returnParameters":{"id":2591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2590,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2603,"src":"13616:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2589,"name":"address","nodeType":"ElementaryTypeName","src":"13616:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13615:9:10"},"scope":2832,"src":"13550:142:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2633,"nodeType":"Block","src":"14058:165:10","statements":[{"assignments":[2616,2618],"declarations":[{"constant":false,"id":2616,"mutability":"mutable","name":"success","nameLocation":"14074:7:10","nodeType":"VariableDeclaration","scope":2633,"src":"14069:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2615,"name":"bool","nodeType":"ElementaryTypeName","src":"14069:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2618,"mutability":"mutable","name":"value","nameLocation":"14091:5:10","nodeType":"VariableDeclaration","scope":2633,"src":"14083:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2617,"name":"address","nodeType":"ElementaryTypeName","src":"14083:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2624,"initialValue":{"arguments":[{"id":2620,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2606,"src":"14116:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2621,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2608,"src":"14123:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2622,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2610,"src":"14130:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2619,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[2655,2759],"referencedDeclaration":2759,"src":"14100:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":2623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14100:34:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14068:66:10"},{"condition":{"id":2626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14148:8:10","subExpression":{"id":2625,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2616,"src":"14149:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2630,"nodeType":"IfStatement","src":"14144:50:10","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2627,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"14165:27:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14165:29:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2629,"nodeType":"RevertStatement","src":"14158:36:10"}},{"expression":{"id":2631,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2618,"src":"14211:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2614,"id":2632,"nodeType":"Return","src":"14204:12:10"}]},"documentation":{"id":2604,"nodeType":"StructuredDocumentation","src":"13698:252:10","text":" @dev Variant of {parseAddress} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":2634,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13964:12:10","nodeType":"FunctionDefinition","parameters":{"id":2611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2606,"mutability":"mutable","name":"input","nameLocation":"13991:5:10","nodeType":"VariableDeclaration","scope":2634,"src":"13977:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2605,"name":"string","nodeType":"ElementaryTypeName","src":"13977:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2608,"mutability":"mutable","name":"begin","nameLocation":"14006:5:10","nodeType":"VariableDeclaration","scope":2634,"src":"13998:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2607,"name":"uint256","nodeType":"ElementaryTypeName","src":"13998:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2610,"mutability":"mutable","name":"end","nameLocation":"14021:3:10","nodeType":"VariableDeclaration","scope":2634,"src":"14013:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2609,"name":"uint256","nodeType":"ElementaryTypeName","src":"14013:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13976:49:10"},"returnParameters":{"id":2614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2613,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2634,"src":"14049:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2612,"name":"address","nodeType":"ElementaryTypeName","src":"14049:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14048:9:10"},"scope":2832,"src":"13955:268:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2654,"nodeType":"Block","src":"14523:70:10","statements":[{"expression":{"arguments":[{"id":2645,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2637,"src":"14556:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14563:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2649,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2637,"src":"14572:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2648,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14566:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2647,"name":"bytes","nodeType":"ElementaryTypeName","src":"14566:5:10","typeDescriptions":{}}},"id":2650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14566:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14579:6:10","memberName":"length","nodeType":"MemberAccess","src":"14566:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2644,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[2655,2759],"referencedDeclaration":2759,"src":"14540:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":2652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14540:46:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2643,"id":2653,"nodeType":"Return","src":"14533:53:10"}]},"documentation":{"id":2635,"nodeType":"StructuredDocumentation","src":"14229:191:10","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress} requirements."},"id":2655,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14434:15:10","nodeType":"FunctionDefinition","parameters":{"id":2638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2637,"mutability":"mutable","name":"input","nameLocation":"14464:5:10","nodeType":"VariableDeclaration","scope":2655,"src":"14450:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2636,"name":"string","nodeType":"ElementaryTypeName","src":"14450:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14449:21:10"},"returnParameters":{"id":2643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2640,"mutability":"mutable","name":"success","nameLocation":"14499:7:10","nodeType":"VariableDeclaration","scope":2655,"src":"14494:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2639,"name":"bool","nodeType":"ElementaryTypeName","src":"14494:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2642,"mutability":"mutable","name":"value","nameLocation":"14516:5:10","nodeType":"VariableDeclaration","scope":2655,"src":"14508:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2641,"name":"address","nodeType":"ElementaryTypeName","src":"14508:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14493:29:10"},"scope":2832,"src":"14425:168:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2758,"nodeType":"Block","src":"14963:733:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2669,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2662,"src":"14977:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2672,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2658,"src":"14989:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2671,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14983:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2670,"name":"bytes","nodeType":"ElementaryTypeName","src":"14983:5:10","typeDescriptions":{}}},"id":2673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14983:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14996:6:10","memberName":"length","nodeType":"MemberAccess","src":"14983:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14977:25:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2676,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"15006:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2677,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2662,"src":"15014:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15006:11:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14977:40:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2687,"nodeType":"IfStatement","src":"14973:72:10","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15027:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":2683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15042:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2682,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15034:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2681,"name":"address","nodeType":"ElementaryTypeName","src":"15034:7:10","typeDescriptions":{}}},"id":2684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15034:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2685,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15026:19:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2668,"id":2686,"nodeType":"Return","src":"15019:26:10"}},{"assignments":[2689],"declarations":[{"constant":false,"id":2689,"mutability":"mutable","name":"hasPrefix","nameLocation":"15061:9:10","nodeType":"VariableDeclaration","scope":2758,"src":"15056:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2688,"name":"bool","nodeType":"ElementaryTypeName","src":"15056:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2712,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2690,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2662,"src":"15074:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2691,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"15080:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15088:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15080:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15074:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2695,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15073:17:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":2710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":2701,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2658,"src":"15130:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2700,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15124:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2699,"name":"bytes","nodeType":"ElementaryTypeName","src":"15124:5:10","typeDescriptions":{}}},"id":2702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15124:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2703,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"15138:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2698,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2831,"src":"15101:22:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15101:43:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2697,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15094:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2696,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15094:6:10","typeDescriptions":{}}},"id":2705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15094:51:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":2708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15156:4:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":2707,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15149:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2706,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15149:6:10","typeDescriptions":{}}},"id":2709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15149:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15094:67:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15073:88:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15056:105:10"},{"assignments":[2714],"declarations":[{"constant":false,"id":2714,"mutability":"mutable","name":"expectedLength","nameLocation":"15250:14:10","nodeType":"VariableDeclaration","scope":2758,"src":"15242:22:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2713,"name":"uint256","nodeType":"ElementaryTypeName","src":"15242:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2722,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":2715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15267:2:10","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2716,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2689,"src":"15272:9:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15282:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6238,"src":"15272:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15272:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":2719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15293:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15272:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15267:27:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15242:52:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2723,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2662,"src":"15359:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2724,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"15365:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15359:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2726,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2714,"src":"15374:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15359:29:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2756,"nodeType":"Block","src":"15639:51:10","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":2749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15661:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":2752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15676:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2751,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15668:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2750,"name":"address","nodeType":"ElementaryTypeName","src":"15668:7:10","typeDescriptions":{}}},"id":2753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15668:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2754,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15660:19:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2668,"id":2755,"nodeType":"Return","src":"15653:26:10"}]},"id":2757,"nodeType":"IfStatement","src":"15355:335:10","trueBody":{"id":2748,"nodeType":"Block","src":"15390:243:10","statements":[{"assignments":[2729,2731],"declarations":[{"constant":false,"id":2729,"mutability":"mutable","name":"s","nameLocation":"15511:1:10","nodeType":"VariableDeclaration","scope":2748,"src":"15506:6:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2728,"name":"bool","nodeType":"ElementaryTypeName","src":"15506:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2731,"mutability":"mutable","name":"v","nameLocation":"15522:1:10","nodeType":"VariableDeclaration","scope":2748,"src":"15514:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2730,"name":"uint256","nodeType":"ElementaryTypeName","src":"15514:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2737,"initialValue":{"arguments":[{"id":2733,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2658,"src":"15559:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2734,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"15566:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2735,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2662,"src":"15573:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2732,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2584,"src":"15527:31:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15527:50:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15505:72:10"},{"expression":{"components":[{"id":2738,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2729,"src":"15599:1:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":2743,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2731,"src":"15618:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2742,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15610:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2741,"name":"uint160","nodeType":"ElementaryTypeName","src":"15610:7:10","typeDescriptions":{}}},"id":2744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15610:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2740,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15602:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2739,"name":"address","nodeType":"ElementaryTypeName","src":"15602:7:10","typeDescriptions":{}}},"id":2745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15602:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2746,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15598:24:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2668,"id":2747,"nodeType":"Return","src":"15591:31:10"}]}}]},"documentation":{"id":2656,"nodeType":"StructuredDocumentation","src":"14599:203:10","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress} requirements."},"id":2759,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14816:15:10","nodeType":"FunctionDefinition","parameters":{"id":2663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2658,"mutability":"mutable","name":"input","nameLocation":"14855:5:10","nodeType":"VariableDeclaration","scope":2759,"src":"14841:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2657,"name":"string","nodeType":"ElementaryTypeName","src":"14841:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2660,"mutability":"mutable","name":"begin","nameLocation":"14878:5:10","nodeType":"VariableDeclaration","scope":2759,"src":"14870:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2659,"name":"uint256","nodeType":"ElementaryTypeName","src":"14870:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2662,"mutability":"mutable","name":"end","nameLocation":"14901:3:10","nodeType":"VariableDeclaration","scope":2759,"src":"14893:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2661,"name":"uint256","nodeType":"ElementaryTypeName","src":"14893:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14831:79:10"},"returnParameters":{"id":2668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2665,"mutability":"mutable","name":"success","nameLocation":"14939:7:10","nodeType":"VariableDeclaration","scope":2759,"src":"14934:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2664,"name":"bool","nodeType":"ElementaryTypeName","src":"14934:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2667,"mutability":"mutable","name":"value","nameLocation":"14956:5:10","nodeType":"VariableDeclaration","scope":2759,"src":"14948:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2666,"name":"address","nodeType":"ElementaryTypeName","src":"14948:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14933:29:10"},"scope":2832,"src":"14807:889:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2818,"nodeType":"Block","src":"15765:461:10","statements":[{"assignments":[2767],"declarations":[{"constant":false,"id":2767,"mutability":"mutable","name":"value","nameLocation":"15781:5:10","nodeType":"VariableDeclaration","scope":2818,"src":"15775:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2766,"name":"uint8","nodeType":"ElementaryTypeName","src":"15775:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2772,"initialValue":{"arguments":[{"id":2770,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"15795:3:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2769,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15789:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2768,"name":"uint8","nodeType":"ElementaryTypeName","src":"15789:5:10","typeDescriptions":{}}},"id":2771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15789:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"15775:24:10"},{"id":2815,"nodeType":"UncheckedBlock","src":"15959:238:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2773,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2767,"src":"15987:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":2774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15995:2:10","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"15987:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2776,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2767,"src":"16001:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":2777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16009:2:10","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16001:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15987:24:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2784,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2767,"src":"16047:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":2785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16055:2:10","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16047:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2787,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2767,"src":"16061:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":2788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16069:3:10","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16061:11:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16047:25:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2795,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2767,"src":"16108:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":2796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16116:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16108:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2798,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2767,"src":"16122:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":2799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16130:2:10","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16122:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16108:24:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":2808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16176:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2807,"name":"uint8","nodeType":"ElementaryTypeName","src":"16176:5:10","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":2806,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16171:4:10","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16171:11:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":2810,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16183:3:10","memberName":"max","nodeType":"MemberAccess","src":"16171:15:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":2765,"id":2811,"nodeType":"Return","src":"16164:22:10"},"id":2812,"nodeType":"IfStatement","src":"16104:82:10","trueBody":{"expression":{"id":2804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2802,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2767,"src":"16134:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":2803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16143:2:10","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"16134:11:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2805,"nodeType":"ExpressionStatement","src":"16134:11:10"}},"id":2813,"nodeType":"IfStatement","src":"16043:143:10","trueBody":{"expression":{"id":2793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2791,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2767,"src":"16074:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":2792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16083:2:10","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16074:11:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2794,"nodeType":"ExpressionStatement","src":"16074:11:10"}},"id":2814,"nodeType":"IfStatement","src":"15983:203:10","trueBody":{"expression":{"id":2782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2780,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2767,"src":"16013:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":2781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16022:2:10","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16013:11:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2783,"nodeType":"ExpressionStatement","src":"16013:11:10"}}]},{"expression":{"id":2816,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2767,"src":"16214:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":2765,"id":2817,"nodeType":"Return","src":"16207:12:10"}]},"id":2819,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"15711:12:10","nodeType":"FunctionDefinition","parameters":{"id":2762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2761,"mutability":"mutable","name":"chr","nameLocation":"15731:3:10","nodeType":"VariableDeclaration","scope":2819,"src":"15724:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2760,"name":"bytes1","nodeType":"ElementaryTypeName","src":"15724:6:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"15723:12:10"},"returnParameters":{"id":2765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2764,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2819,"src":"15758:5:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2763,"name":"uint8","nodeType":"ElementaryTypeName","src":"15758:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"15757:7:10"},"scope":2832,"src":"15702:524:10","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2830,"nodeType":"Block","src":"16611:225:10","statements":[{"AST":{"nodeType":"YulBlock","src":"16760:70:10","statements":[{"nodeType":"YulAssignment","src":"16774:46:10","value":{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"16793:6:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16805:4:10","type":"","value":"0x20"},{"name":"offset","nodeType":"YulIdentifier","src":"16811:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16801:3:10"},"nodeType":"YulFunctionCall","src":"16801:17:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16789:3:10"},"nodeType":"YulFunctionCall","src":"16789:30:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16783:5:10"},"nodeType":"YulFunctionCall","src":"16783:37:10"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"16774:5:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2822,"isOffset":false,"isSlot":false,"src":"16793:6:10","valueSize":1},{"declaration":2824,"isOffset":false,"isSlot":false,"src":"16811:6:10","valueSize":1},{"declaration":2827,"isOffset":false,"isSlot":false,"src":"16774:5:10","valueSize":1}],"flags":["memory-safe"],"id":2829,"nodeType":"InlineAssembly","src":"16735:95:10"}]},"documentation":{"id":2820,"nodeType":"StructuredDocumentation","src":"16232:268:10","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"id":2831,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"16514:22:10","nodeType":"FunctionDefinition","parameters":{"id":2825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2822,"mutability":"mutable","name":"buffer","nameLocation":"16550:6:10","nodeType":"VariableDeclaration","scope":2831,"src":"16537:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2821,"name":"bytes","nodeType":"ElementaryTypeName","src":"16537:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2824,"mutability":"mutable","name":"offset","nameLocation":"16566:6:10","nodeType":"VariableDeclaration","scope":2831,"src":"16558:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2823,"name":"uint256","nodeType":"ElementaryTypeName","src":"16558:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16536:37:10"},"returnParameters":{"id":2828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2827,"mutability":"mutable","name":"value","nameLocation":"16604:5:10","nodeType":"VariableDeclaration","scope":2831,"src":"16596:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2826,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16596:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16595:15:10"},"scope":2832,"src":"16505:331:10","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2833,"src":"297:16541:10","usedErrors":[1656,1659,1662],"usedEvents":[]}],"src":"101:16738:10"},"id":10},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[2856],"IERC165":[2868]},"id":2857,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2834,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:11"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":2836,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2857,"sourceUnit":2869,"src":"140:38:11","symbolAliases":[{"foreign":{"id":2835,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2868,"src":"148:7:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2838,"name":"IERC165","nameLocations":["688:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":2868,"src":"688:7:11"},"id":2839,"nodeType":"InheritanceSpecifier","src":"688:7:11"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":2837,"nodeType":"StructuredDocumentation","src":"180:479:11","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":2856,"linearizedBaseContracts":[2856,2868],"name":"ERC165","nameLocation":"678:6:11","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[2867],"body":{"id":2854,"nodeType":"Block","src":"845:64:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2847,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2842,"src":"862:11:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2849,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2868,"src":"882:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$2868_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$2868_$","typeString":"type(contract IERC165)"}],"id":2848,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"877:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"877:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$2868","typeString":"type(contract IERC165)"}},"id":2851,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"891:11:11","memberName":"interfaceId","nodeType":"MemberAccess","src":"877:25:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"862:40:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2846,"id":2853,"nodeType":"Return","src":"855:47:11"}]},"documentation":{"id":2840,"nodeType":"StructuredDocumentation","src":"702:56:11","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":2855,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"772:17:11","nodeType":"FunctionDefinition","parameters":{"id":2843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2842,"mutability":"mutable","name":"interfaceId","nameLocation":"797:11:11","nodeType":"VariableDeclaration","scope":2855,"src":"790:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2841,"name":"bytes4","nodeType":"ElementaryTypeName","src":"790:6:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"789:20:11"},"returnParameters":{"id":2846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2845,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2855,"src":"839:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2844,"name":"bool","nodeType":"ElementaryTypeName","src":"839:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"838:6:11"},"scope":2856,"src":"763:146:11","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":2857,"src":"660:251:11","usedErrors":[],"usedEvents":[]}],"src":"114:798:11"},"id":11},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[2868]},"id":2869,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2858,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:12"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":2859,"nodeType":"StructuredDocumentation","src":"141:280:12","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":2868,"linearizedBaseContracts":[2868],"name":"IERC165","nameLocation":"432:7:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2860,"nodeType":"StructuredDocumentation","src":"446:340:12","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":2867,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"800:17:12","nodeType":"FunctionDefinition","parameters":{"id":2863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2862,"mutability":"mutable","name":"interfaceId","nameLocation":"825:11:12","nodeType":"VariableDeclaration","scope":2867,"src":"818:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2861,"name":"bytes4","nodeType":"ElementaryTypeName","src":"818:6:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"817:20:12"},"returnParameters":{"id":2866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2865,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2867,"src":"861:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2864,"name":"bool","nodeType":"ElementaryTypeName","src":"861:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"860:6:12"},"scope":2868,"src":"791:76:12","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2869,"src":"422:447:12","usedErrors":[],"usedEvents":[]}],"src":"115:755:12"},"id":12},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[4474],"Panic":[1563],"SafeCast":[6239]},"id":4475,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2870,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:13"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":2872,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4475,"sourceUnit":1564,"src":"129:35:13","symbolAliases":[{"foreign":{"id":2871,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"137:5:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":2874,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4475,"sourceUnit":6240,"src":"165:40:13","symbolAliases":[{"foreign":{"id":2873,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"173:8:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":2875,"nodeType":"StructuredDocumentation","src":"207:73:13","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":4474,"linearizedBaseContracts":[4474],"name":"Math","nameLocation":"289:4:13","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":2880,"members":[{"id":2876,"name":"Floor","nameLocation":"324:5:13","nodeType":"EnumValue","src":"324:5:13"},{"id":2877,"name":"Ceil","nameLocation":"367:4:13","nodeType":"EnumValue","src":"367:4:13"},{"id":2878,"name":"Trunc","nameLocation":"409:5:13","nodeType":"EnumValue","src":"409:5:13"},{"id":2879,"name":"Expand","nameLocation":"439:6:13","nodeType":"EnumValue","src":"439:6:13"}],"name":"Rounding","nameLocation":"305:8:13","nodeType":"EnumDefinition","src":"300:169:13"},{"body":{"id":2911,"nodeType":"Block","src":"677:140:13","statements":[{"id":2910,"nodeType":"UncheckedBlock","src":"687:124:13","statements":[{"assignments":[2893],"declarations":[{"constant":false,"id":2893,"mutability":"mutable","name":"c","nameLocation":"719:1:13","nodeType":"VariableDeclaration","scope":2910,"src":"711:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2892,"name":"uint256","nodeType":"ElementaryTypeName","src":"711:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2897,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2894,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2883,"src":"723:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2895,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2885,"src":"727:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"723:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"711:17:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2898,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2893,"src":"746:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2899,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2883,"src":"750:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"746:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2905,"nodeType":"IfStatement","src":"742:28:13","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"761:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"768:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2903,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"760:10:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2891,"id":2904,"nodeType":"Return","src":"753:17:13"}},{"expression":{"components":[{"hexValue":"74727565","id":2906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"792:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2907,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2893,"src":"798:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2908,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"791:9:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2891,"id":2909,"nodeType":"Return","src":"784:16:13"}]}]},"documentation":{"id":2881,"nodeType":"StructuredDocumentation","src":"475:106:13","text":" @dev Returns the addition of two unsigned integers, with an success flag (no overflow)."},"id":2912,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"595:6:13","nodeType":"FunctionDefinition","parameters":{"id":2886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2883,"mutability":"mutable","name":"a","nameLocation":"610:1:13","nodeType":"VariableDeclaration","scope":2912,"src":"602:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2882,"name":"uint256","nodeType":"ElementaryTypeName","src":"602:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2885,"mutability":"mutable","name":"b","nameLocation":"621:1:13","nodeType":"VariableDeclaration","scope":2912,"src":"613:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2884,"name":"uint256","nodeType":"ElementaryTypeName","src":"613:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"601:22:13"},"returnParameters":{"id":2891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2888,"mutability":"mutable","name":"success","nameLocation":"652:7:13","nodeType":"VariableDeclaration","scope":2912,"src":"647:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2887,"name":"bool","nodeType":"ElementaryTypeName","src":"647:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2890,"mutability":"mutable","name":"result","nameLocation":"669:6:13","nodeType":"VariableDeclaration","scope":2912,"src":"661:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2889,"name":"uint256","nodeType":"ElementaryTypeName","src":"661:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"646:30:13"},"scope":4474,"src":"586:231:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2939,"nodeType":"Block","src":"1028:113:13","statements":[{"id":2938,"nodeType":"UncheckedBlock","src":"1038:97:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2924,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2917,"src":"1066:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2925,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2915,"src":"1070:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1066:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2931,"nodeType":"IfStatement","src":"1062:28:13","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1081:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1088:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2929,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1080:10:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2923,"id":2930,"nodeType":"Return","src":"1073:17:13"}},{"expression":{"components":[{"hexValue":"74727565","id":2932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1112:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2933,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2915,"src":"1118:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2934,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2917,"src":"1122:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1118:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2936,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1111:13:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2923,"id":2937,"nodeType":"Return","src":"1104:20:13"}]}]},"documentation":{"id":2913,"nodeType":"StructuredDocumentation","src":"823:109:13","text":" @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow)."},"id":2940,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"946:6:13","nodeType":"FunctionDefinition","parameters":{"id":2918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2915,"mutability":"mutable","name":"a","nameLocation":"961:1:13","nodeType":"VariableDeclaration","scope":2940,"src":"953:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2914,"name":"uint256","nodeType":"ElementaryTypeName","src":"953:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2917,"mutability":"mutable","name":"b","nameLocation":"972:1:13","nodeType":"VariableDeclaration","scope":2940,"src":"964:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2916,"name":"uint256","nodeType":"ElementaryTypeName","src":"964:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"952:22:13"},"returnParameters":{"id":2923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2920,"mutability":"mutable","name":"success","nameLocation":"1003:7:13","nodeType":"VariableDeclaration","scope":2940,"src":"998:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2919,"name":"bool","nodeType":"ElementaryTypeName","src":"998:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2922,"mutability":"mutable","name":"result","nameLocation":"1020:6:13","nodeType":"VariableDeclaration","scope":2940,"src":"1012:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2921,"name":"uint256","nodeType":"ElementaryTypeName","src":"1012:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"997:30:13"},"scope":4474,"src":"937:204:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2981,"nodeType":"Block","src":"1355:417:13","statements":[{"id":2980,"nodeType":"UncheckedBlock","src":"1365:401:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2952,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2943,"src":"1623:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1628:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1623:6:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2959,"nodeType":"IfStatement","src":"1619:28:13","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":2955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1639:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":2956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1645:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2957,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1638:9:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2951,"id":2958,"nodeType":"Return","src":"1631:16:13"}},{"assignments":[2961],"declarations":[{"constant":false,"id":2961,"mutability":"mutable","name":"c","nameLocation":"1669:1:13","nodeType":"VariableDeclaration","scope":2980,"src":"1661:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2960,"name":"uint256","nodeType":"ElementaryTypeName","src":"1661:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2965,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2962,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2943,"src":"1673:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2963,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2945,"src":"1677:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1673:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1661:17:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2966,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2961,"src":"1696:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2967,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2943,"src":"1700:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2969,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2945,"src":"1705:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2975,"nodeType":"IfStatement","src":"1692:33:13","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1716:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1723:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2973,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1715:10:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2951,"id":2974,"nodeType":"Return","src":"1708:17:13"}},{"expression":{"components":[{"hexValue":"74727565","id":2976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1747:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2977,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2961,"src":"1753:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2978,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1746:9:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2951,"id":2979,"nodeType":"Return","src":"1739:16:13"}]}]},"documentation":{"id":2941,"nodeType":"StructuredDocumentation","src":"1147:112:13","text":" @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow)."},"id":2982,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1273:6:13","nodeType":"FunctionDefinition","parameters":{"id":2946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2943,"mutability":"mutable","name":"a","nameLocation":"1288:1:13","nodeType":"VariableDeclaration","scope":2982,"src":"1280:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2942,"name":"uint256","nodeType":"ElementaryTypeName","src":"1280:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2945,"mutability":"mutable","name":"b","nameLocation":"1299:1:13","nodeType":"VariableDeclaration","scope":2982,"src":"1291:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2944,"name":"uint256","nodeType":"ElementaryTypeName","src":"1291:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1279:22:13"},"returnParameters":{"id":2951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2948,"mutability":"mutable","name":"success","nameLocation":"1330:7:13","nodeType":"VariableDeclaration","scope":2982,"src":"1325:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2947,"name":"bool","nodeType":"ElementaryTypeName","src":"1325:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2950,"mutability":"mutable","name":"result","nameLocation":"1347:6:13","nodeType":"VariableDeclaration","scope":2982,"src":"1339:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2949,"name":"uint256","nodeType":"ElementaryTypeName","src":"1339:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1324:30:13"},"scope":4474,"src":"1264:508:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3009,"nodeType":"Block","src":"1987:114:13","statements":[{"id":3008,"nodeType":"UncheckedBlock","src":"1997:98:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2994,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2987,"src":"2025:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2030:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2025:6:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3001,"nodeType":"IfStatement","src":"2021:29:13","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2041:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2048:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2999,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2040:10:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2993,"id":3000,"nodeType":"Return","src":"2033:17:13"}},{"expression":{"components":[{"hexValue":"74727565","id":3002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2072:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3003,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2985,"src":"2078:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3004,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2987,"src":"2082:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2078:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3006,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2071:13:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2993,"id":3007,"nodeType":"Return","src":"2064:20:13"}]}]},"documentation":{"id":2983,"nodeType":"StructuredDocumentation","src":"1778:113:13","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":3010,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1905:6:13","nodeType":"FunctionDefinition","parameters":{"id":2988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2985,"mutability":"mutable","name":"a","nameLocation":"1920:1:13","nodeType":"VariableDeclaration","scope":3010,"src":"1912:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2984,"name":"uint256","nodeType":"ElementaryTypeName","src":"1912:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2987,"mutability":"mutable","name":"b","nameLocation":"1931:1:13","nodeType":"VariableDeclaration","scope":3010,"src":"1923:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2986,"name":"uint256","nodeType":"ElementaryTypeName","src":"1923:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1911:22:13"},"returnParameters":{"id":2993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2990,"mutability":"mutable","name":"success","nameLocation":"1962:7:13","nodeType":"VariableDeclaration","scope":3010,"src":"1957:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2989,"name":"bool","nodeType":"ElementaryTypeName","src":"1957:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2992,"mutability":"mutable","name":"result","nameLocation":"1979:6:13","nodeType":"VariableDeclaration","scope":3010,"src":"1971:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2991,"name":"uint256","nodeType":"ElementaryTypeName","src":"1971:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1956:30:13"},"scope":4474,"src":"1896:205:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3037,"nodeType":"Block","src":"2326:114:13","statements":[{"id":3036,"nodeType":"UncheckedBlock","src":"2336:98:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3022,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3015,"src":"2364:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2369:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2364:6:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3029,"nodeType":"IfStatement","src":"2360:29:13","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2380:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2387:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3027,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2379:10:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3021,"id":3028,"nodeType":"Return","src":"2372:17:13"}},{"expression":{"components":[{"hexValue":"74727565","id":3030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2411:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3031,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3013,"src":"2417:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":3032,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3015,"src":"2421:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2417:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3034,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2410:13:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3021,"id":3035,"nodeType":"Return","src":"2403:20:13"}]}]},"documentation":{"id":3011,"nodeType":"StructuredDocumentation","src":"2107:123:13","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":3038,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2244:6:13","nodeType":"FunctionDefinition","parameters":{"id":3016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3013,"mutability":"mutable","name":"a","nameLocation":"2259:1:13","nodeType":"VariableDeclaration","scope":3038,"src":"2251:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3012,"name":"uint256","nodeType":"ElementaryTypeName","src":"2251:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3015,"mutability":"mutable","name":"b","nameLocation":"2270:1:13","nodeType":"VariableDeclaration","scope":3038,"src":"2262:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3014,"name":"uint256","nodeType":"ElementaryTypeName","src":"2262:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2250:22:13"},"returnParameters":{"id":3021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3018,"mutability":"mutable","name":"success","nameLocation":"2301:7:13","nodeType":"VariableDeclaration","scope":3038,"src":"2296:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3017,"name":"bool","nodeType":"ElementaryTypeName","src":"2296:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3020,"mutability":"mutable","name":"result","nameLocation":"2318:6:13","nodeType":"VariableDeclaration","scope":3038,"src":"2310:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3019,"name":"uint256","nodeType":"ElementaryTypeName","src":"2310:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2295:30:13"},"scope":4474,"src":"2235:205:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3064,"nodeType":"Block","src":"2912:207:13","statements":[{"id":3063,"nodeType":"UncheckedBlock","src":"2922:191:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3050,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3045,"src":"3060:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3051,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3043,"src":"3066:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3052,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3045,"src":"3070:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3066:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3054,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3065:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3057,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3041,"src":"3091:9:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3055,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"3075:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6239_$","typeString":"type(library SafeCast)"}},"id":3056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3084:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6238,"src":"3075:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3075:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3065:36:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3060,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3064:38:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3060:42:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3049,"id":3062,"nodeType":"Return","src":"3053:49:13"}]}]},"documentation":{"id":3039,"nodeType":"StructuredDocumentation","src":"2446:374:13","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":3065,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"2834:7:13","nodeType":"FunctionDefinition","parameters":{"id":3046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3041,"mutability":"mutable","name":"condition","nameLocation":"2847:9:13","nodeType":"VariableDeclaration","scope":3065,"src":"2842:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3040,"name":"bool","nodeType":"ElementaryTypeName","src":"2842:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3043,"mutability":"mutable","name":"a","nameLocation":"2866:1:13","nodeType":"VariableDeclaration","scope":3065,"src":"2858:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3042,"name":"uint256","nodeType":"ElementaryTypeName","src":"2858:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3045,"mutability":"mutable","name":"b","nameLocation":"2877:1:13","nodeType":"VariableDeclaration","scope":3065,"src":"2869:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3044,"name":"uint256","nodeType":"ElementaryTypeName","src":"2869:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2841:38:13"},"returnParameters":{"id":3049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3048,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3065,"src":"2903:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3047,"name":"uint256","nodeType":"ElementaryTypeName","src":"2903:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2902:9:13"},"scope":4474,"src":"2825:294:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3083,"nodeType":"Block","src":"3256:44:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3076,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3068,"src":"3281:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3077,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3070,"src":"3285:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3281:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3079,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3068,"src":"3288:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3080,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3070,"src":"3291:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3075,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3065,"src":"3273:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3273:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3074,"id":3082,"nodeType":"Return","src":"3266:27:13"}]},"documentation":{"id":3066,"nodeType":"StructuredDocumentation","src":"3125:59:13","text":" @dev Returns the largest of two numbers."},"id":3084,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"3198:3:13","nodeType":"FunctionDefinition","parameters":{"id":3071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3068,"mutability":"mutable","name":"a","nameLocation":"3210:1:13","nodeType":"VariableDeclaration","scope":3084,"src":"3202:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3067,"name":"uint256","nodeType":"ElementaryTypeName","src":"3202:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3070,"mutability":"mutable","name":"b","nameLocation":"3221:1:13","nodeType":"VariableDeclaration","scope":3084,"src":"3213:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3069,"name":"uint256","nodeType":"ElementaryTypeName","src":"3213:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3201:22:13"},"returnParameters":{"id":3074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3073,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3084,"src":"3247:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3072,"name":"uint256","nodeType":"ElementaryTypeName","src":"3247:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3246:9:13"},"scope":4474,"src":"3189:111:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3102,"nodeType":"Block","src":"3438:44:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3095,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3087,"src":"3463:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3096,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3089,"src":"3467:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3463:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3098,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3087,"src":"3470:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3099,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3089,"src":"3473:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3094,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3065,"src":"3455:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3455:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3093,"id":3101,"nodeType":"Return","src":"3448:27:13"}]},"documentation":{"id":3085,"nodeType":"StructuredDocumentation","src":"3306:60:13","text":" @dev Returns the smallest of two numbers."},"id":3103,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"3380:3:13","nodeType":"FunctionDefinition","parameters":{"id":3090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3087,"mutability":"mutable","name":"a","nameLocation":"3392:1:13","nodeType":"VariableDeclaration","scope":3103,"src":"3384:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3086,"name":"uint256","nodeType":"ElementaryTypeName","src":"3384:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3089,"mutability":"mutable","name":"b","nameLocation":"3403:1:13","nodeType":"VariableDeclaration","scope":3103,"src":"3395:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3088,"name":"uint256","nodeType":"ElementaryTypeName","src":"3395:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3383:22:13"},"returnParameters":{"id":3093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3092,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3103,"src":"3429:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3091,"name":"uint256","nodeType":"ElementaryTypeName","src":"3429:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3428:9:13"},"scope":4474,"src":"3371:111:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3125,"nodeType":"Block","src":"3666:82:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3113,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3106,"src":"3721:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3114,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3108,"src":"3725:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3721:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3116,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3720:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3117,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3106,"src":"3731:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3118,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3108,"src":"3735:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3731:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3120,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3730:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":3121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3740:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3730:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3720:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3112,"id":3124,"nodeType":"Return","src":"3713:28:13"}]},"documentation":{"id":3104,"nodeType":"StructuredDocumentation","src":"3488:102:13","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":3126,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"3604:7:13","nodeType":"FunctionDefinition","parameters":{"id":3109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3106,"mutability":"mutable","name":"a","nameLocation":"3620:1:13","nodeType":"VariableDeclaration","scope":3126,"src":"3612:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3105,"name":"uint256","nodeType":"ElementaryTypeName","src":"3612:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3108,"mutability":"mutable","name":"b","nameLocation":"3631:1:13","nodeType":"VariableDeclaration","scope":3126,"src":"3623:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3107,"name":"uint256","nodeType":"ElementaryTypeName","src":"3623:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3611:22:13"},"returnParameters":{"id":3112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3111,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3126,"src":"3657:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3110,"name":"uint256","nodeType":"ElementaryTypeName","src":"3657:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3656:9:13"},"scope":4474,"src":"3595:153:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3166,"nodeType":"Block","src":"4040:633:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3136,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3131,"src":"4054:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4059:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4054:6:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3147,"nodeType":"IfStatement","src":"4050:150:13","trueBody":{"id":3146,"nodeType":"Block","src":"4062:138:13","statements":[{"expression":{"arguments":[{"expression":{"id":3142,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"4166:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1563_$","typeString":"type(library Panic)"}},"id":3143,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4172:16:13","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1530,"src":"4166:22:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3139,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"4154:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1563_$","typeString":"type(library Panic)"}},"id":3141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4160:5:13","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1562,"src":"4154:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4154:35:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3145,"nodeType":"ExpressionStatement","src":"4154:35:13"}]}},{"id":3165,"nodeType":"UncheckedBlock","src":"4583:84:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3150,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3129,"src":"4630:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4634:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4630:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3148,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"4614:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6239_$","typeString":"type(library SafeCast)"}},"id":3149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4623:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6238,"src":"4614:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4614:22:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3154,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3129,"src":"4641:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4645:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4641:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3157,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4640:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3158,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3131,"src":"4650:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4640:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4654:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4640:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3162,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4639:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4614:42:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3135,"id":3164,"nodeType":"Return","src":"4607:49:13"}]}]},"documentation":{"id":3127,"nodeType":"StructuredDocumentation","src":"3754:210:13","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":3167,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"3978:7:13","nodeType":"FunctionDefinition","parameters":{"id":3132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3129,"mutability":"mutable","name":"a","nameLocation":"3994:1:13","nodeType":"VariableDeclaration","scope":3167,"src":"3986:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3128,"name":"uint256","nodeType":"ElementaryTypeName","src":"3986:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3131,"mutability":"mutable","name":"b","nameLocation":"4005:1:13","nodeType":"VariableDeclaration","scope":3167,"src":"3997:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3130,"name":"uint256","nodeType":"ElementaryTypeName","src":"3997:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3985:22:13"},"returnParameters":{"id":3135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3134,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3167,"src":"4031:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3133,"name":"uint256","nodeType":"ElementaryTypeName","src":"4031:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4030:9:13"},"scope":4474,"src":"3969:704:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3303,"nodeType":"Block","src":"5094:4128:13","statements":[{"id":3302,"nodeType":"UncheckedBlock","src":"5104:4112:13","statements":[{"assignments":[3180],"declarations":[{"constant":false,"id":3180,"mutability":"mutable","name":"prod0","nameLocation":"5441:5:13","nodeType":"VariableDeclaration","scope":3302,"src":"5433:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3179,"name":"uint256","nodeType":"ElementaryTypeName","src":"5433:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3184,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3181,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3170,"src":"5449:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3182,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3172,"src":"5453:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5449:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5433:21:13"},{"assignments":[3186],"declarations":[{"constant":false,"id":3186,"mutability":"mutable","name":"prod1","nameLocation":"5521:5:13","nodeType":"VariableDeclaration","scope":3302,"src":"5513:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3185,"name":"uint256","nodeType":"ElementaryTypeName","src":"5513:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3187,"nodeType":"VariableDeclarationStatement","src":"5513:13:13"},{"AST":{"nodeType":"YulBlock","src":"5593:122:13","statements":[{"nodeType":"YulVariableDeclaration","src":"5611:30:13","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5628:1:13"},{"name":"y","nodeType":"YulIdentifier","src":"5631:1:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5638:1:13","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5634:3:13"},"nodeType":"YulFunctionCall","src":"5634:6:13"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"5621:6:13"},"nodeType":"YulFunctionCall","src":"5621:20:13"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"5615:2:13","type":""}]},{"nodeType":"YulAssignment","src":"5658:43:13","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"5675:2:13"},{"name":"prod0","nodeType":"YulIdentifier","src":"5679:5:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5671:3:13"},"nodeType":"YulFunctionCall","src":"5671:14:13"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"5690:2:13"},{"name":"prod0","nodeType":"YulIdentifier","src":"5694:5:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5687:2:13"},"nodeType":"YulFunctionCall","src":"5687:13:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5667:3:13"},"nodeType":"YulFunctionCall","src":"5667:34:13"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"5658:5:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3180,"isOffset":false,"isSlot":false,"src":"5679:5:13","valueSize":1},{"declaration":3180,"isOffset":false,"isSlot":false,"src":"5694:5:13","valueSize":1},{"declaration":3186,"isOffset":false,"isSlot":false,"src":"5658:5:13","valueSize":1},{"declaration":3170,"isOffset":false,"isSlot":false,"src":"5628:1:13","valueSize":1},{"declaration":3172,"isOffset":false,"isSlot":false,"src":"5631:1:13","valueSize":1}],"id":3188,"nodeType":"InlineAssembly","src":"5584:131:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3189,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"5796:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5805:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5796:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3197,"nodeType":"IfStatement","src":"5792:368:13","trueBody":{"id":3196,"nodeType":"Block","src":"5808:352:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3192,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3180,"src":"6126:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3193,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3174,"src":"6134:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6126:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3178,"id":3195,"nodeType":"Return","src":"6119:26:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3198,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3174,"src":"6270:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3199,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"6285:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6270:20:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3216,"nodeType":"IfStatement","src":"6266:143:13","trueBody":{"id":3215,"nodeType":"Block","src":"6292:117:13","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3205,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3174,"src":"6330:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6345:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6330:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":3208,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"6348:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1563_$","typeString":"type(library Panic)"}},"id":3209,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6354:16:13","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1530,"src":"6348:22:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3210,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"6372:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1563_$","typeString":"type(library Panic)"}},"id":3211,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6378:14:13","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":1526,"src":"6372:20:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3204,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3065,"src":"6322:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6322:71:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3201,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"6310:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1563_$","typeString":"type(library Panic)"}},"id":3203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6316:5:13","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1562,"src":"6310:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6310:84:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3214,"nodeType":"ExpressionStatement","src":"6310:84:13"}]}},{"assignments":[3218],"declarations":[{"constant":false,"id":3218,"mutability":"mutable","name":"remainder","nameLocation":"6672:9:13","nodeType":"VariableDeclaration","scope":3302,"src":"6664:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3217,"name":"uint256","nodeType":"ElementaryTypeName","src":"6664:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3219,"nodeType":"VariableDeclarationStatement","src":"6664:17:13"},{"AST":{"nodeType":"YulBlock","src":"6704:291:13","statements":[{"nodeType":"YulAssignment","src":"6773:38:13","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6793:1:13"},{"name":"y","nodeType":"YulIdentifier","src":"6796:1:13"},{"name":"denominator","nodeType":"YulIdentifier","src":"6799:11:13"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"6786:6:13"},"nodeType":"YulFunctionCall","src":"6786:25:13"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"6773:9:13"}]},{"nodeType":"YulAssignment","src":"6893:41:13","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"6906:5:13"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"6916:9:13"},{"name":"prod0","nodeType":"YulIdentifier","src":"6927:5:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6913:2:13"},"nodeType":"YulFunctionCall","src":"6913:20:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6902:3:13"},"nodeType":"YulFunctionCall","src":"6902:32:13"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"6893:5:13"}]},{"nodeType":"YulAssignment","src":"6951:30:13","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"6964:5:13"},{"name":"remainder","nodeType":"YulIdentifier","src":"6971:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6960:3:13"},"nodeType":"YulFunctionCall","src":"6960:21:13"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"6951:5:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3174,"isOffset":false,"isSlot":false,"src":"6799:11:13","valueSize":1},{"declaration":3180,"isOffset":false,"isSlot":false,"src":"6927:5:13","valueSize":1},{"declaration":3180,"isOffset":false,"isSlot":false,"src":"6951:5:13","valueSize":1},{"declaration":3180,"isOffset":false,"isSlot":false,"src":"6964:5:13","valueSize":1},{"declaration":3186,"isOffset":false,"isSlot":false,"src":"6893:5:13","valueSize":1},{"declaration":3186,"isOffset":false,"isSlot":false,"src":"6906:5:13","valueSize":1},{"declaration":3218,"isOffset":false,"isSlot":false,"src":"6773:9:13","valueSize":1},{"declaration":3218,"isOffset":false,"isSlot":false,"src":"6916:9:13","valueSize":1},{"declaration":3218,"isOffset":false,"isSlot":false,"src":"6971:9:13","valueSize":1},{"declaration":3170,"isOffset":false,"isSlot":false,"src":"6793:1:13","valueSize":1},{"declaration":3172,"isOffset":false,"isSlot":false,"src":"6796:1:13","valueSize":1}],"id":3220,"nodeType":"InlineAssembly","src":"6695:300:13"},{"assignments":[3222],"declarations":[{"constant":false,"id":3222,"mutability":"mutable","name":"twos","nameLocation":"7207:4:13","nodeType":"VariableDeclaration","scope":3302,"src":"7199:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3221,"name":"uint256","nodeType":"ElementaryTypeName","src":"7199:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3229,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3223,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3174,"src":"7214:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":3224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7229:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3225,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3174,"src":"7233:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7229:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3227,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7228:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7214:31:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7199:46:13"},{"AST":{"nodeType":"YulBlock","src":"7268:366:13","statements":[{"nodeType":"YulAssignment","src":"7333:37:13","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"7352:11:13"},{"name":"twos","nodeType":"YulIdentifier","src":"7365:4:13"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7348:3:13"},"nodeType":"YulFunctionCall","src":"7348:22:13"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"7333:11:13"}]},{"nodeType":"YulAssignment","src":"7437:25:13","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"7450:5:13"},{"name":"twos","nodeType":"YulIdentifier","src":"7457:4:13"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7446:3:13"},"nodeType":"YulFunctionCall","src":"7446:16:13"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"7437:5:13"}]},{"nodeType":"YulAssignment","src":"7581:39:13","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7601:1:13","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"7604:4:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7597:3:13"},"nodeType":"YulFunctionCall","src":"7597:12:13"},{"name":"twos","nodeType":"YulIdentifier","src":"7611:4:13"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7593:3:13"},"nodeType":"YulFunctionCall","src":"7593:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"7618:1:13","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7589:3:13"},"nodeType":"YulFunctionCall","src":"7589:31:13"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"7581:4:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3174,"isOffset":false,"isSlot":false,"src":"7333:11:13","valueSize":1},{"declaration":3174,"isOffset":false,"isSlot":false,"src":"7352:11:13","valueSize":1},{"declaration":3180,"isOffset":false,"isSlot":false,"src":"7437:5:13","valueSize":1},{"declaration":3180,"isOffset":false,"isSlot":false,"src":"7450:5:13","valueSize":1},{"declaration":3222,"isOffset":false,"isSlot":false,"src":"7365:4:13","valueSize":1},{"declaration":3222,"isOffset":false,"isSlot":false,"src":"7457:4:13","valueSize":1},{"declaration":3222,"isOffset":false,"isSlot":false,"src":"7581:4:13","valueSize":1},{"declaration":3222,"isOffset":false,"isSlot":false,"src":"7604:4:13","valueSize":1},{"declaration":3222,"isOffset":false,"isSlot":false,"src":"7611:4:13","valueSize":1}],"id":3230,"nodeType":"InlineAssembly","src":"7259:375:13"},{"expression":{"id":3235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3231,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3180,"src":"7700:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3232,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"7709:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3233,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3222,"src":"7717:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7709:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7700:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3236,"nodeType":"ExpressionStatement","src":"7700:21:13"},{"assignments":[3238],"declarations":[{"constant":false,"id":3238,"mutability":"mutable","name":"inverse","nameLocation":"8064:7:13","nodeType":"VariableDeclaration","scope":3302,"src":"8056:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3237,"name":"uint256","nodeType":"ElementaryTypeName","src":"8056:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3245,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8075:1:13","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3240,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3174,"src":"8079:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8075:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3242,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8074:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":3243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8094:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"8074:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8056:39:13"},{"expression":{"id":3252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3246,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3238,"src":"8312:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8323:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3248,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3174,"src":"8327:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3249,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3238,"src":"8341:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8327:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8323:25:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8312:36:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3253,"nodeType":"ExpressionStatement","src":"8312:36:13"},{"expression":{"id":3260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3254,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3238,"src":"8382:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8393:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3256,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3174,"src":"8397:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3257,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3238,"src":"8411:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8397:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8393:25:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8382:36:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3261,"nodeType":"ExpressionStatement","src":"8382:36:13"},{"expression":{"id":3268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3262,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3238,"src":"8454:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8465:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3264,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3174,"src":"8469:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3265,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3238,"src":"8483:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8469:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8465:25:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8454:36:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3269,"nodeType":"ExpressionStatement","src":"8454:36:13"},{"expression":{"id":3276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3270,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3238,"src":"8525:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8536:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3272,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3174,"src":"8540:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3273,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3238,"src":"8554:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8540:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8536:25:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8525:36:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3277,"nodeType":"ExpressionStatement","src":"8525:36:13"},{"expression":{"id":3284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3278,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3238,"src":"8598:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8609:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3280,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3174,"src":"8613:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3281,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3238,"src":"8627:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8613:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8609:25:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8598:36:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3285,"nodeType":"ExpressionStatement","src":"8598:36:13"},{"expression":{"id":3292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3286,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3238,"src":"8672:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8683:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3288,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3174,"src":"8687:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3289,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3238,"src":"8701:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8687:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8683:25:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8672:36:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3293,"nodeType":"ExpressionStatement","src":"8672:36:13"},{"expression":{"id":3298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3294,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3177,"src":"9154:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3295,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3180,"src":"9163:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3296,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3238,"src":"9171:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9163:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9154:24:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3299,"nodeType":"ExpressionStatement","src":"9154:24:13"},{"expression":{"id":3300,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3177,"src":"9199:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3178,"id":3301,"nodeType":"Return","src":"9192:13:13"}]}]},"documentation":{"id":3168,"nodeType":"StructuredDocumentation","src":"4679:312:13","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":3304,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"5005:6:13","nodeType":"FunctionDefinition","parameters":{"id":3175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3170,"mutability":"mutable","name":"x","nameLocation":"5020:1:13","nodeType":"VariableDeclaration","scope":3304,"src":"5012:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3169,"name":"uint256","nodeType":"ElementaryTypeName","src":"5012:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3172,"mutability":"mutable","name":"y","nameLocation":"5031:1:13","nodeType":"VariableDeclaration","scope":3304,"src":"5023:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3171,"name":"uint256","nodeType":"ElementaryTypeName","src":"5023:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3174,"mutability":"mutable","name":"denominator","nameLocation":"5042:11:13","nodeType":"VariableDeclaration","scope":3304,"src":"5034:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3173,"name":"uint256","nodeType":"ElementaryTypeName","src":"5034:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5011:43:13"},"returnParameters":{"id":3178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3177,"mutability":"mutable","name":"result","nameLocation":"5086:6:13","nodeType":"VariableDeclaration","scope":3304,"src":"5078:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3176,"name":"uint256","nodeType":"ElementaryTypeName","src":"5078:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5077:16:13"},"scope":4474,"src":"4996:4226:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3340,"nodeType":"Block","src":"9461:128:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3320,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3307,"src":"9485:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3321,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3309,"src":"9488:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3322,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3311,"src":"9491:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3319,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[3304,3341],"referencedDeclaration":3304,"src":"9478:6:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9478:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3327,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3314,"src":"9539:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2880","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2880","typeString":"enum Math.Rounding"}],"id":3326,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4473,"src":"9522:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2880_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9522:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3330,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3307,"src":"9559:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3331,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3309,"src":"9562:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3332,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3311,"src":"9565:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3329,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"9552:6:13","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9552:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9580:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9552:29:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9522:59:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3324,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"9506:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6239_$","typeString":"type(library SafeCast)"}},"id":3325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9515:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6238,"src":"9506:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9506:76:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9478:104:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3318,"id":3339,"nodeType":"Return","src":"9471:111:13"}]},"documentation":{"id":3305,"nodeType":"StructuredDocumentation","src":"9228:118:13","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":3341,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"9360:6:13","nodeType":"FunctionDefinition","parameters":{"id":3315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3307,"mutability":"mutable","name":"x","nameLocation":"9375:1:13","nodeType":"VariableDeclaration","scope":3341,"src":"9367:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3306,"name":"uint256","nodeType":"ElementaryTypeName","src":"9367:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3309,"mutability":"mutable","name":"y","nameLocation":"9386:1:13","nodeType":"VariableDeclaration","scope":3341,"src":"9378:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3308,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3311,"mutability":"mutable","name":"denominator","nameLocation":"9397:11:13","nodeType":"VariableDeclaration","scope":3341,"src":"9389:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3310,"name":"uint256","nodeType":"ElementaryTypeName","src":"9389:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3314,"mutability":"mutable","name":"rounding","nameLocation":"9419:8:13","nodeType":"VariableDeclaration","scope":3341,"src":"9410:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2880","typeString":"enum Math.Rounding"},"typeName":{"id":3313,"nodeType":"UserDefinedTypeName","pathNode":{"id":3312,"name":"Rounding","nameLocations":["9410:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":2880,"src":"9410:8:13"},"referencedDeclaration":2880,"src":"9410:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2880","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9366:62:13"},"returnParameters":{"id":3318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3317,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3341,"src":"9452:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3316,"name":"uint256","nodeType":"ElementaryTypeName","src":"9452:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9451:9:13"},"scope":4474,"src":"9351:238:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3437,"nodeType":"Block","src":"10223:1849:13","statements":[{"id":3436,"nodeType":"UncheckedBlock","src":"10233:1833:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3351,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3346,"src":"10261:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10266:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10261:6:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3356,"nodeType":"IfStatement","src":"10257:20:13","trueBody":{"expression":{"hexValue":"30","id":3354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3350,"id":3355,"nodeType":"Return","src":"10269:8:13"}},{"assignments":[3358],"declarations":[{"constant":false,"id":3358,"mutability":"mutable","name":"remainder","nameLocation":"10756:9:13","nodeType":"VariableDeclaration","scope":3436,"src":"10748:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3357,"name":"uint256","nodeType":"ElementaryTypeName","src":"10748:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3362,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3359,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3344,"src":"10768:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":3360,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3346,"src":"10772:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10768:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10748:25:13"},{"assignments":[3364],"declarations":[{"constant":false,"id":3364,"mutability":"mutable","name":"gcd","nameLocation":"10795:3:13","nodeType":"VariableDeclaration","scope":3436,"src":"10787:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3363,"name":"uint256","nodeType":"ElementaryTypeName","src":"10787:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3366,"initialValue":{"id":3365,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3346,"src":"10801:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10787:15:13"},{"assignments":[3368],"declarations":[{"constant":false,"id":3368,"mutability":"mutable","name":"x","nameLocation":"10945:1:13","nodeType":"VariableDeclaration","scope":3436,"src":"10938:8:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3367,"name":"int256","nodeType":"ElementaryTypeName","src":"10938:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3370,"initialValue":{"hexValue":"30","id":3369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10949:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10938:12:13"},{"assignments":[3372],"declarations":[{"constant":false,"id":3372,"mutability":"mutable","name":"y","nameLocation":"10971:1:13","nodeType":"VariableDeclaration","scope":3436,"src":"10964:8:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3371,"name":"int256","nodeType":"ElementaryTypeName","src":"10964:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3374,"initialValue":{"hexValue":"31","id":3373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10975:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"10964:12:13"},{"body":{"id":3411,"nodeType":"Block","src":"11014:882:13","statements":[{"assignments":[3379],"declarations":[{"constant":false,"id":3379,"mutability":"mutable","name":"quotient","nameLocation":"11040:8:13","nodeType":"VariableDeclaration","scope":3411,"src":"11032:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3378,"name":"uint256","nodeType":"ElementaryTypeName","src":"11032:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3383,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3380,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3364,"src":"11051:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3381,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3358,"src":"11057:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11051:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11032:34:13"},{"expression":{"id":3394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3384,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3364,"src":"11086:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3385,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3358,"src":"11091:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3386,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11085:16:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":3387,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3358,"src":"11191:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3388,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3364,"src":"11436:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3389,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3358,"src":"11442:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3390,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"11454:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11442:20:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11436:26:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3393,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11104:376:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"11085:395:13","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3395,"nodeType":"ExpressionStatement","src":"11085:395:13"},{"expression":{"id":3409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3396,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"11500:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":3397,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3372,"src":"11503:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3398,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11499:6:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":3399,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3372,"src":"11585:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3400,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"11839:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3401,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3372,"src":"11843:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3404,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"11854:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3403,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11847:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3402,"name":"int256","nodeType":"ElementaryTypeName","src":"11847:6:13","typeDescriptions":{}}},"id":3405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11847:16:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11843:20:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11839:24:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3408,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11508:373:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"11499:382:13","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3410,"nodeType":"ExpressionStatement","src":"11499:382:13"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3375,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3358,"src":"10998:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11011:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10998:14:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3412,"nodeType":"WhileStatement","src":"10991:905:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3413,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3364,"src":"11914:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":3414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11921:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11914:8:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3418,"nodeType":"IfStatement","src":"11910:22:13","trueBody":{"expression":{"hexValue":"30","id":3416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11931:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3350,"id":3417,"nodeType":"Return","src":"11924:8:13"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3420,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"11983:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":3421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11987:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11983:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3423,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3346,"src":"11990:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":3427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"12002:2:13","subExpression":{"id":3426,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"12003:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3425,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11994:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3424,"name":"uint256","nodeType":"ElementaryTypeName","src":"11994:7:13","typeDescriptions":{}}},"id":3428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11994:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11990:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3432,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"12015:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3431,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12007:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3430,"name":"uint256","nodeType":"ElementaryTypeName","src":"12007:7:13","typeDescriptions":{}}},"id":3433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12007:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3419,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3065,"src":"11975:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11975:43:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3350,"id":3435,"nodeType":"Return","src":"11968:50:13"}]}]},"documentation":{"id":3342,"nodeType":"StructuredDocumentation","src":"9595:553:13","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":3438,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"10162:6:13","nodeType":"FunctionDefinition","parameters":{"id":3347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3344,"mutability":"mutable","name":"a","nameLocation":"10177:1:13","nodeType":"VariableDeclaration","scope":3438,"src":"10169:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3343,"name":"uint256","nodeType":"ElementaryTypeName","src":"10169:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3346,"mutability":"mutable","name":"n","nameLocation":"10188:1:13","nodeType":"VariableDeclaration","scope":3438,"src":"10180:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3345,"name":"uint256","nodeType":"ElementaryTypeName","src":"10180:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10168:22:13"},"returnParameters":{"id":3350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3349,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3438,"src":"10214:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3348,"name":"uint256","nodeType":"ElementaryTypeName","src":"10214:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10213:9:13"},"scope":4474,"src":"10153:1919:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3458,"nodeType":"Block","src":"12672:82:13","statements":[{"id":3457,"nodeType":"UncheckedBlock","src":"12682:66:13","statements":[{"expression":{"arguments":[{"id":3450,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3441,"src":"12725:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3451,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3443,"src":"12728:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":3452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12732:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12728:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3454,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3443,"src":"12735:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3448,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4474,"src":"12713:4:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4474_$","typeString":"type(library Math)"}},"id":3449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12718:6:13","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":3495,"src":"12713:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":3455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12713:24:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3447,"id":3456,"nodeType":"Return","src":"12706:31:13"}]}]},"documentation":{"id":3439,"nodeType":"StructuredDocumentation","src":"12078:514:13","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":3459,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"12606:11:13","nodeType":"FunctionDefinition","parameters":{"id":3444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3441,"mutability":"mutable","name":"a","nameLocation":"12626:1:13","nodeType":"VariableDeclaration","scope":3459,"src":"12618:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3440,"name":"uint256","nodeType":"ElementaryTypeName","src":"12618:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3443,"mutability":"mutable","name":"p","nameLocation":"12637:1:13","nodeType":"VariableDeclaration","scope":3459,"src":"12629:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3442,"name":"uint256","nodeType":"ElementaryTypeName","src":"12629:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12617:22:13"},"returnParameters":{"id":3447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3446,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3459,"src":"12663:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3445,"name":"uint256","nodeType":"ElementaryTypeName","src":"12663:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12662:9:13"},"scope":4474,"src":"12597:157:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3494,"nodeType":"Block","src":"13524:174:13","statements":[{"assignments":[3472,3474],"declarations":[{"constant":false,"id":3472,"mutability":"mutable","name":"success","nameLocation":"13540:7:13","nodeType":"VariableDeclaration","scope":3494,"src":"13535:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3471,"name":"bool","nodeType":"ElementaryTypeName","src":"13535:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3474,"mutability":"mutable","name":"result","nameLocation":"13557:6:13","nodeType":"VariableDeclaration","scope":3494,"src":"13549:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3473,"name":"uint256","nodeType":"ElementaryTypeName","src":"13549:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3480,"initialValue":{"arguments":[{"id":3476,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3462,"src":"13577:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3477,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3464,"src":"13580:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3478,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3466,"src":"13583:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3475,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[3519,3601],"referencedDeclaration":3519,"src":"13567:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":3479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13567:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"13534:51:13"},{"condition":{"id":3482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13599:8:13","subExpression":{"id":3481,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3472,"src":"13600:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3491,"nodeType":"IfStatement","src":"13595:74:13","trueBody":{"id":3490,"nodeType":"Block","src":"13609:60:13","statements":[{"expression":{"arguments":[{"expression":{"id":3486,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"13635:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1563_$","typeString":"type(library Panic)"}},"id":3487,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13641:16:13","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1530,"src":"13635:22:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3483,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"13623:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1563_$","typeString":"type(library Panic)"}},"id":3485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13629:5:13","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1562,"src":"13623:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13623:35:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3489,"nodeType":"ExpressionStatement","src":"13623:35:13"}]}},{"expression":{"id":3492,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3474,"src":"13685:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3470,"id":3493,"nodeType":"Return","src":"13678:13:13"}]},"documentation":{"id":3460,"nodeType":"StructuredDocumentation","src":"12760:678:13","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":3495,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"13452:6:13","nodeType":"FunctionDefinition","parameters":{"id":3467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3462,"mutability":"mutable","name":"b","nameLocation":"13467:1:13","nodeType":"VariableDeclaration","scope":3495,"src":"13459:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3461,"name":"uint256","nodeType":"ElementaryTypeName","src":"13459:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3464,"mutability":"mutable","name":"e","nameLocation":"13478:1:13","nodeType":"VariableDeclaration","scope":3495,"src":"13470:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3463,"name":"uint256","nodeType":"ElementaryTypeName","src":"13470:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3466,"mutability":"mutable","name":"m","nameLocation":"13489:1:13","nodeType":"VariableDeclaration","scope":3495,"src":"13481:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3465,"name":"uint256","nodeType":"ElementaryTypeName","src":"13481:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13458:33:13"},"returnParameters":{"id":3470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3469,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3495,"src":"13515:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3468,"name":"uint256","nodeType":"ElementaryTypeName","src":"13515:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13514:9:13"},"scope":4474,"src":"13443:255:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3518,"nodeType":"Block","src":"14552:1493:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3509,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3502,"src":"14566:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14571:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14566:6:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3516,"nodeType":"IfStatement","src":"14562:29:13","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14582:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14589:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3514,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"14581:10:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3508,"id":3515,"nodeType":"Return","src":"14574:17:13"}},{"AST":{"nodeType":"YulBlock","src":"14626:1413:13","statements":[{"nodeType":"YulVariableDeclaration","src":"14640:22:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14657:4:13","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14651:5:13"},"nodeType":"YulFunctionCall","src":"14651:11:13"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"14644:3:13","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15570:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"15575:4:13","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15563:6:13"},"nodeType":"YulFunctionCall","src":"15563:17:13"},"nodeType":"YulExpressionStatement","src":"15563:17:13"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15604:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"15609:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15600:3:13"},"nodeType":"YulFunctionCall","src":"15600:14:13"},{"kind":"number","nodeType":"YulLiteral","src":"15616:4:13","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15593:6:13"},"nodeType":"YulFunctionCall","src":"15593:28:13"},"nodeType":"YulExpressionStatement","src":"15593:28:13"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15645:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"15650:4:13","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15641:3:13"},"nodeType":"YulFunctionCall","src":"15641:14:13"},{"kind":"number","nodeType":"YulLiteral","src":"15657:4:13","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15634:6:13"},"nodeType":"YulFunctionCall","src":"15634:28:13"},"nodeType":"YulExpressionStatement","src":"15634:28:13"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15686:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"15691:4:13","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15682:3:13"},"nodeType":"YulFunctionCall","src":"15682:14:13"},{"name":"b","nodeType":"YulIdentifier","src":"15698:1:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15675:6:13"},"nodeType":"YulFunctionCall","src":"15675:25:13"},"nodeType":"YulExpressionStatement","src":"15675:25:13"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15724:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"15729:4:13","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15720:3:13"},"nodeType":"YulFunctionCall","src":"15720:14:13"},{"name":"e","nodeType":"YulIdentifier","src":"15736:1:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15713:6:13"},"nodeType":"YulFunctionCall","src":"15713:25:13"},"nodeType":"YulExpressionStatement","src":"15713:25:13"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15762:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"15767:4:13","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15758:3:13"},"nodeType":"YulFunctionCall","src":"15758:14:13"},{"name":"m","nodeType":"YulIdentifier","src":"15774:1:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15751:6:13"},"nodeType":"YulFunctionCall","src":"15751:25:13"},"nodeType":"YulExpressionStatement","src":"15751:25:13"},{"nodeType":"YulAssignment","src":"15938:57:13","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"15960:3:13"},"nodeType":"YulFunctionCall","src":"15960:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"15967:4:13","type":"","value":"0x05"},{"name":"ptr","nodeType":"YulIdentifier","src":"15973:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"15978:4:13","type":"","value":"0xc0"},{"kind":"number","nodeType":"YulLiteral","src":"15984:4:13","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"15990:4:13","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"15949:10:13"},"nodeType":"YulFunctionCall","src":"15949:46:13"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"15938:7:13"}]},{"nodeType":"YulAssignment","src":"16008:21:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16024:4:13","type":"","value":"0x00"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16018:5:13"},"nodeType":"YulFunctionCall","src":"16018:11:13"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"16008:6:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3498,"isOffset":false,"isSlot":false,"src":"15698:1:13","valueSize":1},{"declaration":3500,"isOffset":false,"isSlot":false,"src":"15736:1:13","valueSize":1},{"declaration":3502,"isOffset":false,"isSlot":false,"src":"15774:1:13","valueSize":1},{"declaration":3507,"isOffset":false,"isSlot":false,"src":"16008:6:13","valueSize":1},{"declaration":3505,"isOffset":false,"isSlot":false,"src":"15938:7:13","valueSize":1}],"flags":["memory-safe"],"id":3517,"nodeType":"InlineAssembly","src":"14601:1438:13"}]},"documentation":{"id":3496,"nodeType":"StructuredDocumentation","src":"13704:738:13","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":3519,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"14456:9:13","nodeType":"FunctionDefinition","parameters":{"id":3503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3498,"mutability":"mutable","name":"b","nameLocation":"14474:1:13","nodeType":"VariableDeclaration","scope":3519,"src":"14466:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3497,"name":"uint256","nodeType":"ElementaryTypeName","src":"14466:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3500,"mutability":"mutable","name":"e","nameLocation":"14485:1:13","nodeType":"VariableDeclaration","scope":3519,"src":"14477:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3499,"name":"uint256","nodeType":"ElementaryTypeName","src":"14477:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3502,"mutability":"mutable","name":"m","nameLocation":"14496:1:13","nodeType":"VariableDeclaration","scope":3519,"src":"14488:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3501,"name":"uint256","nodeType":"ElementaryTypeName","src":"14488:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14465:33:13"},"returnParameters":{"id":3508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3505,"mutability":"mutable","name":"success","nameLocation":"14527:7:13","nodeType":"VariableDeclaration","scope":3519,"src":"14522:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3504,"name":"bool","nodeType":"ElementaryTypeName","src":"14522:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3507,"mutability":"mutable","name":"result","nameLocation":"14544:6:13","nodeType":"VariableDeclaration","scope":3519,"src":"14536:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3506,"name":"uint256","nodeType":"ElementaryTypeName","src":"14536:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14521:30:13"},"scope":4474,"src":"14447:1598:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3554,"nodeType":"Block","src":"16242:179:13","statements":[{"assignments":[3532,3534],"declarations":[{"constant":false,"id":3532,"mutability":"mutable","name":"success","nameLocation":"16258:7:13","nodeType":"VariableDeclaration","scope":3554,"src":"16253:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3531,"name":"bool","nodeType":"ElementaryTypeName","src":"16253:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3534,"mutability":"mutable","name":"result","nameLocation":"16280:6:13","nodeType":"VariableDeclaration","scope":3554,"src":"16267:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3533,"name":"bytes","nodeType":"ElementaryTypeName","src":"16267:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3540,"initialValue":{"arguments":[{"id":3536,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3522,"src":"16300:1:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3537,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3524,"src":"16303:1:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3538,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3526,"src":"16306:1:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3535,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[3519,3601],"referencedDeclaration":3601,"src":"16290:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":3539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16290:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"16252:56:13"},{"condition":{"id":3542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16322:8:13","subExpression":{"id":3541,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3532,"src":"16323:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3551,"nodeType":"IfStatement","src":"16318:74:13","trueBody":{"id":3550,"nodeType":"Block","src":"16332:60:13","statements":[{"expression":{"arguments":[{"expression":{"id":3546,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"16358:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1563_$","typeString":"type(library Panic)"}},"id":3547,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16364:16:13","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1530,"src":"16358:22:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3543,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"16346:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1563_$","typeString":"type(library Panic)"}},"id":3545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16352:5:13","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1562,"src":"16346:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16346:35:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3549,"nodeType":"ExpressionStatement","src":"16346:35:13"}]}},{"expression":{"id":3552,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3534,"src":"16408:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3530,"id":3553,"nodeType":"Return","src":"16401:13:13"}]},"documentation":{"id":3520,"nodeType":"StructuredDocumentation","src":"16051:85:13","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":3555,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"16150:6:13","nodeType":"FunctionDefinition","parameters":{"id":3527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3522,"mutability":"mutable","name":"b","nameLocation":"16170:1:13","nodeType":"VariableDeclaration","scope":3555,"src":"16157:14:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3521,"name":"bytes","nodeType":"ElementaryTypeName","src":"16157:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3524,"mutability":"mutable","name":"e","nameLocation":"16186:1:13","nodeType":"VariableDeclaration","scope":3555,"src":"16173:14:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3523,"name":"bytes","nodeType":"ElementaryTypeName","src":"16173:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3526,"mutability":"mutable","name":"m","nameLocation":"16202:1:13","nodeType":"VariableDeclaration","scope":3555,"src":"16189:14:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3525,"name":"bytes","nodeType":"ElementaryTypeName","src":"16189:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16156:48:13"},"returnParameters":{"id":3530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3529,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3555,"src":"16228:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3528,"name":"bytes","nodeType":"ElementaryTypeName","src":"16228:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16227:14:13"},"scope":4474,"src":"16141:280:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3600,"nodeType":"Block","src":"16675:771:13","statements":[{"condition":{"arguments":[{"id":3570,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3562,"src":"16700:1:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3569,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3634,"src":"16689:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":3571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16689:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3579,"nodeType":"IfStatement","src":"16685:47:13","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16712:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":3575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16729:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3574,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"16719:9:13","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3573,"name":"bytes","nodeType":"ElementaryTypeName","src":"16723:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16719:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":3577,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16711:21:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":3568,"id":3578,"nodeType":"Return","src":"16704:28:13"}},{"assignments":[3581],"declarations":[{"constant":false,"id":3581,"mutability":"mutable","name":"mLen","nameLocation":"16751:4:13","nodeType":"VariableDeclaration","scope":3600,"src":"16743:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3580,"name":"uint256","nodeType":"ElementaryTypeName","src":"16743:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3584,"initialValue":{"expression":{"id":3582,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3562,"src":"16758:1:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16760:6:13","memberName":"length","nodeType":"MemberAccess","src":"16758:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16743:23:13"},{"expression":{"id":3597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3585,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3567,"src":"16848:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":3588,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3558,"src":"16874:1:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16876:6:13","memberName":"length","nodeType":"MemberAccess","src":"16874:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3590,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3560,"src":"16884:1:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16886:6:13","memberName":"length","nodeType":"MemberAccess","src":"16884:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3592,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3581,"src":"16894:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3593,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3558,"src":"16900:1:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3594,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3560,"src":"16903:1:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3595,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3562,"src":"16906:1:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3586,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"16857:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3587,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16861:12:13","memberName":"encodePacked","nodeType":"MemberAccess","src":"16857:16:13","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16857:51:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"16848:60:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3598,"nodeType":"ExpressionStatement","src":"16848:60:13"},{"AST":{"nodeType":"YulBlock","src":"16944:496:13","statements":[{"nodeType":"YulVariableDeclaration","src":"16958:32:13","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"16977:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"16985:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16973:3:13"},"nodeType":"YulFunctionCall","src":"16973:17:13"},"variables":[{"name":"dataPtr","nodeType":"YulTypedName","src":"16962:7:13","type":""}]},{"nodeType":"YulAssignment","src":"17080:73:13","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"17102:3:13"},"nodeType":"YulFunctionCall","src":"17102:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"17109:4:13","type":"","value":"0x05"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"17115:7:13"},{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"17130:6:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17124:5:13"},"nodeType":"YulFunctionCall","src":"17124:13:13"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"17139:7:13"},{"name":"mLen","nodeType":"YulIdentifier","src":"17148:4:13"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"17091:10:13"},"nodeType":"YulFunctionCall","src":"17091:62:13"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"17080:7:13"}]},{"expression":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"17309:6:13"},{"name":"mLen","nodeType":"YulIdentifier","src":"17317:4:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17302:6:13"},"nodeType":"YulFunctionCall","src":"17302:20:13"},"nodeType":"YulExpressionStatement","src":"17302:20:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17405:4:13","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"17415:7:13"},{"name":"mLen","nodeType":"YulIdentifier","src":"17424:4:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17411:3:13"},"nodeType":"YulFunctionCall","src":"17411:18:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17398:6:13"},"nodeType":"YulFunctionCall","src":"17398:32:13"},"nodeType":"YulExpressionStatement","src":"17398:32:13"}]},"evmVersion":"paris","externalReferences":[{"declaration":3581,"isOffset":false,"isSlot":false,"src":"17148:4:13","valueSize":1},{"declaration":3581,"isOffset":false,"isSlot":false,"src":"17317:4:13","valueSize":1},{"declaration":3581,"isOffset":false,"isSlot":false,"src":"17424:4:13","valueSize":1},{"declaration":3567,"isOffset":false,"isSlot":false,"src":"16977:6:13","valueSize":1},{"declaration":3567,"isOffset":false,"isSlot":false,"src":"17130:6:13","valueSize":1},{"declaration":3567,"isOffset":false,"isSlot":false,"src":"17309:6:13","valueSize":1},{"declaration":3565,"isOffset":false,"isSlot":false,"src":"17080:7:13","valueSize":1}],"flags":["memory-safe"],"id":3599,"nodeType":"InlineAssembly","src":"16919:521:13"}]},"documentation":{"id":3556,"nodeType":"StructuredDocumentation","src":"16427:88:13","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":3601,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16529:9:13","nodeType":"FunctionDefinition","parameters":{"id":3563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3558,"mutability":"mutable","name":"b","nameLocation":"16561:1:13","nodeType":"VariableDeclaration","scope":3601,"src":"16548:14:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3557,"name":"bytes","nodeType":"ElementaryTypeName","src":"16548:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3560,"mutability":"mutable","name":"e","nameLocation":"16585:1:13","nodeType":"VariableDeclaration","scope":3601,"src":"16572:14:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3559,"name":"bytes","nodeType":"ElementaryTypeName","src":"16572:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3562,"mutability":"mutable","name":"m","nameLocation":"16609:1:13","nodeType":"VariableDeclaration","scope":3601,"src":"16596:14:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3561,"name":"bytes","nodeType":"ElementaryTypeName","src":"16596:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16538:78:13"},"returnParameters":{"id":3568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3565,"mutability":"mutable","name":"success","nameLocation":"16645:7:13","nodeType":"VariableDeclaration","scope":3601,"src":"16640:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3564,"name":"bool","nodeType":"ElementaryTypeName","src":"16640:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3567,"mutability":"mutable","name":"result","nameLocation":"16667:6:13","nodeType":"VariableDeclaration","scope":3601,"src":"16654:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3566,"name":"bytes","nodeType":"ElementaryTypeName","src":"16654:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16639:35:13"},"scope":4474,"src":"16520:926:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3633,"nodeType":"Block","src":"17601:176:13","statements":[{"body":{"id":3629,"nodeType":"Block","src":"17658:92:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3620,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3604,"src":"17676:9:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3622,"indexExpression":{"id":3621,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3610,"src":"17686:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17676:12:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17692:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17676:17:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3628,"nodeType":"IfStatement","src":"17672:68:13","trueBody":{"id":3627,"nodeType":"Block","src":"17695:45:13","statements":[{"expression":{"hexValue":"66616c7365","id":3625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17720:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":3608,"id":3626,"nodeType":"Return","src":"17713:12:13"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3613,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3610,"src":"17631:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3614,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3604,"src":"17635:9:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17645:6:13","memberName":"length","nodeType":"MemberAccess","src":"17635:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17631:20:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3630,"initializationExpression":{"assignments":[3610],"declarations":[{"constant":false,"id":3610,"mutability":"mutable","name":"i","nameLocation":"17624:1:13","nodeType":"VariableDeclaration","scope":3630,"src":"17616:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3609,"name":"uint256","nodeType":"ElementaryTypeName","src":"17616:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3612,"initialValue":{"hexValue":"30","id":3611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17628:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17616:13:13"},"loopExpression":{"expression":{"id":3618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17653:3:13","subExpression":{"id":3617,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3610,"src":"17655:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3619,"nodeType":"ExpressionStatement","src":"17653:3:13"},"nodeType":"ForStatement","src":"17611:139:13"},{"expression":{"hexValue":"74727565","id":3631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17766:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3608,"id":3632,"nodeType":"Return","src":"17759:11:13"}]},"documentation":{"id":3602,"nodeType":"StructuredDocumentation","src":"17452:72:13","text":" @dev Returns whether the provided byte array is zero."},"id":3634,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"17538:10:13","nodeType":"FunctionDefinition","parameters":{"id":3605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3604,"mutability":"mutable","name":"byteArray","nameLocation":"17562:9:13","nodeType":"VariableDeclaration","scope":3634,"src":"17549:22:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3603,"name":"bytes","nodeType":"ElementaryTypeName","src":"17549:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"17548:24:13"},"returnParameters":{"id":3608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3607,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3634,"src":"17595:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3606,"name":"bool","nodeType":"ElementaryTypeName","src":"17595:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17594:6:13"},"scope":4474,"src":"17529:248:13","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3852,"nodeType":"Block","src":"18137:5124:13","statements":[{"id":3851,"nodeType":"UncheckedBlock","src":"18147:5108:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3642,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3637,"src":"18241:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":3643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18246:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18241:6:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3648,"nodeType":"IfStatement","src":"18237:53:13","trueBody":{"id":3647,"nodeType":"Block","src":"18249:41:13","statements":[{"expression":{"id":3645,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3637,"src":"18274:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3641,"id":3646,"nodeType":"Return","src":"18267:8:13"}]}},{"assignments":[3650],"declarations":[{"constant":false,"id":3650,"mutability":"mutable","name":"aa","nameLocation":"19225:2:13","nodeType":"VariableDeclaration","scope":3851,"src":"19217:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3649,"name":"uint256","nodeType":"ElementaryTypeName","src":"19217:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3652,"initialValue":{"id":3651,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3637,"src":"19230:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19217:14:13"},{"assignments":[3654],"declarations":[{"constant":false,"id":3654,"mutability":"mutable","name":"xn","nameLocation":"19253:2:13","nodeType":"VariableDeclaration","scope":3851,"src":"19245:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3653,"name":"uint256","nodeType":"ElementaryTypeName","src":"19245:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3656,"initialValue":{"hexValue":"31","id":3655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19258:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"19245:14:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3657,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3650,"src":"19278:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":3660,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19285:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":3659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19290:3:13","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19285:8:13","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":3661,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19284:10:13","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"19278:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3672,"nodeType":"IfStatement","src":"19274:92:13","trueBody":{"id":3671,"nodeType":"Block","src":"19296:70:13","statements":[{"expression":{"id":3665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3663,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3650,"src":"19314:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19321:3:13","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19314:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3666,"nodeType":"ExpressionStatement","src":"19314:10:13"},{"expression":{"id":3669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3667,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"19342:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":3668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19349:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19342:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3670,"nodeType":"ExpressionStatement","src":"19342:9:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3673,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3650,"src":"19383:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":3676,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19390:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":3675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19395:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19390:7:13","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":3677,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19389:9:13","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"19383:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3688,"nodeType":"IfStatement","src":"19379:90:13","trueBody":{"id":3687,"nodeType":"Block","src":"19400:69:13","statements":[{"expression":{"id":3681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3679,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3650,"src":"19418:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19425:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19418:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3682,"nodeType":"ExpressionStatement","src":"19418:9:13"},{"expression":{"id":3685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3683,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"19445:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":3684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19452:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19445:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3686,"nodeType":"ExpressionStatement","src":"19445:9:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3689,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3650,"src":"19486:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":3692,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19493:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":3691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19498:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19493:7:13","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":3693,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19492:9:13","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"19486:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3704,"nodeType":"IfStatement","src":"19482:90:13","trueBody":{"id":3703,"nodeType":"Block","src":"19503:69:13","statements":[{"expression":{"id":3697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3695,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3650,"src":"19521:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19528:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19521:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3698,"nodeType":"ExpressionStatement","src":"19521:9:13"},{"expression":{"id":3701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3699,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"19548:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":3700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19555:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19548:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3702,"nodeType":"ExpressionStatement","src":"19548:9:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3705,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3650,"src":"19589:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":3708,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19596:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":3707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19601:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19596:7:13","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":3709,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19595:9:13","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"19589:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3720,"nodeType":"IfStatement","src":"19585:89:13","trueBody":{"id":3719,"nodeType":"Block","src":"19606:68:13","statements":[{"expression":{"id":3713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3711,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3650,"src":"19624:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19631:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19624:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3714,"nodeType":"ExpressionStatement","src":"19624:9:13"},{"expression":{"id":3717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3715,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"19651:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":3716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19658:1:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19651:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3718,"nodeType":"ExpressionStatement","src":"19651:8:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3721,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3650,"src":"19691:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":3724,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19698:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":3723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19703:1:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19698:6:13","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":3725,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19697:8:13","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"19691:14:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3736,"nodeType":"IfStatement","src":"19687:87:13","trueBody":{"id":3735,"nodeType":"Block","src":"19707:67:13","statements":[{"expression":{"id":3729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3727,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3650,"src":"19725:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":3728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19732:1:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19725:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3730,"nodeType":"ExpressionStatement","src":"19725:8:13"},{"expression":{"id":3733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3731,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"19751:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":3732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19758:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19751:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3734,"nodeType":"ExpressionStatement","src":"19751:8:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3737,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3650,"src":"19791:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":3740,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19798:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":3739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19803:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19798:6:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":3741,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19797:8:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"19791:14:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3752,"nodeType":"IfStatement","src":"19787:87:13","trueBody":{"id":3751,"nodeType":"Block","src":"19807:67:13","statements":[{"expression":{"id":3745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3743,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3650,"src":"19825:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19832:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19825:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3746,"nodeType":"ExpressionStatement","src":"19825:8:13"},{"expression":{"id":3749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3747,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"19851:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":3748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19858:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19851:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3750,"nodeType":"ExpressionStatement","src":"19851:8:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3753,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3650,"src":"19891:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":3756,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19898:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":3755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19903:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19898:6:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":3757,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19897:8:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"19891:14:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3764,"nodeType":"IfStatement","src":"19887:61:13","trueBody":{"id":3763,"nodeType":"Block","src":"19907:41:13","statements":[{"expression":{"id":3761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3759,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"19925:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":3760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19932:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"19925:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3762,"nodeType":"ExpressionStatement","src":"19925:8:13"}]}},{"expression":{"id":3772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3765,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"20368:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20374:1:13","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3767,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"20378:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20374:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3769,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20373:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20385:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20373:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20368:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3773,"nodeType":"ExpressionStatement","src":"20368:18:13"},{"expression":{"id":3783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3774,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"22273:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3775,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"22279:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3776,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3637,"src":"22284:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3777,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"22288:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22284:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22279:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3780,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22278:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22295:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22278:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22273:23:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3784,"nodeType":"ExpressionStatement","src":"22273:23:13"},{"expression":{"id":3794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3785,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"22382:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3786,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"22388:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3787,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3637,"src":"22393:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3788,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"22397:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22393:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22388:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3791,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22387:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22404:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22387:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22382:23:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3795,"nodeType":"ExpressionStatement","src":"22382:23:13"},{"expression":{"id":3805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3796,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"22493:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3797,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"22499:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3798,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3637,"src":"22504:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3799,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"22508:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22504:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22499:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3802,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22498:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22515:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22498:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22493:23:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3806,"nodeType":"ExpressionStatement","src":"22493:23:13"},{"expression":{"id":3816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3807,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"22602:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3808,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"22608:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3809,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3637,"src":"22613:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3810,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"22617:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22613:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22608:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3813,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22607:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22624:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22607:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22602:23:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3817,"nodeType":"ExpressionStatement","src":"22602:23:13"},{"expression":{"id":3827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3818,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"22712:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3819,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"22718:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3820,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3637,"src":"22723:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3821,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"22727:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22723:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22718:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3824,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22717:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22734:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22717:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22712:23:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3828,"nodeType":"ExpressionStatement","src":"22712:23:13"},{"expression":{"id":3838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3829,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"22822:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3830,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"22828:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3831,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3637,"src":"22833:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3832,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"22837:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22833:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22828:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3835,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22827:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22844:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22827:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22822:23:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3839,"nodeType":"ExpressionStatement","src":"22822:23:13"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3840,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"23211:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3843,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"23232:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3844,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3637,"src":"23237:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3845,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"23241:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23237:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23232:11:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3841,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"23216:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6239_$","typeString":"type(library SafeCast)"}},"id":3842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23225:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6238,"src":"23216:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23216:28:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23211:33:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3641,"id":3850,"nodeType":"Return","src":"23204:40:13"}]}]},"documentation":{"id":3635,"nodeType":"StructuredDocumentation","src":"17783:292:13","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":3853,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"18089:4:13","nodeType":"FunctionDefinition","parameters":{"id":3638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3637,"mutability":"mutable","name":"a","nameLocation":"18102:1:13","nodeType":"VariableDeclaration","scope":3853,"src":"18094:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3636,"name":"uint256","nodeType":"ElementaryTypeName","src":"18094:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18093:11:13"},"returnParameters":{"id":3641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3640,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3853,"src":"18128:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3639,"name":"uint256","nodeType":"ElementaryTypeName","src":"18128:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18127:9:13"},"scope":4474,"src":"18080:5181:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3886,"nodeType":"Block","src":"23434:171:13","statements":[{"id":3885,"nodeType":"UncheckedBlock","src":"23444:155:13","statements":[{"assignments":[3865],"declarations":[{"constant":false,"id":3865,"mutability":"mutable","name":"result","nameLocation":"23476:6:13","nodeType":"VariableDeclaration","scope":3885,"src":"23468:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3864,"name":"uint256","nodeType":"ElementaryTypeName","src":"23468:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3869,"initialValue":{"arguments":[{"id":3867,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3856,"src":"23490:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3866,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[3853,3887],"referencedDeclaration":3853,"src":"23485:4:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23485:7:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"23468:24:13"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3870,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3865,"src":"23513:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3874,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3859,"src":"23555:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2880","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2880","typeString":"enum Math.Rounding"}],"id":3873,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4473,"src":"23538:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2880_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23538:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3876,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3865,"src":"23568:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3877,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3865,"src":"23577:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3879,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3856,"src":"23586:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"23538:49:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3871,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"23522:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6239_$","typeString":"type(library SafeCast)"}},"id":3872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23531:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6238,"src":"23522:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23522:66:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23513:75:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3863,"id":3884,"nodeType":"Return","src":"23506:82:13"}]}]},"documentation":{"id":3854,"nodeType":"StructuredDocumentation","src":"23267:86:13","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":3887,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"23367:4:13","nodeType":"FunctionDefinition","parameters":{"id":3860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3856,"mutability":"mutable","name":"a","nameLocation":"23380:1:13","nodeType":"VariableDeclaration","scope":3887,"src":"23372:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3855,"name":"uint256","nodeType":"ElementaryTypeName","src":"23372:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3859,"mutability":"mutable","name":"rounding","nameLocation":"23392:8:13","nodeType":"VariableDeclaration","scope":3887,"src":"23383:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2880","typeString":"enum Math.Rounding"},"typeName":{"id":3858,"nodeType":"UserDefinedTypeName","pathNode":{"id":3857,"name":"Rounding","nameLocations":["23383:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":2880,"src":"23383:8:13"},"referencedDeclaration":2880,"src":"23383:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2880","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"23371:30:13"},"returnParameters":{"id":3863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3862,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3887,"src":"23425:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3861,"name":"uint256","nodeType":"ElementaryTypeName","src":"23425:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23424:9:13"},"scope":4474,"src":"23358:247:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4082,"nodeType":"Block","src":"23796:981:13","statements":[{"assignments":[3896],"declarations":[{"constant":false,"id":3896,"mutability":"mutable","name":"result","nameLocation":"23814:6:13","nodeType":"VariableDeclaration","scope":4082,"src":"23806:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3895,"name":"uint256","nodeType":"ElementaryTypeName","src":"23806:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3898,"initialValue":{"hexValue":"30","id":3897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23823:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23806:18:13"},{"assignments":[3900],"declarations":[{"constant":false,"id":3900,"mutability":"mutable","name":"exp","nameLocation":"23842:3:13","nodeType":"VariableDeclaration","scope":4082,"src":"23834:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3899,"name":"uint256","nodeType":"ElementaryTypeName","src":"23834:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3901,"nodeType":"VariableDeclarationStatement","src":"23834:11:13"},{"id":4079,"nodeType":"UncheckedBlock","src":"23855:893:13","statements":[{"expression":{"id":3916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3902,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3900,"src":"23879:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"313238","id":3903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23885:3:13","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3906,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3890,"src":"23907:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":3912,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":3909,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23916:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":3908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23921:3:13","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"23916:8:13","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":3910,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"23915:10:13","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23928:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"23915:14:13","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"23907:22:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3904,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"23891:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6239_$","typeString":"type(library SafeCast)"}},"id":3905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23900:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6238,"src":"23891:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23891:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23885:45:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23879:51:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3917,"nodeType":"ExpressionStatement","src":"23879:51:13"},{"expression":{"id":3920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3918,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3890,"src":"23944:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":3919,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3900,"src":"23954:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23944:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3921,"nodeType":"ExpressionStatement","src":"23944:13:13"},{"expression":{"id":3924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3922,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3896,"src":"23971:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3923,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3900,"src":"23981:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23971:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3925,"nodeType":"ExpressionStatement","src":"23971:13:13"},{"expression":{"id":3940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3926,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3900,"src":"23999:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3634","id":3927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24005:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3930,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3890,"src":"24026:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":3936,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":3933,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24035:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":3932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24040:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"24035:7:13","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":3934,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24034:9:13","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24046:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24034:13:13","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"24026:21:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3928,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"24010:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6239_$","typeString":"type(library SafeCast)"}},"id":3929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24019:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6238,"src":"24010:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24010:38:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24005:43:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23999:49:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3941,"nodeType":"ExpressionStatement","src":"23999:49:13"},{"expression":{"id":3944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3942,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3890,"src":"24062:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":3943,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3900,"src":"24072:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24062:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3945,"nodeType":"ExpressionStatement","src":"24062:13:13"},{"expression":{"id":3948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3946,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3896,"src":"24089:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3947,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3900,"src":"24099:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24089:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3949,"nodeType":"ExpressionStatement","src":"24089:13:13"},{"expression":{"id":3964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3950,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3900,"src":"24117:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":3951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24123:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3954,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3890,"src":"24144:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":3960,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":3957,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24153:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":3956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24158:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"24153:7:13","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":3958,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24152:9:13","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24164:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24152:13:13","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"24144:21:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3952,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"24128:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6239_$","typeString":"type(library SafeCast)"}},"id":3953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24137:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6238,"src":"24128:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24128:38:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24123:43:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24117:49:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3965,"nodeType":"ExpressionStatement","src":"24117:49:13"},{"expression":{"id":3968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3966,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3890,"src":"24180:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":3967,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3900,"src":"24190:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24180:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3969,"nodeType":"ExpressionStatement","src":"24180:13:13"},{"expression":{"id":3972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3970,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3896,"src":"24207:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3971,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3900,"src":"24217:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24207:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3973,"nodeType":"ExpressionStatement","src":"24207:13:13"},{"expression":{"id":3988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3974,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3900,"src":"24235:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3136","id":3975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24241:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3978,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3890,"src":"24262:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":3984,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":3981,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24271:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":3980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24276:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"24271:7:13","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":3982,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24270:9:13","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24282:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24270:13:13","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"24262:21:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3976,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"24246:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6239_$","typeString":"type(library SafeCast)"}},"id":3977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24255:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6238,"src":"24246:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24246:38:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24241:43:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24235:49:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3989,"nodeType":"ExpressionStatement","src":"24235:49:13"},{"expression":{"id":3992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3990,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3890,"src":"24298:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":3991,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3900,"src":"24308:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24298:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3993,"nodeType":"ExpressionStatement","src":"24298:13:13"},{"expression":{"id":3996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3994,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3896,"src":"24325:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3995,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3900,"src":"24335:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24325:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3997,"nodeType":"ExpressionStatement","src":"24325:13:13"},{"expression":{"id":4012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3998,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3900,"src":"24353:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"38","id":3999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24359:1:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4002,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3890,"src":"24379:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":4008,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":4005,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24388:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":4004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24393:1:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"24388:6:13","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":4006,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24387:8:13","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24398:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24387:12:13","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"24379:20:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4000,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"24363:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6239_$","typeString":"type(library SafeCast)"}},"id":4001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24372:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6238,"src":"24363:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24363:37:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24359:41:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24353:47:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4013,"nodeType":"ExpressionStatement","src":"24353:47:13"},{"expression":{"id":4016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4014,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3890,"src":"24414:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4015,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3900,"src":"24424:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24414:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4017,"nodeType":"ExpressionStatement","src":"24414:13:13"},{"expression":{"id":4020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4018,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3896,"src":"24441:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4019,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3900,"src":"24451:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24441:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4021,"nodeType":"ExpressionStatement","src":"24441:13:13"},{"expression":{"id":4036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4022,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3900,"src":"24469:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"34","id":4023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24475:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4026,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3890,"src":"24495:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"id":4032,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":4029,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24504:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24509:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"24504:6:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":4030,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24503:8:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24514:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24503:12:13","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"}},"src":"24495:20:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4024,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"24479:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6239_$","typeString":"type(library SafeCast)"}},"id":4025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24488:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6238,"src":"24479:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24479:37:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24475:41:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24469:47:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4037,"nodeType":"ExpressionStatement","src":"24469:47:13"},{"expression":{"id":4040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4038,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3890,"src":"24530:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4039,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3900,"src":"24540:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24530:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4041,"nodeType":"ExpressionStatement","src":"24530:13:13"},{"expression":{"id":4044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4042,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3896,"src":"24557:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4043,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3900,"src":"24567:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24557:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4045,"nodeType":"ExpressionStatement","src":"24557:13:13"},{"expression":{"id":4060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4046,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3900,"src":"24585:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24591:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4050,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3890,"src":"24611:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"id":4056,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":4053,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24620:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":4052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24625:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"24620:6:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":4054,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24619:8:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24630:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24619:12:13","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"}},"src":"24611:20:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4048,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"24595:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6239_$","typeString":"type(library SafeCast)"}},"id":4049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24604:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6238,"src":"24595:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24595:37:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24591:41:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24585:47:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4061,"nodeType":"ExpressionStatement","src":"24585:47:13"},{"expression":{"id":4064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4062,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3890,"src":"24646:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4063,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3900,"src":"24656:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24646:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4065,"nodeType":"ExpressionStatement","src":"24646:13:13"},{"expression":{"id":4068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4066,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3896,"src":"24673:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4067,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3900,"src":"24683:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24673:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4069,"nodeType":"ExpressionStatement","src":"24673:13:13"},{"expression":{"id":4077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4070,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3896,"src":"24701:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4073,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3890,"src":"24727:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":4074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24735:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24727:9:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4071,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"24711:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6239_$","typeString":"type(library SafeCast)"}},"id":4072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24720:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6238,"src":"24711:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24711:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24701:36:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4078,"nodeType":"ExpressionStatement","src":"24701:36:13"}]},{"expression":{"id":4080,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3896,"src":"24764:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3894,"id":4081,"nodeType":"Return","src":"24757:13:13"}]},"documentation":{"id":3888,"nodeType":"StructuredDocumentation","src":"23611:119:13","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4083,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"23744:4:13","nodeType":"FunctionDefinition","parameters":{"id":3891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3890,"mutability":"mutable","name":"value","nameLocation":"23757:5:13","nodeType":"VariableDeclaration","scope":4083,"src":"23749:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3889,"name":"uint256","nodeType":"ElementaryTypeName","src":"23749:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23748:15:13"},"returnParameters":{"id":3894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3893,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4083,"src":"23787:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3892,"name":"uint256","nodeType":"ElementaryTypeName","src":"23787:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23786:9:13"},"scope":4474,"src":"23735:1042:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4116,"nodeType":"Block","src":"25010:175:13","statements":[{"id":4115,"nodeType":"UncheckedBlock","src":"25020:159:13","statements":[{"assignments":[4095],"declarations":[{"constant":false,"id":4095,"mutability":"mutable","name":"result","nameLocation":"25052:6:13","nodeType":"VariableDeclaration","scope":4115,"src":"25044:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4094,"name":"uint256","nodeType":"ElementaryTypeName","src":"25044:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4099,"initialValue":{"arguments":[{"id":4097,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4086,"src":"25066:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4096,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[4083,4117],"referencedDeclaration":4083,"src":"25061:4:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25061:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25044:28:13"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4100,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4095,"src":"25093:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4104,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4089,"src":"25135:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2880","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2880","typeString":"enum Math.Rounding"}],"id":4103,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4473,"src":"25118:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2880_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25118:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25148:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4107,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4095,"src":"25153:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4109,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4086,"src":"25162:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"25118:49:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4101,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"25102:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6239_$","typeString":"type(library SafeCast)"}},"id":4102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25111:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6238,"src":"25102:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25102:66:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25093:75:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4093,"id":4114,"nodeType":"Return","src":"25086:82:13"}]}]},"documentation":{"id":4084,"nodeType":"StructuredDocumentation","src":"24783:142:13","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4117,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"24939:4:13","nodeType":"FunctionDefinition","parameters":{"id":4090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4086,"mutability":"mutable","name":"value","nameLocation":"24952:5:13","nodeType":"VariableDeclaration","scope":4117,"src":"24944:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4085,"name":"uint256","nodeType":"ElementaryTypeName","src":"24944:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4089,"mutability":"mutable","name":"rounding","nameLocation":"24968:8:13","nodeType":"VariableDeclaration","scope":4117,"src":"24959:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2880","typeString":"enum Math.Rounding"},"typeName":{"id":4088,"nodeType":"UserDefinedTypeName","pathNode":{"id":4087,"name":"Rounding","nameLocations":["24959:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":2880,"src":"24959:8:13"},"referencedDeclaration":2880,"src":"24959:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2880","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"24943:34:13"},"returnParameters":{"id":4093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4092,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4117,"src":"25001:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4091,"name":"uint256","nodeType":"ElementaryTypeName","src":"25001:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25000:9:13"},"scope":4474,"src":"24930:255:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4245,"nodeType":"Block","src":"25378:854:13","statements":[{"assignments":[4126],"declarations":[{"constant":false,"id":4126,"mutability":"mutable","name":"result","nameLocation":"25396:6:13","nodeType":"VariableDeclaration","scope":4245,"src":"25388:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4125,"name":"uint256","nodeType":"ElementaryTypeName","src":"25388:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4128,"initialValue":{"hexValue":"30","id":4127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25405:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"25388:18:13"},{"id":4242,"nodeType":"UncheckedBlock","src":"25416:787:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4129,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4120,"src":"25444:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4132,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25453:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25459:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25453:8:13","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25444:17:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4145,"nodeType":"IfStatement","src":"25440:103:13","trueBody":{"id":4144,"nodeType":"Block","src":"25463:80:13","statements":[{"expression":{"id":4138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4134,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4120,"src":"25481:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4137,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25490:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25496:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25490:8:13","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25481:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4139,"nodeType":"ExpressionStatement","src":"25481:17:13"},{"expression":{"id":4142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4140,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4126,"src":"25516:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":4141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25526:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25516:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4143,"nodeType":"ExpressionStatement","src":"25516:12:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4146,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4120,"src":"25560:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4149,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25569:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25575:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25569:8:13","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25560:17:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4162,"nodeType":"IfStatement","src":"25556:103:13","trueBody":{"id":4161,"nodeType":"Block","src":"25579:80:13","statements":[{"expression":{"id":4155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4151,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4120,"src":"25597:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25606:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25612:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25606:8:13","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25597:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4156,"nodeType":"ExpressionStatement","src":"25597:17:13"},{"expression":{"id":4159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4157,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4126,"src":"25632:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":4158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25642:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25632:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4160,"nodeType":"ExpressionStatement","src":"25632:12:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4163,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4120,"src":"25676:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4166,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25685:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25691:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25685:8:13","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25676:17:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4179,"nodeType":"IfStatement","src":"25672:103:13","trueBody":{"id":4178,"nodeType":"Block","src":"25695:80:13","statements":[{"expression":{"id":4172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4168,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4120,"src":"25713:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4171,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25722:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25728:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25722:8:13","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25713:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4173,"nodeType":"ExpressionStatement","src":"25713:17:13"},{"expression":{"id":4176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4174,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4126,"src":"25748:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25758:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25748:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4177,"nodeType":"ExpressionStatement","src":"25748:12:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4180,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4120,"src":"25792:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4183,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25801:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25807:1:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25801:7:13","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25792:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4196,"nodeType":"IfStatement","src":"25788:100:13","trueBody":{"id":4195,"nodeType":"Block","src":"25810:78:13","statements":[{"expression":{"id":4189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4185,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4120,"src":"25828:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4188,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25837:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25843:1:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25837:7:13","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25828:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4190,"nodeType":"ExpressionStatement","src":"25828:16:13"},{"expression":{"id":4193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4191,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4126,"src":"25862:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25872:1:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25862:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4194,"nodeType":"ExpressionStatement","src":"25862:11:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4197,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4120,"src":"25905:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4200,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25914:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25920:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25914:7:13","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25905:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4213,"nodeType":"IfStatement","src":"25901:100:13","trueBody":{"id":4212,"nodeType":"Block","src":"25923:78:13","statements":[{"expression":{"id":4206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4202,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4120,"src":"25941:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4205,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25950:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25956:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25950:7:13","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25941:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4207,"nodeType":"ExpressionStatement","src":"25941:16:13"},{"expression":{"id":4210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4208,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4126,"src":"25975:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25985:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25975:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4211,"nodeType":"ExpressionStatement","src":"25975:11:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4214,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4120,"src":"26018:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4217,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26027:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26033:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26027:7:13","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26018:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4230,"nodeType":"IfStatement","src":"26014:100:13","trueBody":{"id":4229,"nodeType":"Block","src":"26036:78:13","statements":[{"expression":{"id":4223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4219,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4120,"src":"26054:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4222,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26063:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26069:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26063:7:13","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26054:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4224,"nodeType":"ExpressionStatement","src":"26054:16:13"},{"expression":{"id":4227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4225,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4126,"src":"26088:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26098:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26088:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4228,"nodeType":"ExpressionStatement","src":"26088:11:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4231,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4120,"src":"26131:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":4234,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26140:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":4233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26146:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26140:7:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"26131:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4241,"nodeType":"IfStatement","src":"26127:66:13","trueBody":{"id":4240,"nodeType":"Block","src":"26149:44:13","statements":[{"expression":{"id":4238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4236,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4126,"src":"26167:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26177:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26167:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4239,"nodeType":"ExpressionStatement","src":"26167:11:13"}]}}]},{"expression":{"id":4243,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4126,"src":"26219:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4124,"id":4244,"nodeType":"Return","src":"26212:13:13"}]},"documentation":{"id":4118,"nodeType":"StructuredDocumentation","src":"25191:120:13","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4246,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"25325:5:13","nodeType":"FunctionDefinition","parameters":{"id":4121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4120,"mutability":"mutable","name":"value","nameLocation":"25339:5:13","nodeType":"VariableDeclaration","scope":4246,"src":"25331:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4119,"name":"uint256","nodeType":"ElementaryTypeName","src":"25331:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25330:15:13"},"returnParameters":{"id":4124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4123,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4246,"src":"25369:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4122,"name":"uint256","nodeType":"ElementaryTypeName","src":"25369:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25368:9:13"},"scope":4474,"src":"25316:916:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4279,"nodeType":"Block","src":"26467:177:13","statements":[{"id":4278,"nodeType":"UncheckedBlock","src":"26477:161:13","statements":[{"assignments":[4258],"declarations":[{"constant":false,"id":4258,"mutability":"mutable","name":"result","nameLocation":"26509:6:13","nodeType":"VariableDeclaration","scope":4278,"src":"26501:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4257,"name":"uint256","nodeType":"ElementaryTypeName","src":"26501:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4262,"initialValue":{"arguments":[{"id":4260,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4249,"src":"26524:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4259,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[4246,4280],"referencedDeclaration":4246,"src":"26518:5:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26518:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"26501:29:13"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4263,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4258,"src":"26551:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4267,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4252,"src":"26593:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2880","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2880","typeString":"enum Math.Rounding"}],"id":4266,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4473,"src":"26576:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2880_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26576:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26606:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":4270,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4258,"src":"26612:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4272,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4249,"src":"26621:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:20:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26576:50:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4264,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"26560:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6239_$","typeString":"type(library SafeCast)"}},"id":4265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26569:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6238,"src":"26560:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26560:67:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26551:76:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4256,"id":4277,"nodeType":"Return","src":"26544:83:13"}]}]},"documentation":{"id":4247,"nodeType":"StructuredDocumentation","src":"26238:143:13","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4280,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"26395:5:13","nodeType":"FunctionDefinition","parameters":{"id":4253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4249,"mutability":"mutable","name":"value","nameLocation":"26409:5:13","nodeType":"VariableDeclaration","scope":4280,"src":"26401:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4248,"name":"uint256","nodeType":"ElementaryTypeName","src":"26401:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4252,"mutability":"mutable","name":"rounding","nameLocation":"26425:8:13","nodeType":"VariableDeclaration","scope":4280,"src":"26416:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2880","typeString":"enum Math.Rounding"},"typeName":{"id":4251,"nodeType":"UserDefinedTypeName","pathNode":{"id":4250,"name":"Rounding","nameLocations":["26416:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":2880,"src":"26416:8:13"},"referencedDeclaration":2880,"src":"26416:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2880","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"26400:34:13"},"returnParameters":{"id":4256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4255,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4280,"src":"26458:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4254,"name":"uint256","nodeType":"ElementaryTypeName","src":"26458:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26457:9:13"},"scope":4474,"src":"26386:258:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4416,"nodeType":"Block","src":"26964:674:13","statements":[{"assignments":[4289],"declarations":[{"constant":false,"id":4289,"mutability":"mutable","name":"result","nameLocation":"26982:6:13","nodeType":"VariableDeclaration","scope":4416,"src":"26974:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4288,"name":"uint256","nodeType":"ElementaryTypeName","src":"26974:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4291,"initialValue":{"hexValue":"30","id":4290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26991:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"26974:18:13"},{"assignments":[4293],"declarations":[{"constant":false,"id":4293,"mutability":"mutable","name":"isGt","nameLocation":"27010:4:13","nodeType":"VariableDeclaration","scope":4416,"src":"27002:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4292,"name":"uint256","nodeType":"ElementaryTypeName","src":"27002:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4294,"nodeType":"VariableDeclarationStatement","src":"27002:12:13"},{"id":4413,"nodeType":"UncheckedBlock","src":"27024:585:13","statements":[{"expression":{"id":4307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4295,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4293,"src":"27048:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4298,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4283,"src":"27071:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":4304,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":4301,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27080:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":4300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27085:3:13","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27080:8:13","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":4302,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27079:10:13","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27092:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27079:14:13","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"27071:22:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4296,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"27055:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6239_$","typeString":"type(library SafeCast)"}},"id":4297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27064:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6238,"src":"27055:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27055:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27048:46:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4308,"nodeType":"ExpressionStatement","src":"27048:46:13"},{"expression":{"id":4313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4309,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4283,"src":"27108:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4310,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4293,"src":"27118:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"313238","id":4311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27125:3:13","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27118:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27108:20:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4314,"nodeType":"ExpressionStatement","src":"27108:20:13"},{"expression":{"id":4319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4315,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4289,"src":"27142:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4316,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4293,"src":"27152:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":4317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27159:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27152:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27142:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4320,"nodeType":"ExpressionStatement","src":"27142:19:13"},{"expression":{"id":4333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4321,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4293,"src":"27176:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4324,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4283,"src":"27199:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":4330,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":4327,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27208:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":4326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27213:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27208:7:13","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":4328,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27207:9:13","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27219:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27207:13:13","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"27199:21:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4322,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"27183:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6239_$","typeString":"type(library SafeCast)"}},"id":4323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27192:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6238,"src":"27183:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27183:38:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27176:45:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4334,"nodeType":"ExpressionStatement","src":"27176:45:13"},{"expression":{"id":4339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4335,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4283,"src":"27235:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4336,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4293,"src":"27245:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3634","id":4337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27252:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27245:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27235:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4340,"nodeType":"ExpressionStatement","src":"27235:19:13"},{"expression":{"id":4345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4341,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4289,"src":"27268:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4342,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4293,"src":"27278:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":4343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27285:1:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27278:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27268:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4346,"nodeType":"ExpressionStatement","src":"27268:18:13"},{"expression":{"id":4359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4347,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4293,"src":"27301:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4350,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4283,"src":"27324:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":4356,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":4353,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27333:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":4352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27338:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27333:7:13","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":4354,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27332:9:13","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27344:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27332:13:13","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"27324:21:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4348,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"27308:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6239_$","typeString":"type(library SafeCast)"}},"id":4349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27317:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6238,"src":"27308:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27308:38:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27301:45:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4360,"nodeType":"ExpressionStatement","src":"27301:45:13"},{"expression":{"id":4365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4361,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4283,"src":"27360:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4362,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4293,"src":"27370:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3332","id":4363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27377:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27370:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27360:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4366,"nodeType":"ExpressionStatement","src":"27360:19:13"},{"expression":{"id":4371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4367,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4289,"src":"27393:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4368,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4293,"src":"27403:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"34","id":4369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27410:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"27403:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27393:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4372,"nodeType":"ExpressionStatement","src":"27393:18:13"},{"expression":{"id":4385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4373,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4293,"src":"27426:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4376,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4283,"src":"27449:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":4382,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":4379,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27458:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":4378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27463:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27458:7:13","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":4380,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27457:9:13","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27469:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27457:13:13","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"27449:21:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4374,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"27433:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6239_$","typeString":"type(library SafeCast)"}},"id":4375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27442:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6238,"src":"27433:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27433:38:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27426:45:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4386,"nodeType":"ExpressionStatement","src":"27426:45:13"},{"expression":{"id":4391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4387,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4283,"src":"27485:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4388,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4293,"src":"27495:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":4389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27502:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27495:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27485:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4392,"nodeType":"ExpressionStatement","src":"27485:19:13"},{"expression":{"id":4397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4393,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4289,"src":"27518:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4394,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4293,"src":"27528:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":4395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27535:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"27528:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27518:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4398,"nodeType":"ExpressionStatement","src":"27518:18:13"},{"expression":{"id":4411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4399,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4289,"src":"27551:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4402,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4283,"src":"27577:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":4408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":4405,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27586:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":4404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27591:1:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27586:6:13","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":4406,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27585:8:13","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27596:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27585:12:13","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"27577:20:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4400,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"27561:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6239_$","typeString":"type(library SafeCast)"}},"id":4401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27570:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6238,"src":"27561:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27561:37:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27551:47:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4412,"nodeType":"ExpressionStatement","src":"27551:47:13"}]},{"expression":{"id":4414,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4289,"src":"27625:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4287,"id":4415,"nodeType":"Return","src":"27618:13:13"}]},"documentation":{"id":4281,"nodeType":"StructuredDocumentation","src":"26650:246:13","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":4417,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"26910:6:13","nodeType":"FunctionDefinition","parameters":{"id":4284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4283,"mutability":"mutable","name":"value","nameLocation":"26925:5:13","nodeType":"VariableDeclaration","scope":4417,"src":"26917:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4282,"name":"uint256","nodeType":"ElementaryTypeName","src":"26917:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26916:15:13"},"returnParameters":{"id":4287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4286,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4417,"src":"26955:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4285,"name":"uint256","nodeType":"ElementaryTypeName","src":"26955:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26954:9:13"},"scope":4474,"src":"26901:737:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4453,"nodeType":"Block","src":"27875:184:13","statements":[{"id":4452,"nodeType":"UncheckedBlock","src":"27885:168:13","statements":[{"assignments":[4429],"declarations":[{"constant":false,"id":4429,"mutability":"mutable","name":"result","nameLocation":"27917:6:13","nodeType":"VariableDeclaration","scope":4452,"src":"27909:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4428,"name":"uint256","nodeType":"ElementaryTypeName","src":"27909:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4433,"initialValue":{"arguments":[{"id":4431,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4420,"src":"27933:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4430,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[4417,4454],"referencedDeclaration":4417,"src":"27926:6:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27926:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"27909:30:13"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4434,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4429,"src":"27960:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4438,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4423,"src":"28002:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2880","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2880","typeString":"enum Math.Rounding"}],"id":4437,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4473,"src":"27985:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2880_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27985:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28015:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4441,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4429,"src":"28021:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":4442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28031:1:13","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"28021:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4444,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"28020:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4446,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4420,"src":"28036:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:26:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"27985:56:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4435,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"27969:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6239_$","typeString":"type(library SafeCast)"}},"id":4436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27978:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6238,"src":"27969:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27969:73:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27960:82:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4427,"id":4451,"nodeType":"Return","src":"27953:89:13"}]}]},"documentation":{"id":4418,"nodeType":"StructuredDocumentation","src":"27644:144:13","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4454,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"27802:6:13","nodeType":"FunctionDefinition","parameters":{"id":4424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4420,"mutability":"mutable","name":"value","nameLocation":"27817:5:13","nodeType":"VariableDeclaration","scope":4454,"src":"27809:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4419,"name":"uint256","nodeType":"ElementaryTypeName","src":"27809:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4423,"mutability":"mutable","name":"rounding","nameLocation":"27833:8:13","nodeType":"VariableDeclaration","scope":4454,"src":"27824:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2880","typeString":"enum Math.Rounding"},"typeName":{"id":4422,"nodeType":"UserDefinedTypeName","pathNode":{"id":4421,"name":"Rounding","nameLocations":["27824:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":2880,"src":"27824:8:13"},"referencedDeclaration":2880,"src":"27824:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2880","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"27808:34:13"},"returnParameters":{"id":4427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4426,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4454,"src":"27866:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4425,"name":"uint256","nodeType":"ElementaryTypeName","src":"27866:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"27865:9:13"},"scope":4474,"src":"27793:266:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4472,"nodeType":"Block","src":"28257:48:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4465,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4458,"src":"28280:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2880","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2880","typeString":"enum Math.Rounding"}],"id":4464,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28274:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4463,"name":"uint8","nodeType":"ElementaryTypeName","src":"28274:5:13","typeDescriptions":{}}},"id":4466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28274:15:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":4467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28292:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"28274:19:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":4469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28297:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"28274:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4462,"id":4471,"nodeType":"Return","src":"28267:31:13"}]},"documentation":{"id":4455,"nodeType":"StructuredDocumentation","src":"28065:113:13","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":4473,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"28192:16:13","nodeType":"FunctionDefinition","parameters":{"id":4459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4458,"mutability":"mutable","name":"rounding","nameLocation":"28218:8:13","nodeType":"VariableDeclaration","scope":4473,"src":"28209:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2880","typeString":"enum Math.Rounding"},"typeName":{"id":4457,"nodeType":"UserDefinedTypeName","pathNode":{"id":4456,"name":"Rounding","nameLocations":["28209:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":2880,"src":"28209:8:13"},"referencedDeclaration":2880,"src":"28209:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2880","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28208:19:13"},"returnParameters":{"id":4462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4461,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4473,"src":"28251:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4460,"name":"bool","nodeType":"ElementaryTypeName","src":"28251:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"28250:6:13"},"scope":4474,"src":"28183:122:13","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4475,"src":"281:28026:13","usedErrors":[],"usedEvents":[]}],"src":"103:28205:13"},"id":13},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[6239]},"id":6240,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4476,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:14"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":4477,"nodeType":"StructuredDocumentation","src":"218:550:14","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":6239,"linearizedBaseContracts":[6239],"name":"SafeCast","nameLocation":"777:8:14","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4478,"nodeType":"StructuredDocumentation","src":"792:68:14","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":4484,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:14","nodeType":"ErrorDefinition","parameters":{"id":4483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4480,"mutability":"mutable","name":"bits","nameLocation":"908:4:14","nodeType":"VariableDeclaration","scope":4484,"src":"902:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4479,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4482,"mutability":"mutable","name":"value","nameLocation":"922:5:14","nodeType":"VariableDeclaration","scope":4484,"src":"914:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4481,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:14"},"src":"865:64:14"},{"documentation":{"id":4485,"nodeType":"StructuredDocumentation","src":"935:75:14","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":4489,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:14","nodeType":"ErrorDefinition","parameters":{"id":4488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4487,"mutability":"mutable","name":"value","nameLocation":"1056:5:14","nodeType":"VariableDeclaration","scope":4489,"src":"1049:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4486,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:14"},"src":"1015:48:14"},{"documentation":{"id":4490,"nodeType":"StructuredDocumentation","src":"1069:67:14","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":4496,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:14","nodeType":"ErrorDefinition","parameters":{"id":4495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4492,"mutability":"mutable","name":"bits","nameLocation":"1183:4:14","nodeType":"VariableDeclaration","scope":4496,"src":"1177:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4491,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4494,"mutability":"mutable","name":"value","nameLocation":"1196:5:14","nodeType":"VariableDeclaration","scope":4496,"src":"1189:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4493,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:14"},"src":"1141:62:14"},{"documentation":{"id":4497,"nodeType":"StructuredDocumentation","src":"1209:75:14","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":4501,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:14","nodeType":"ErrorDefinition","parameters":{"id":4500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4499,"mutability":"mutable","name":"value","nameLocation":"1331:5:14","nodeType":"VariableDeclaration","scope":4501,"src":"1323:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4498,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:14"},"src":"1289:49:14"},{"body":{"id":4528,"nodeType":"Block","src":"1695:152:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4509,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4504,"src":"1709:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4512,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":4511,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":4510,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":4514,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:14","memberName":"max","nodeType":"MemberAccess","src":"1717:17:14","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4522,"nodeType":"IfStatement","src":"1705:105:14","trueBody":{"id":4521,"nodeType":"Block","src":"1736:74:14","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":4517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:14","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":4518,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4504,"src":"1793:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4516,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"1757:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4520,"nodeType":"RevertStatement","src":"1750:49:14"}]}},{"expression":{"arguments":[{"id":4525,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4504,"src":"1834:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4524,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":4523,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:14","typeDescriptions":{}}},"id":4526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":4508,"id":4527,"nodeType":"Return","src":"1819:21:14"}]},"documentation":{"id":4502,"nodeType":"StructuredDocumentation","src":"1344:280:14","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":4529,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:14","nodeType":"FunctionDefinition","parameters":{"id":4505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4504,"mutability":"mutable","name":"value","nameLocation":"1656:5:14","nodeType":"VariableDeclaration","scope":4529,"src":"1648:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4503,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:14"},"returnParameters":{"id":4508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4507,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4529,"src":"1686:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":4506,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:14","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:14"},"scope":6239,"src":"1629:218:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4556,"nodeType":"Block","src":"2204:152:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4537,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4532,"src":"2218:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":4539,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":4538,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":4542,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:14","memberName":"max","nodeType":"MemberAccess","src":"2226:17:14","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4550,"nodeType":"IfStatement","src":"2214:105:14","trueBody":{"id":4549,"nodeType":"Block","src":"2245:74:14","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":4545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:14","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":4546,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4532,"src":"2302:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4544,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"2266:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4548,"nodeType":"RevertStatement","src":"2259:49:14"}]}},{"expression":{"arguments":[{"id":4553,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4532,"src":"2343:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4552,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":4551,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:14","typeDescriptions":{}}},"id":4554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":4536,"id":4555,"nodeType":"Return","src":"2328:21:14"}]},"documentation":{"id":4530,"nodeType":"StructuredDocumentation","src":"1853:280:14","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":4557,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:14","nodeType":"FunctionDefinition","parameters":{"id":4533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4532,"mutability":"mutable","name":"value","nameLocation":"2165:5:14","nodeType":"VariableDeclaration","scope":4557,"src":"2157:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4531,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:14"},"returnParameters":{"id":4536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4535,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4557,"src":"2195:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":4534,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:14","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:14"},"scope":6239,"src":"2138:218:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4584,"nodeType":"Block","src":"2713:152:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4565,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4560,"src":"2727:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4568,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":4567,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":4566,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":4570,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:14","memberName":"max","nodeType":"MemberAccess","src":"2735:17:14","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4578,"nodeType":"IfStatement","src":"2723:105:14","trueBody":{"id":4577,"nodeType":"Block","src":"2754:74:14","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":4573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:14","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":4574,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4560,"src":"2811:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4572,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"2775:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4576,"nodeType":"RevertStatement","src":"2768:49:14"}]}},{"expression":{"arguments":[{"id":4581,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4560,"src":"2852:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4580,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":4579,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:14","typeDescriptions":{}}},"id":4582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":4564,"id":4583,"nodeType":"Return","src":"2837:21:14"}]},"documentation":{"id":4558,"nodeType":"StructuredDocumentation","src":"2362:280:14","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":4585,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:14","nodeType":"FunctionDefinition","parameters":{"id":4561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4560,"mutability":"mutable","name":"value","nameLocation":"2674:5:14","nodeType":"VariableDeclaration","scope":4585,"src":"2666:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4559,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:14"},"returnParameters":{"id":4564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4563,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4585,"src":"2704:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":4562,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:14","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:14"},"scope":6239,"src":"2647:218:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4612,"nodeType":"Block","src":"3222:152:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4593,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4588,"src":"3236:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4596,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":4595,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":4594,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":4598,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:14","memberName":"max","nodeType":"MemberAccess","src":"3244:17:14","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4606,"nodeType":"IfStatement","src":"3232:105:14","trueBody":{"id":4605,"nodeType":"Block","src":"3263:74:14","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":4601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:14","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":4602,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4588,"src":"3320:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4600,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"3284:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4604,"nodeType":"RevertStatement","src":"3277:49:14"}]}},{"expression":{"arguments":[{"id":4609,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4588,"src":"3361:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4608,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":4607,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:14","typeDescriptions":{}}},"id":4610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":4592,"id":4611,"nodeType":"Return","src":"3346:21:14"}]},"documentation":{"id":4586,"nodeType":"StructuredDocumentation","src":"2871:280:14","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":4613,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:14","nodeType":"FunctionDefinition","parameters":{"id":4589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4588,"mutability":"mutable","name":"value","nameLocation":"3183:5:14","nodeType":"VariableDeclaration","scope":4613,"src":"3175:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4587,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:14"},"returnParameters":{"id":4592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4591,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4613,"src":"3213:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":4590,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:14","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:14"},"scope":6239,"src":"3156:218:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4640,"nodeType":"Block","src":"3731:152:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4621,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4616,"src":"3745:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":4623,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":4622,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":4626,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:14","memberName":"max","nodeType":"MemberAccess","src":"3753:17:14","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4634,"nodeType":"IfStatement","src":"3741:105:14","trueBody":{"id":4633,"nodeType":"Block","src":"3772:74:14","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":4629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:14","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":4630,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4616,"src":"3829:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4628,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"3793:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4632,"nodeType":"RevertStatement","src":"3786:49:14"}]}},{"expression":{"arguments":[{"id":4637,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4616,"src":"3870:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4636,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":4635,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:14","typeDescriptions":{}}},"id":4638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":4620,"id":4639,"nodeType":"Return","src":"3855:21:14"}]},"documentation":{"id":4614,"nodeType":"StructuredDocumentation","src":"3380:280:14","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":4641,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:14","nodeType":"FunctionDefinition","parameters":{"id":4617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4616,"mutability":"mutable","name":"value","nameLocation":"3692:5:14","nodeType":"VariableDeclaration","scope":4641,"src":"3684:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4615,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:14"},"returnParameters":{"id":4620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4619,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4641,"src":"3722:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":4618,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:14","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:14"},"scope":6239,"src":"3665:218:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4668,"nodeType":"Block","src":"4240:152:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4649,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4644,"src":"4254:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":4651,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":4650,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":4654,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:14","memberName":"max","nodeType":"MemberAccess","src":"4262:17:14","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4662,"nodeType":"IfStatement","src":"4250:105:14","trueBody":{"id":4661,"nodeType":"Block","src":"4281:74:14","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":4657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:14","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":4658,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4644,"src":"4338:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4656,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"4302:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4660,"nodeType":"RevertStatement","src":"4295:49:14"}]}},{"expression":{"arguments":[{"id":4665,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4644,"src":"4379:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4664,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":4663,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:14","typeDescriptions":{}}},"id":4666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":4648,"id":4667,"nodeType":"Return","src":"4364:21:14"}]},"documentation":{"id":4642,"nodeType":"StructuredDocumentation","src":"3889:280:14","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":4669,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:14","nodeType":"FunctionDefinition","parameters":{"id":4645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4644,"mutability":"mutable","name":"value","nameLocation":"4201:5:14","nodeType":"VariableDeclaration","scope":4669,"src":"4193:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4643,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:14"},"returnParameters":{"id":4648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4647,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4669,"src":"4231:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":4646,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:14","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:14"},"scope":6239,"src":"4174:218:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4696,"nodeType":"Block","src":"4749:152:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4677,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4672,"src":"4763:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":4679,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":4678,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":4682,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:14","memberName":"max","nodeType":"MemberAccess","src":"4771:17:14","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4690,"nodeType":"IfStatement","src":"4759:105:14","trueBody":{"id":4689,"nodeType":"Block","src":"4790:74:14","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":4685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:14","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":4686,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4672,"src":"4847:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4684,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"4811:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4688,"nodeType":"RevertStatement","src":"4804:49:14"}]}},{"expression":{"arguments":[{"id":4693,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4672,"src":"4888:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4692,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":4691,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:14","typeDescriptions":{}}},"id":4694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":4676,"id":4695,"nodeType":"Return","src":"4873:21:14"}]},"documentation":{"id":4670,"nodeType":"StructuredDocumentation","src":"4398:280:14","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":4697,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:14","nodeType":"FunctionDefinition","parameters":{"id":4673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4672,"mutability":"mutable","name":"value","nameLocation":"4710:5:14","nodeType":"VariableDeclaration","scope":4697,"src":"4702:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4671,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:14"},"returnParameters":{"id":4676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4675,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4697,"src":"4740:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":4674,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:14","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:14"},"scope":6239,"src":"4683:218:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4724,"nodeType":"Block","src":"5258:152:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4705,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4700,"src":"5272:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4708,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":4707,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":4706,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":4710,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:14","memberName":"max","nodeType":"MemberAccess","src":"5280:17:14","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4718,"nodeType":"IfStatement","src":"5268:105:14","trueBody":{"id":4717,"nodeType":"Block","src":"5299:74:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":4713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:14","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":4714,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4700,"src":"5356:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4712,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"5320:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4716,"nodeType":"RevertStatement","src":"5313:49:14"}]}},{"expression":{"arguments":[{"id":4721,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4700,"src":"5397:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4720,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":4719,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:14","typeDescriptions":{}}},"id":4722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":4704,"id":4723,"nodeType":"Return","src":"5382:21:14"}]},"documentation":{"id":4698,"nodeType":"StructuredDocumentation","src":"4907:280:14","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":4725,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:14","nodeType":"FunctionDefinition","parameters":{"id":4701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4700,"mutability":"mutable","name":"value","nameLocation":"5219:5:14","nodeType":"VariableDeclaration","scope":4725,"src":"5211:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4699,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:14"},"returnParameters":{"id":4704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4703,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4725,"src":"5249:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":4702,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:14","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:14"},"scope":6239,"src":"5192:218:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4752,"nodeType":"Block","src":"5767:152:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4733,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4728,"src":"5781:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4736,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":4735,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":4734,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":4738,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:14","memberName":"max","nodeType":"MemberAccess","src":"5789:17:14","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4746,"nodeType":"IfStatement","src":"5777:105:14","trueBody":{"id":4745,"nodeType":"Block","src":"5808:74:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":4741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:14","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":4742,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4728,"src":"5865:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4740,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"5829:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4744,"nodeType":"RevertStatement","src":"5822:49:14"}]}},{"expression":{"arguments":[{"id":4749,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4728,"src":"5906:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4748,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":4747,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:14","typeDescriptions":{}}},"id":4750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":4732,"id":4751,"nodeType":"Return","src":"5891:21:14"}]},"documentation":{"id":4726,"nodeType":"StructuredDocumentation","src":"5416:280:14","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":4753,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:14","nodeType":"FunctionDefinition","parameters":{"id":4729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4728,"mutability":"mutable","name":"value","nameLocation":"5728:5:14","nodeType":"VariableDeclaration","scope":4753,"src":"5720:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4727,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:14"},"returnParameters":{"id":4732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4731,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4753,"src":"5758:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":4730,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:14","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:14"},"scope":6239,"src":"5701:218:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4780,"nodeType":"Block","src":"6276:152:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4761,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4756,"src":"6290:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4764,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":4763,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":4762,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":4766,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:14","memberName":"max","nodeType":"MemberAccess","src":"6298:17:14","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4774,"nodeType":"IfStatement","src":"6286:105:14","trueBody":{"id":4773,"nodeType":"Block","src":"6317:74:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":4769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:14","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":4770,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4756,"src":"6374:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4768,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"6338:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4772,"nodeType":"RevertStatement","src":"6331:49:14"}]}},{"expression":{"arguments":[{"id":4777,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4756,"src":"6415:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4776,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":4775,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:14","typeDescriptions":{}}},"id":4778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":4760,"id":4779,"nodeType":"Return","src":"6400:21:14"}]},"documentation":{"id":4754,"nodeType":"StructuredDocumentation","src":"5925:280:14","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":4781,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:14","nodeType":"FunctionDefinition","parameters":{"id":4757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4756,"mutability":"mutable","name":"value","nameLocation":"6237:5:14","nodeType":"VariableDeclaration","scope":4781,"src":"6229:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4755,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:14"},"returnParameters":{"id":4760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4759,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4781,"src":"6267:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":4758,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:14","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:14"},"scope":6239,"src":"6210:218:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4808,"nodeType":"Block","src":"6785:152:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4789,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4784,"src":"6799:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4792,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":4791,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":4790,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":4794,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:14","memberName":"max","nodeType":"MemberAccess","src":"6807:17:14","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4802,"nodeType":"IfStatement","src":"6795:105:14","trueBody":{"id":4801,"nodeType":"Block","src":"6826:74:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":4797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:14","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":4798,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4784,"src":"6883:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4796,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"6847:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4800,"nodeType":"RevertStatement","src":"6840:49:14"}]}},{"expression":{"arguments":[{"id":4805,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4784,"src":"6924:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4804,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":4803,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:14","typeDescriptions":{}}},"id":4806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":4788,"id":4807,"nodeType":"Return","src":"6909:21:14"}]},"documentation":{"id":4782,"nodeType":"StructuredDocumentation","src":"6434:280:14","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":4809,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:14","nodeType":"FunctionDefinition","parameters":{"id":4785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4784,"mutability":"mutable","name":"value","nameLocation":"6746:5:14","nodeType":"VariableDeclaration","scope":4809,"src":"6738:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4783,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:14"},"returnParameters":{"id":4788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4787,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4809,"src":"6776:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":4786,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:14","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:14"},"scope":6239,"src":"6719:218:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4836,"nodeType":"Block","src":"7294:152:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4817,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4812,"src":"7308:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4820,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4819,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":4818,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":4822,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:14","memberName":"max","nodeType":"MemberAccess","src":"7316:17:14","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4830,"nodeType":"IfStatement","src":"7304:105:14","trueBody":{"id":4829,"nodeType":"Block","src":"7335:74:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":4825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:14","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":4826,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4812,"src":"7392:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4824,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"7356:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4828,"nodeType":"RevertStatement","src":"7349:49:14"}]}},{"expression":{"arguments":[{"id":4833,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4812,"src":"7433:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4832,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4831,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:14","typeDescriptions":{}}},"id":4834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":4816,"id":4835,"nodeType":"Return","src":"7418:21:14"}]},"documentation":{"id":4810,"nodeType":"StructuredDocumentation","src":"6943:280:14","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":4837,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:14","nodeType":"FunctionDefinition","parameters":{"id":4813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4812,"mutability":"mutable","name":"value","nameLocation":"7255:5:14","nodeType":"VariableDeclaration","scope":4837,"src":"7247:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4811,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:14"},"returnParameters":{"id":4816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4815,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4837,"src":"7285:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":4814,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:14","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:14"},"scope":6239,"src":"7228:218:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4864,"nodeType":"Block","src":"7803:152:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4845,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4840,"src":"7817:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4848,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":4847,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":4846,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":4850,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:14","memberName":"max","nodeType":"MemberAccess","src":"7825:17:14","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4858,"nodeType":"IfStatement","src":"7813:105:14","trueBody":{"id":4857,"nodeType":"Block","src":"7844:74:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":4853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:14","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":4854,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4840,"src":"7901:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4852,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"7865:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4856,"nodeType":"RevertStatement","src":"7858:49:14"}]}},{"expression":{"arguments":[{"id":4861,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4840,"src":"7942:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4860,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":4859,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:14","typeDescriptions":{}}},"id":4862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":4844,"id":4863,"nodeType":"Return","src":"7927:21:14"}]},"documentation":{"id":4838,"nodeType":"StructuredDocumentation","src":"7452:280:14","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":4865,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:14","nodeType":"FunctionDefinition","parameters":{"id":4841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4840,"mutability":"mutable","name":"value","nameLocation":"7764:5:14","nodeType":"VariableDeclaration","scope":4865,"src":"7756:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4839,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:14"},"returnParameters":{"id":4844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4843,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4865,"src":"7794:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":4842,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:14","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:14"},"scope":6239,"src":"7737:218:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4892,"nodeType":"Block","src":"8312:152:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4873,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4868,"src":"8326:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4876,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":4875,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":4874,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":4878,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:14","memberName":"max","nodeType":"MemberAccess","src":"8334:17:14","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4886,"nodeType":"IfStatement","src":"8322:105:14","trueBody":{"id":4885,"nodeType":"Block","src":"8353:74:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":4881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:14","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":4882,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4868,"src":"8410:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4880,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"8374:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4884,"nodeType":"RevertStatement","src":"8367:49:14"}]}},{"expression":{"arguments":[{"id":4889,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4868,"src":"8451:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4888,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":4887,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:14","typeDescriptions":{}}},"id":4890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":4872,"id":4891,"nodeType":"Return","src":"8436:21:14"}]},"documentation":{"id":4866,"nodeType":"StructuredDocumentation","src":"7961:280:14","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":4893,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:14","nodeType":"FunctionDefinition","parameters":{"id":4869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4868,"mutability":"mutable","name":"value","nameLocation":"8273:5:14","nodeType":"VariableDeclaration","scope":4893,"src":"8265:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4867,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:14"},"returnParameters":{"id":4872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4871,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4893,"src":"8303:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":4870,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:14","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:14"},"scope":6239,"src":"8246:218:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4920,"nodeType":"Block","src":"8821:152:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4901,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4896,"src":"8835:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4904,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":4903,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":4902,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":4906,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:14","memberName":"max","nodeType":"MemberAccess","src":"8843:17:14","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4914,"nodeType":"IfStatement","src":"8831:105:14","trueBody":{"id":4913,"nodeType":"Block","src":"8862:74:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":4909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:14","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":4910,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4896,"src":"8919:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4908,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"8883:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4912,"nodeType":"RevertStatement","src":"8876:49:14"}]}},{"expression":{"arguments":[{"id":4917,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4896,"src":"8960:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4916,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":4915,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:14","typeDescriptions":{}}},"id":4918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":4900,"id":4919,"nodeType":"Return","src":"8945:21:14"}]},"documentation":{"id":4894,"nodeType":"StructuredDocumentation","src":"8470:280:14","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":4921,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:14","nodeType":"FunctionDefinition","parameters":{"id":4897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4896,"mutability":"mutable","name":"value","nameLocation":"8782:5:14","nodeType":"VariableDeclaration","scope":4921,"src":"8774:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4895,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:14"},"returnParameters":{"id":4900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4899,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4921,"src":"8812:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":4898,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:14","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:14"},"scope":6239,"src":"8755:218:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4948,"nodeType":"Block","src":"9330:152:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4929,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4924,"src":"9344:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4932,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":4931,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":4930,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":4934,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:14","memberName":"max","nodeType":"MemberAccess","src":"9352:17:14","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4942,"nodeType":"IfStatement","src":"9340:105:14","trueBody":{"id":4941,"nodeType":"Block","src":"9371:74:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":4937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:14","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":4938,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4924,"src":"9428:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4936,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"9392:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4940,"nodeType":"RevertStatement","src":"9385:49:14"}]}},{"expression":{"arguments":[{"id":4945,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4924,"src":"9469:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4944,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":4943,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:14","typeDescriptions":{}}},"id":4946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":4928,"id":4947,"nodeType":"Return","src":"9454:21:14"}]},"documentation":{"id":4922,"nodeType":"StructuredDocumentation","src":"8979:280:14","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":4949,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:14","nodeType":"FunctionDefinition","parameters":{"id":4925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4924,"mutability":"mutable","name":"value","nameLocation":"9291:5:14","nodeType":"VariableDeclaration","scope":4949,"src":"9283:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4923,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:14"},"returnParameters":{"id":4928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4927,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4949,"src":"9321:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4926,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:14","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:14"},"scope":6239,"src":"9264:218:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4976,"nodeType":"Block","src":"9839:152:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4957,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4952,"src":"9853:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4960,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":4959,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":4958,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":4962,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:14","memberName":"max","nodeType":"MemberAccess","src":"9861:17:14","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4970,"nodeType":"IfStatement","src":"9849:105:14","trueBody":{"id":4969,"nodeType":"Block","src":"9880:74:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":4965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:14","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":4966,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4952,"src":"9937:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4964,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"9901:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4968,"nodeType":"RevertStatement","src":"9894:49:14"}]}},{"expression":{"arguments":[{"id":4973,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4952,"src":"9978:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4972,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":4971,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:14","typeDescriptions":{}}},"id":4974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":4956,"id":4975,"nodeType":"Return","src":"9963:21:14"}]},"documentation":{"id":4950,"nodeType":"StructuredDocumentation","src":"9488:280:14","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":4977,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:14","nodeType":"FunctionDefinition","parameters":{"id":4953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4952,"mutability":"mutable","name":"value","nameLocation":"9800:5:14","nodeType":"VariableDeclaration","scope":4977,"src":"9792:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4951,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:14"},"returnParameters":{"id":4956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4955,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4977,"src":"9830:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":4954,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:14","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:14"},"scope":6239,"src":"9773:218:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5004,"nodeType":"Block","src":"10348:152:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4985,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4980,"src":"10362:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4988,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":4987,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":4986,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":4990,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:14","memberName":"max","nodeType":"MemberAccess","src":"10370:17:14","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4998,"nodeType":"IfStatement","src":"10358:105:14","trueBody":{"id":4997,"nodeType":"Block","src":"10389:74:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":4993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:14","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":4994,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4980,"src":"10446:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4992,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"10410:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4996,"nodeType":"RevertStatement","src":"10403:49:14"}]}},{"expression":{"arguments":[{"id":5001,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4980,"src":"10487:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5000,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":4999,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:14","typeDescriptions":{}}},"id":5002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":4984,"id":5003,"nodeType":"Return","src":"10472:21:14"}]},"documentation":{"id":4978,"nodeType":"StructuredDocumentation","src":"9997:280:14","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":5005,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:14","nodeType":"FunctionDefinition","parameters":{"id":4981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4980,"mutability":"mutable","name":"value","nameLocation":"10309:5:14","nodeType":"VariableDeclaration","scope":5005,"src":"10301:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4979,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:14"},"returnParameters":{"id":4984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4983,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5005,"src":"10339:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":4982,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:14","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:14"},"scope":6239,"src":"10282:218:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5032,"nodeType":"Block","src":"10857:152:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5013,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5008,"src":"10871:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5015,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":5014,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":5018,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:14","memberName":"max","nodeType":"MemberAccess","src":"10879:17:14","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5026,"nodeType":"IfStatement","src":"10867:105:14","trueBody":{"id":5025,"nodeType":"Block","src":"10898:74:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":5021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:14","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":5022,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5008,"src":"10955:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5020,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"10919:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5024,"nodeType":"RevertStatement","src":"10912:49:14"}]}},{"expression":{"arguments":[{"id":5029,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5008,"src":"10996:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5028,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5027,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:14","typeDescriptions":{}}},"id":5030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":5012,"id":5031,"nodeType":"Return","src":"10981:21:14"}]},"documentation":{"id":5006,"nodeType":"StructuredDocumentation","src":"10506:280:14","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":5033,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:14","nodeType":"FunctionDefinition","parameters":{"id":5009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5008,"mutability":"mutable","name":"value","nameLocation":"10818:5:14","nodeType":"VariableDeclaration","scope":5033,"src":"10810:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5007,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:14"},"returnParameters":{"id":5012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5011,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5033,"src":"10848:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":5010,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:14","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:14"},"scope":6239,"src":"10791:218:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5060,"nodeType":"Block","src":"11360:149:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5041,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"11374:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5043,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":5042,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":5046,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:14","memberName":"max","nodeType":"MemberAccess","src":"11382:16:14","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5054,"nodeType":"IfStatement","src":"11370:103:14","trueBody":{"id":5053,"nodeType":"Block","src":"11400:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":5049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:14","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":5050,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"11456:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5048,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"11421:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5052,"nodeType":"RevertStatement","src":"11414:48:14"}]}},{"expression":{"arguments":[{"id":5057,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"11496:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5056,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5055,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:14","typeDescriptions":{}}},"id":5058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":5040,"id":5059,"nodeType":"Return","src":"11482:20:14"}]},"documentation":{"id":5034,"nodeType":"StructuredDocumentation","src":"11015:276:14","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":5061,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:14","nodeType":"FunctionDefinition","parameters":{"id":5037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5036,"mutability":"mutable","name":"value","nameLocation":"11322:5:14","nodeType":"VariableDeclaration","scope":5061,"src":"11314:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5035,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:14"},"returnParameters":{"id":5040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5039,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5061,"src":"11352:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":5038,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:14","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:14"},"scope":6239,"src":"11296:213:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5088,"nodeType":"Block","src":"11860:149:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5069,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5064,"src":"11874:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5072,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5071,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":5070,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":5074,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:14","memberName":"max","nodeType":"MemberAccess","src":"11882:16:14","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5082,"nodeType":"IfStatement","src":"11870:103:14","trueBody":{"id":5081,"nodeType":"Block","src":"11900:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":5077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:14","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":5078,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5064,"src":"11956:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5076,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"11921:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5080,"nodeType":"RevertStatement","src":"11914:48:14"}]}},{"expression":{"arguments":[{"id":5085,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5064,"src":"11996:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5084,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5083,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:14","typeDescriptions":{}}},"id":5086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":5068,"id":5087,"nodeType":"Return","src":"11982:20:14"}]},"documentation":{"id":5062,"nodeType":"StructuredDocumentation","src":"11515:276:14","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":5089,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:14","nodeType":"FunctionDefinition","parameters":{"id":5065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5064,"mutability":"mutable","name":"value","nameLocation":"11822:5:14","nodeType":"VariableDeclaration","scope":5089,"src":"11814:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5063,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:14"},"returnParameters":{"id":5068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5067,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5089,"src":"11852:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":5066,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:14","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:14"},"scope":6239,"src":"11796:213:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5116,"nodeType":"Block","src":"12360:149:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5097,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5092,"src":"12374:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5100,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5099,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":5098,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":5102,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:14","memberName":"max","nodeType":"MemberAccess","src":"12382:16:14","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5110,"nodeType":"IfStatement","src":"12370:103:14","trueBody":{"id":5109,"nodeType":"Block","src":"12400:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":5105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:14","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":5106,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5092,"src":"12456:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5104,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"12421:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5108,"nodeType":"RevertStatement","src":"12414:48:14"}]}},{"expression":{"arguments":[{"id":5113,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5092,"src":"12496:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5112,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5111,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:14","typeDescriptions":{}}},"id":5114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":5096,"id":5115,"nodeType":"Return","src":"12482:20:14"}]},"documentation":{"id":5090,"nodeType":"StructuredDocumentation","src":"12015:276:14","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":5117,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:14","nodeType":"FunctionDefinition","parameters":{"id":5093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5092,"mutability":"mutable","name":"value","nameLocation":"12322:5:14","nodeType":"VariableDeclaration","scope":5117,"src":"12314:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5091,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:14"},"returnParameters":{"id":5096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5095,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5117,"src":"12352:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":5094,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:14","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:14"},"scope":6239,"src":"12296:213:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5144,"nodeType":"Block","src":"12860:149:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5125,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5120,"src":"12874:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5127,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":5126,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":5130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:14","memberName":"max","nodeType":"MemberAccess","src":"12882:16:14","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5138,"nodeType":"IfStatement","src":"12870:103:14","trueBody":{"id":5137,"nodeType":"Block","src":"12900:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":5133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:14","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":5134,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5120,"src":"12956:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5132,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"12921:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5136,"nodeType":"RevertStatement","src":"12914:48:14"}]}},{"expression":{"arguments":[{"id":5141,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5120,"src":"12996:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5140,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5139,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:14","typeDescriptions":{}}},"id":5142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":5124,"id":5143,"nodeType":"Return","src":"12982:20:14"}]},"documentation":{"id":5118,"nodeType":"StructuredDocumentation","src":"12515:276:14","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":5145,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:14","nodeType":"FunctionDefinition","parameters":{"id":5121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5120,"mutability":"mutable","name":"value","nameLocation":"12822:5:14","nodeType":"VariableDeclaration","scope":5145,"src":"12814:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5119,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:14"},"returnParameters":{"id":5124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5123,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5145,"src":"12852:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":5122,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:14","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:14"},"scope":6239,"src":"12796:213:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5172,"nodeType":"Block","src":"13360:149:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5153,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5148,"src":"13374:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5155,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":5154,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":5158,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:14","memberName":"max","nodeType":"MemberAccess","src":"13382:16:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5166,"nodeType":"IfStatement","src":"13370:103:14","trueBody":{"id":5165,"nodeType":"Block","src":"13400:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":5161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":5162,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5148,"src":"13456:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5160,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"13421:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5164,"nodeType":"RevertStatement","src":"13414:48:14"}]}},{"expression":{"arguments":[{"id":5169,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5148,"src":"13496:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5168,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5167,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:14","typeDescriptions":{}}},"id":5170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":5152,"id":5171,"nodeType":"Return","src":"13482:20:14"}]},"documentation":{"id":5146,"nodeType":"StructuredDocumentation","src":"13015:276:14","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":5173,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:14","nodeType":"FunctionDefinition","parameters":{"id":5149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5148,"mutability":"mutable","name":"value","nameLocation":"13322:5:14","nodeType":"VariableDeclaration","scope":5173,"src":"13314:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5147,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:14"},"returnParameters":{"id":5152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5151,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5173,"src":"13352:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5150,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:14"},"scope":6239,"src":"13296:213:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5200,"nodeType":"Block","src":"13860:149:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5181,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5176,"src":"13874:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5184,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5183,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":5182,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":5186,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:14","memberName":"max","nodeType":"MemberAccess","src":"13882:16:14","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5194,"nodeType":"IfStatement","src":"13870:103:14","trueBody":{"id":5193,"nodeType":"Block","src":"13900:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":5189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:14","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":5190,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5176,"src":"13956:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5188,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"13921:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5192,"nodeType":"RevertStatement","src":"13914:48:14"}]}},{"expression":{"arguments":[{"id":5197,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5176,"src":"13996:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5196,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5195,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:14","typeDescriptions":{}}},"id":5198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":5180,"id":5199,"nodeType":"Return","src":"13982:20:14"}]},"documentation":{"id":5174,"nodeType":"StructuredDocumentation","src":"13515:276:14","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":5201,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:14","nodeType":"FunctionDefinition","parameters":{"id":5177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5176,"mutability":"mutable","name":"value","nameLocation":"13822:5:14","nodeType":"VariableDeclaration","scope":5201,"src":"13814:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5175,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:14"},"returnParameters":{"id":5180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5179,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5201,"src":"13852:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":5178,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:14","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:14"},"scope":6239,"src":"13796:213:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5228,"nodeType":"Block","src":"14360:149:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5209,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"14374:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5212,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5211,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":5210,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":5214,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:14","memberName":"max","nodeType":"MemberAccess","src":"14382:16:14","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5222,"nodeType":"IfStatement","src":"14370:103:14","trueBody":{"id":5221,"nodeType":"Block","src":"14400:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":5217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:14","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":5218,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"14456:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5216,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"14421:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5220,"nodeType":"RevertStatement","src":"14414:48:14"}]}},{"expression":{"arguments":[{"id":5225,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"14496:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5224,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5223,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:14","typeDescriptions":{}}},"id":5226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":5208,"id":5227,"nodeType":"Return","src":"14482:20:14"}]},"documentation":{"id":5202,"nodeType":"StructuredDocumentation","src":"14015:276:14","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":5229,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:14","nodeType":"FunctionDefinition","parameters":{"id":5205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5204,"mutability":"mutable","name":"value","nameLocation":"14322:5:14","nodeType":"VariableDeclaration","scope":5229,"src":"14314:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5203,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:14"},"returnParameters":{"id":5208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5207,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5229,"src":"14352:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":5206,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:14","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:14"},"scope":6239,"src":"14296:213:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5256,"nodeType":"Block","src":"14860:149:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5237,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5232,"src":"14874:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5240,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5239,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":5238,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":5242,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:14","memberName":"max","nodeType":"MemberAccess","src":"14882:16:14","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5250,"nodeType":"IfStatement","src":"14870:103:14","trueBody":{"id":5249,"nodeType":"Block","src":"14900:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":5245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:14","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":5246,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5232,"src":"14956:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5244,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"14921:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5248,"nodeType":"RevertStatement","src":"14914:48:14"}]}},{"expression":{"arguments":[{"id":5253,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5232,"src":"14996:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5252,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5251,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:14","typeDescriptions":{}}},"id":5254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":5236,"id":5255,"nodeType":"Return","src":"14982:20:14"}]},"documentation":{"id":5230,"nodeType":"StructuredDocumentation","src":"14515:276:14","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":5257,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:14","nodeType":"FunctionDefinition","parameters":{"id":5233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5232,"mutability":"mutable","name":"value","nameLocation":"14822:5:14","nodeType":"VariableDeclaration","scope":5257,"src":"14814:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5231,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:14"},"returnParameters":{"id":5236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5235,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5257,"src":"14852:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":5234,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:14","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:14"},"scope":6239,"src":"14796:213:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5284,"nodeType":"Block","src":"15360:149:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5265,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5260,"src":"15374:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5268,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5267,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":5266,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":5270,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:14","memberName":"max","nodeType":"MemberAccess","src":"15382:16:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5278,"nodeType":"IfStatement","src":"15370:103:14","trueBody":{"id":5277,"nodeType":"Block","src":"15400:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":5273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":5274,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5260,"src":"15456:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5272,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"15421:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5276,"nodeType":"RevertStatement","src":"15414:48:14"}]}},{"expression":{"arguments":[{"id":5281,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5260,"src":"15496:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5280,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5279,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:14","typeDescriptions":{}}},"id":5282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":5264,"id":5283,"nodeType":"Return","src":"15482:20:14"}]},"documentation":{"id":5258,"nodeType":"StructuredDocumentation","src":"15015:276:14","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":5285,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:14","nodeType":"FunctionDefinition","parameters":{"id":5261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5260,"mutability":"mutable","name":"value","nameLocation":"15322:5:14","nodeType":"VariableDeclaration","scope":5285,"src":"15314:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5259,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:14"},"returnParameters":{"id":5264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5263,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5285,"src":"15352:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5262,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:14"},"scope":6239,"src":"15296:213:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5312,"nodeType":"Block","src":"15860:149:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5293,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5288,"src":"15874:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5296,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5295,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":5294,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":5298,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:14","memberName":"max","nodeType":"MemberAccess","src":"15882:16:14","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5306,"nodeType":"IfStatement","src":"15870:103:14","trueBody":{"id":5305,"nodeType":"Block","src":"15900:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":5301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:14","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":5302,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5288,"src":"15956:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5300,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"15921:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5304,"nodeType":"RevertStatement","src":"15914:48:14"}]}},{"expression":{"arguments":[{"id":5309,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5288,"src":"15996:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5308,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5307,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:14","typeDescriptions":{}}},"id":5310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":5292,"id":5311,"nodeType":"Return","src":"15982:20:14"}]},"documentation":{"id":5286,"nodeType":"StructuredDocumentation","src":"15515:276:14","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":5313,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:14","nodeType":"FunctionDefinition","parameters":{"id":5289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5288,"mutability":"mutable","name":"value","nameLocation":"15822:5:14","nodeType":"VariableDeclaration","scope":5313,"src":"15814:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5287,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:14"},"returnParameters":{"id":5292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5291,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5313,"src":"15852:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":5290,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:14","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:14"},"scope":6239,"src":"15796:213:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5340,"nodeType":"Block","src":"16360:149:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5321,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5316,"src":"16374:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5324,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5323,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":5322,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":5326,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:14","memberName":"max","nodeType":"MemberAccess","src":"16382:16:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5334,"nodeType":"IfStatement","src":"16370:103:14","trueBody":{"id":5333,"nodeType":"Block","src":"16400:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":5329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":5330,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5316,"src":"16456:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5328,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"16421:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5332,"nodeType":"RevertStatement","src":"16414:48:14"}]}},{"expression":{"arguments":[{"id":5337,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5316,"src":"16496:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5336,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5335,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:14","typeDescriptions":{}}},"id":5338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":5320,"id":5339,"nodeType":"Return","src":"16482:20:14"}]},"documentation":{"id":5314,"nodeType":"StructuredDocumentation","src":"16015:276:14","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":5341,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:14","nodeType":"FunctionDefinition","parameters":{"id":5317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5316,"mutability":"mutable","name":"value","nameLocation":"16322:5:14","nodeType":"VariableDeclaration","scope":5341,"src":"16314:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5315,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:14"},"returnParameters":{"id":5320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5319,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5341,"src":"16352:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5318,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:14"},"scope":6239,"src":"16296:213:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5368,"nodeType":"Block","src":"16854:146:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5349,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5344,"src":"16868:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5351,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":5350,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":5354,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:14","memberName":"max","nodeType":"MemberAccess","src":"16876:15:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5362,"nodeType":"IfStatement","src":"16864:101:14","trueBody":{"id":5361,"nodeType":"Block","src":"16893:72:14","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":5357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":5358,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5344,"src":"16948:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5356,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"16914:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5360,"nodeType":"RevertStatement","src":"16907:47:14"}]}},{"expression":{"arguments":[{"id":5365,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5344,"src":"16987:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5364,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5363,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:14","typeDescriptions":{}}},"id":5366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":5348,"id":5367,"nodeType":"Return","src":"16974:19:14"}]},"documentation":{"id":5342,"nodeType":"StructuredDocumentation","src":"16515:272:14","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":5369,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:14","nodeType":"FunctionDefinition","parameters":{"id":5345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5344,"mutability":"mutable","name":"value","nameLocation":"16817:5:14","nodeType":"VariableDeclaration","scope":5369,"src":"16809:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5343,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:14"},"returnParameters":{"id":5348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5347,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5369,"src":"16847:5:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5346,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:14"},"scope":6239,"src":"16792:208:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5391,"nodeType":"Block","src":"17236:128:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5377,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5372,"src":"17250:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":5378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5385,"nodeType":"IfStatement","src":"17246:81:14","trueBody":{"id":5384,"nodeType":"Block","src":"17261:66:14","statements":[{"errorCall":{"arguments":[{"id":5381,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5372,"src":"17310:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5380,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"17282:27:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":5382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5383,"nodeType":"RevertStatement","src":"17275:41:14"}]}},{"expression":{"arguments":[{"id":5388,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5372,"src":"17351:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5387,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5386,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:14","typeDescriptions":{}}},"id":5389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5376,"id":5390,"nodeType":"Return","src":"17336:21:14"}]},"documentation":{"id":5370,"nodeType":"StructuredDocumentation","src":"17006:160:14","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":5392,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:14","nodeType":"FunctionDefinition","parameters":{"id":5373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5372,"mutability":"mutable","name":"value","nameLocation":"17197:5:14","nodeType":"VariableDeclaration","scope":5392,"src":"17190:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5371,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:14"},"returnParameters":{"id":5376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5375,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5392,"src":"17227:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5374,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:14"},"scope":6239,"src":"17171:193:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5417,"nodeType":"Block","src":"17761:150:14","statements":[{"expression":{"id":5405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5400,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5398,"src":"17771:10:14","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5395,"src":"17791:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":5401,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:14","typeDescriptions":{}}},"id":5404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:14","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":5406,"nodeType":"ExpressionStatement","src":"17771:26:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5407,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5398,"src":"17811:10:14","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5408,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5395,"src":"17825:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5416,"nodeType":"IfStatement","src":"17807:98:14","trueBody":{"id":5415,"nodeType":"Block","src":"17832:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":5411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:14","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":5412,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5395,"src":"17888:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5410,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"17853:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5414,"nodeType":"RevertStatement","src":"17846:48:14"}]}}]},"documentation":{"id":5393,"nodeType":"StructuredDocumentation","src":"17370:312:14","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":5418,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:14","nodeType":"FunctionDefinition","parameters":{"id":5396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5395,"mutability":"mutable","name":"value","nameLocation":"17712:5:14","nodeType":"VariableDeclaration","scope":5418,"src":"17705:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5394,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:14"},"returnParameters":{"id":5399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5398,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:14","nodeType":"VariableDeclaration","scope":5418,"src":"17742:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":5397,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:14","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:14"},"scope":6239,"src":"17687:224:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5443,"nodeType":"Block","src":"18308:150:14","statements":[{"expression":{"id":5431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5426,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5424,"src":"18318:10:14","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5429,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5421,"src":"18338:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5428,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":5427,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:14","typeDescriptions":{}}},"id":5430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:14","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":5432,"nodeType":"ExpressionStatement","src":"18318:26:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5433,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5424,"src":"18358:10:14","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5434,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5421,"src":"18372:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5442,"nodeType":"IfStatement","src":"18354:98:14","trueBody":{"id":5441,"nodeType":"Block","src":"18379:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":5437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:14","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":5438,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5421,"src":"18435:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5436,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"18400:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5440,"nodeType":"RevertStatement","src":"18393:48:14"}]}}]},"documentation":{"id":5419,"nodeType":"StructuredDocumentation","src":"17917:312:14","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":5444,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:14","nodeType":"FunctionDefinition","parameters":{"id":5422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5421,"mutability":"mutable","name":"value","nameLocation":"18259:5:14","nodeType":"VariableDeclaration","scope":5444,"src":"18252:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5420,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:14"},"returnParameters":{"id":5425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5424,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:14","nodeType":"VariableDeclaration","scope":5444,"src":"18289:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":5423,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:14","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:14"},"scope":6239,"src":"18234:224:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5469,"nodeType":"Block","src":"18855:150:14","statements":[{"expression":{"id":5457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5452,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5450,"src":"18865:10:14","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5455,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5447,"src":"18885:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5454,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":5453,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:14","typeDescriptions":{}}},"id":5456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:14","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":5458,"nodeType":"ExpressionStatement","src":"18865:26:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5459,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5450,"src":"18905:10:14","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5460,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5447,"src":"18919:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5468,"nodeType":"IfStatement","src":"18901:98:14","trueBody":{"id":5467,"nodeType":"Block","src":"18926:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":5463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:14","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":5464,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5447,"src":"18982:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5462,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"18947:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5466,"nodeType":"RevertStatement","src":"18940:48:14"}]}}]},"documentation":{"id":5445,"nodeType":"StructuredDocumentation","src":"18464:312:14","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":5470,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:14","nodeType":"FunctionDefinition","parameters":{"id":5448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5447,"mutability":"mutable","name":"value","nameLocation":"18806:5:14","nodeType":"VariableDeclaration","scope":5470,"src":"18799:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5446,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:14"},"returnParameters":{"id":5451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5450,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:14","nodeType":"VariableDeclaration","scope":5470,"src":"18836:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":5449,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:14","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:14"},"scope":6239,"src":"18781:224:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5495,"nodeType":"Block","src":"19402:150:14","statements":[{"expression":{"id":5483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5478,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5476,"src":"19412:10:14","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5481,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5473,"src":"19432:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5480,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":5479,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:14","typeDescriptions":{}}},"id":5482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:14","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":5484,"nodeType":"ExpressionStatement","src":"19412:26:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5485,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5476,"src":"19452:10:14","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5486,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5473,"src":"19466:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5494,"nodeType":"IfStatement","src":"19448:98:14","trueBody":{"id":5493,"nodeType":"Block","src":"19473:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":5489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:14","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":5490,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5473,"src":"19529:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5488,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"19494:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5492,"nodeType":"RevertStatement","src":"19487:48:14"}]}}]},"documentation":{"id":5471,"nodeType":"StructuredDocumentation","src":"19011:312:14","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":5496,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:14","nodeType":"FunctionDefinition","parameters":{"id":5474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5473,"mutability":"mutable","name":"value","nameLocation":"19353:5:14","nodeType":"VariableDeclaration","scope":5496,"src":"19346:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5472,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:14"},"returnParameters":{"id":5477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5476,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:14","nodeType":"VariableDeclaration","scope":5496,"src":"19383:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":5475,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:14","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:14"},"scope":6239,"src":"19328:224:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5521,"nodeType":"Block","src":"19949:150:14","statements":[{"expression":{"id":5509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5504,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5502,"src":"19959:10:14","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5507,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5499,"src":"19979:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5506,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":5505,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:14","typeDescriptions":{}}},"id":5508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:14","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":5510,"nodeType":"ExpressionStatement","src":"19959:26:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5511,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5502,"src":"19999:10:14","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5512,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5499,"src":"20013:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5520,"nodeType":"IfStatement","src":"19995:98:14","trueBody":{"id":5519,"nodeType":"Block","src":"20020:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":5515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:14","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":5516,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5499,"src":"20076:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5514,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"20041:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5518,"nodeType":"RevertStatement","src":"20034:48:14"}]}}]},"documentation":{"id":5497,"nodeType":"StructuredDocumentation","src":"19558:312:14","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":5522,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:14","nodeType":"FunctionDefinition","parameters":{"id":5500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5499,"mutability":"mutable","name":"value","nameLocation":"19900:5:14","nodeType":"VariableDeclaration","scope":5522,"src":"19893:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5498,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:14"},"returnParameters":{"id":5503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5502,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:14","nodeType":"VariableDeclaration","scope":5522,"src":"19930:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":5501,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:14","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:14"},"scope":6239,"src":"19875:224:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5547,"nodeType":"Block","src":"20496:150:14","statements":[{"expression":{"id":5535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5530,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5528,"src":"20506:10:14","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5533,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5525,"src":"20526:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5532,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":5531,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:14","typeDescriptions":{}}},"id":5534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:14","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":5536,"nodeType":"ExpressionStatement","src":"20506:26:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5537,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5528,"src":"20546:10:14","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5538,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5525,"src":"20560:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5546,"nodeType":"IfStatement","src":"20542:98:14","trueBody":{"id":5545,"nodeType":"Block","src":"20567:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":5541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:14","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":5542,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5525,"src":"20623:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5540,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"20588:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5544,"nodeType":"RevertStatement","src":"20581:48:14"}]}}]},"documentation":{"id":5523,"nodeType":"StructuredDocumentation","src":"20105:312:14","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":5548,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:14","nodeType":"FunctionDefinition","parameters":{"id":5526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5525,"mutability":"mutable","name":"value","nameLocation":"20447:5:14","nodeType":"VariableDeclaration","scope":5548,"src":"20440:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5524,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:14"},"returnParameters":{"id":5529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5528,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:14","nodeType":"VariableDeclaration","scope":5548,"src":"20477:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":5527,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:14","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:14"},"scope":6239,"src":"20422:224:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5573,"nodeType":"Block","src":"21043:150:14","statements":[{"expression":{"id":5561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5556,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5554,"src":"21053:10:14","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5559,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5551,"src":"21073:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5558,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":5557,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:14","typeDescriptions":{}}},"id":5560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:14","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":5562,"nodeType":"ExpressionStatement","src":"21053:26:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5563,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5554,"src":"21093:10:14","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5564,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5551,"src":"21107:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5572,"nodeType":"IfStatement","src":"21089:98:14","trueBody":{"id":5571,"nodeType":"Block","src":"21114:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":5567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:14","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":5568,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5551,"src":"21170:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5566,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"21135:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5570,"nodeType":"RevertStatement","src":"21128:48:14"}]}}]},"documentation":{"id":5549,"nodeType":"StructuredDocumentation","src":"20652:312:14","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":5574,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:14","nodeType":"FunctionDefinition","parameters":{"id":5552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5551,"mutability":"mutable","name":"value","nameLocation":"20994:5:14","nodeType":"VariableDeclaration","scope":5574,"src":"20987:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5550,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:14"},"returnParameters":{"id":5555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5554,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:14","nodeType":"VariableDeclaration","scope":5574,"src":"21024:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":5553,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:14","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:14"},"scope":6239,"src":"20969:224:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5599,"nodeType":"Block","src":"21590:150:14","statements":[{"expression":{"id":5587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5582,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5580,"src":"21600:10:14","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5585,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5577,"src":"21620:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":5583,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:14","typeDescriptions":{}}},"id":5586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:14","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":5588,"nodeType":"ExpressionStatement","src":"21600:26:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5589,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5580,"src":"21640:10:14","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5590,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5577,"src":"21654:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5598,"nodeType":"IfStatement","src":"21636:98:14","trueBody":{"id":5597,"nodeType":"Block","src":"21661:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":5593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:14","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":5594,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5577,"src":"21717:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5592,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"21682:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5596,"nodeType":"RevertStatement","src":"21675:48:14"}]}}]},"documentation":{"id":5575,"nodeType":"StructuredDocumentation","src":"21199:312:14","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":5600,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:14","nodeType":"FunctionDefinition","parameters":{"id":5578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5577,"mutability":"mutable","name":"value","nameLocation":"21541:5:14","nodeType":"VariableDeclaration","scope":5600,"src":"21534:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5576,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:14"},"returnParameters":{"id":5581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5580,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:14","nodeType":"VariableDeclaration","scope":5600,"src":"21571:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":5579,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:14","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:14"},"scope":6239,"src":"21516:224:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5625,"nodeType":"Block","src":"22137:150:14","statements":[{"expression":{"id":5613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5608,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5606,"src":"22147:10:14","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5611,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5603,"src":"22167:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5610,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":5609,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:14","typeDescriptions":{}}},"id":5612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:14","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":5614,"nodeType":"ExpressionStatement","src":"22147:26:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5615,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5606,"src":"22187:10:14","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5616,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5603,"src":"22201:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5624,"nodeType":"IfStatement","src":"22183:98:14","trueBody":{"id":5623,"nodeType":"Block","src":"22208:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":5619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:14","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":5620,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5603,"src":"22264:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5618,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"22229:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5622,"nodeType":"RevertStatement","src":"22222:48:14"}]}}]},"documentation":{"id":5601,"nodeType":"StructuredDocumentation","src":"21746:312:14","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":5626,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:14","nodeType":"FunctionDefinition","parameters":{"id":5604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5603,"mutability":"mutable","name":"value","nameLocation":"22088:5:14","nodeType":"VariableDeclaration","scope":5626,"src":"22081:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5602,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:14"},"returnParameters":{"id":5607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5606,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:14","nodeType":"VariableDeclaration","scope":5626,"src":"22118:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":5605,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:14","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:14"},"scope":6239,"src":"22063:224:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5651,"nodeType":"Block","src":"22684:150:14","statements":[{"expression":{"id":5639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5634,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5632,"src":"22694:10:14","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5637,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5629,"src":"22714:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5636,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":5635,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:14","typeDescriptions":{}}},"id":5638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:14","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":5640,"nodeType":"ExpressionStatement","src":"22694:26:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5641,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5632,"src":"22734:10:14","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5642,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5629,"src":"22748:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5650,"nodeType":"IfStatement","src":"22730:98:14","trueBody":{"id":5649,"nodeType":"Block","src":"22755:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":5645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:14","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":5646,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5629,"src":"22811:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5644,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"22776:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5648,"nodeType":"RevertStatement","src":"22769:48:14"}]}}]},"documentation":{"id":5627,"nodeType":"StructuredDocumentation","src":"22293:312:14","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":5652,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:14","nodeType":"FunctionDefinition","parameters":{"id":5630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5629,"mutability":"mutable","name":"value","nameLocation":"22635:5:14","nodeType":"VariableDeclaration","scope":5652,"src":"22628:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5628,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:14"},"returnParameters":{"id":5633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5632,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:14","nodeType":"VariableDeclaration","scope":5652,"src":"22665:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":5631,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:14","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:14"},"scope":6239,"src":"22610:224:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5677,"nodeType":"Block","src":"23231:150:14","statements":[{"expression":{"id":5665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5660,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5658,"src":"23241:10:14","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5663,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5655,"src":"23261:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5662,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":5661,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:14","typeDescriptions":{}}},"id":5664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:14","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":5666,"nodeType":"ExpressionStatement","src":"23241:26:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5667,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5658,"src":"23281:10:14","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5668,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5655,"src":"23295:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5676,"nodeType":"IfStatement","src":"23277:98:14","trueBody":{"id":5675,"nodeType":"Block","src":"23302:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":5671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:14","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":5672,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5655,"src":"23358:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5670,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"23323:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5674,"nodeType":"RevertStatement","src":"23316:48:14"}]}}]},"documentation":{"id":5653,"nodeType":"StructuredDocumentation","src":"22840:312:14","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":5678,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:14","nodeType":"FunctionDefinition","parameters":{"id":5656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5655,"mutability":"mutable","name":"value","nameLocation":"23182:5:14","nodeType":"VariableDeclaration","scope":5678,"src":"23175:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5654,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:14"},"returnParameters":{"id":5659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5658,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:14","nodeType":"VariableDeclaration","scope":5678,"src":"23212:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":5657,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:14","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:14"},"scope":6239,"src":"23157:224:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5703,"nodeType":"Block","src":"23778:150:14","statements":[{"expression":{"id":5691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5686,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5684,"src":"23788:10:14","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5689,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5681,"src":"23808:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5688,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":5687,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:14","typeDescriptions":{}}},"id":5690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:14","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":5692,"nodeType":"ExpressionStatement","src":"23788:26:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5693,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5684,"src":"23828:10:14","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5694,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5681,"src":"23842:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5702,"nodeType":"IfStatement","src":"23824:98:14","trueBody":{"id":5701,"nodeType":"Block","src":"23849:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":5697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:14","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":5698,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5681,"src":"23905:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5696,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"23870:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5700,"nodeType":"RevertStatement","src":"23863:48:14"}]}}]},"documentation":{"id":5679,"nodeType":"StructuredDocumentation","src":"23387:312:14","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":5704,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:14","nodeType":"FunctionDefinition","parameters":{"id":5682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5681,"mutability":"mutable","name":"value","nameLocation":"23729:5:14","nodeType":"VariableDeclaration","scope":5704,"src":"23722:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5680,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:14"},"returnParameters":{"id":5685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5684,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:14","nodeType":"VariableDeclaration","scope":5704,"src":"23759:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":5683,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:14","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:14"},"scope":6239,"src":"23704:224:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5729,"nodeType":"Block","src":"24325:150:14","statements":[{"expression":{"id":5717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5712,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5710,"src":"24335:10:14","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5715,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5707,"src":"24355:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5714,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":5713,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:14","typeDescriptions":{}}},"id":5716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:14","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":5718,"nodeType":"ExpressionStatement","src":"24335:26:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5719,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5710,"src":"24375:10:14","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5720,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5707,"src":"24389:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5728,"nodeType":"IfStatement","src":"24371:98:14","trueBody":{"id":5727,"nodeType":"Block","src":"24396:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":5723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:14","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":5724,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5707,"src":"24452:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5722,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"24417:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5726,"nodeType":"RevertStatement","src":"24410:48:14"}]}}]},"documentation":{"id":5705,"nodeType":"StructuredDocumentation","src":"23934:312:14","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":5730,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:14","nodeType":"FunctionDefinition","parameters":{"id":5708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5707,"mutability":"mutable","name":"value","nameLocation":"24276:5:14","nodeType":"VariableDeclaration","scope":5730,"src":"24269:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5706,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:14"},"returnParameters":{"id":5711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5710,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:14","nodeType":"VariableDeclaration","scope":5730,"src":"24306:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":5709,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:14","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:14"},"scope":6239,"src":"24251:224:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5755,"nodeType":"Block","src":"24872:150:14","statements":[{"expression":{"id":5743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5738,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5736,"src":"24882:10:14","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5741,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5733,"src":"24902:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5740,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":5739,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:14","typeDescriptions":{}}},"id":5742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:14","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":5744,"nodeType":"ExpressionStatement","src":"24882:26:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5745,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5736,"src":"24922:10:14","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5746,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5733,"src":"24936:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5754,"nodeType":"IfStatement","src":"24918:98:14","trueBody":{"id":5753,"nodeType":"Block","src":"24943:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":5749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:14","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":5750,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5733,"src":"24999:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5748,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"24964:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5752,"nodeType":"RevertStatement","src":"24957:48:14"}]}}]},"documentation":{"id":5731,"nodeType":"StructuredDocumentation","src":"24481:312:14","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":5756,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:14","nodeType":"FunctionDefinition","parameters":{"id":5734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5733,"mutability":"mutable","name":"value","nameLocation":"24823:5:14","nodeType":"VariableDeclaration","scope":5756,"src":"24816:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5732,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:14"},"returnParameters":{"id":5737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5736,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:14","nodeType":"VariableDeclaration","scope":5756,"src":"24853:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":5735,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:14","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:14"},"scope":6239,"src":"24798:224:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5781,"nodeType":"Block","src":"25419:150:14","statements":[{"expression":{"id":5769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5764,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5762,"src":"25429:10:14","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5767,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5759,"src":"25449:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5766,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":5765,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:14","typeDescriptions":{}}},"id":5768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:14","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":5770,"nodeType":"ExpressionStatement","src":"25429:26:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5771,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5762,"src":"25469:10:14","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5772,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5759,"src":"25483:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5780,"nodeType":"IfStatement","src":"25465:98:14","trueBody":{"id":5779,"nodeType":"Block","src":"25490:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":5775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:14","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":5776,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5759,"src":"25546:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5774,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"25511:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5778,"nodeType":"RevertStatement","src":"25504:48:14"}]}}]},"documentation":{"id":5757,"nodeType":"StructuredDocumentation","src":"25028:312:14","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":5782,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:14","nodeType":"FunctionDefinition","parameters":{"id":5760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5759,"mutability":"mutable","name":"value","nameLocation":"25370:5:14","nodeType":"VariableDeclaration","scope":5782,"src":"25363:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5758,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:14"},"returnParameters":{"id":5763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5762,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:14","nodeType":"VariableDeclaration","scope":5782,"src":"25400:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":5761,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:14","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:14"},"scope":6239,"src":"25345:224:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5807,"nodeType":"Block","src":"25966:150:14","statements":[{"expression":{"id":5795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5790,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"25976:10:14","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5793,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5785,"src":"25996:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5792,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":5791,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:14","typeDescriptions":{}}},"id":5794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:14","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":5796,"nodeType":"ExpressionStatement","src":"25976:26:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5797,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"26016:10:14","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5798,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5785,"src":"26030:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5806,"nodeType":"IfStatement","src":"26012:98:14","trueBody":{"id":5805,"nodeType":"Block","src":"26037:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":5801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:14","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":5802,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5785,"src":"26093:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5800,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"26058:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5804,"nodeType":"RevertStatement","src":"26051:48:14"}]}}]},"documentation":{"id":5783,"nodeType":"StructuredDocumentation","src":"25575:312:14","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":5808,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:14","nodeType":"FunctionDefinition","parameters":{"id":5786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5785,"mutability":"mutable","name":"value","nameLocation":"25917:5:14","nodeType":"VariableDeclaration","scope":5808,"src":"25910:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5784,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:14"},"returnParameters":{"id":5789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5788,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:14","nodeType":"VariableDeclaration","scope":5808,"src":"25947:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":5787,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:14","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:14"},"scope":6239,"src":"25892:224:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5833,"nodeType":"Block","src":"26513:150:14","statements":[{"expression":{"id":5821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5816,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5814,"src":"26523:10:14","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5819,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5811,"src":"26543:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5818,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":5817,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:14","typeDescriptions":{}}},"id":5820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:14","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":5822,"nodeType":"ExpressionStatement","src":"26523:26:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5823,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5814,"src":"26563:10:14","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5824,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5811,"src":"26577:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5832,"nodeType":"IfStatement","src":"26559:98:14","trueBody":{"id":5831,"nodeType":"Block","src":"26584:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":5827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:14","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":5828,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5811,"src":"26640:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5826,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"26605:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5830,"nodeType":"RevertStatement","src":"26598:48:14"}]}}]},"documentation":{"id":5809,"nodeType":"StructuredDocumentation","src":"26122:312:14","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":5834,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:14","nodeType":"FunctionDefinition","parameters":{"id":5812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5811,"mutability":"mutable","name":"value","nameLocation":"26464:5:14","nodeType":"VariableDeclaration","scope":5834,"src":"26457:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5810,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:14"},"returnParameters":{"id":5815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5814,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:14","nodeType":"VariableDeclaration","scope":5834,"src":"26494:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":5813,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:14","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:14"},"scope":6239,"src":"26439:224:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5859,"nodeType":"Block","src":"27060:150:14","statements":[{"expression":{"id":5847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5842,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5840,"src":"27070:10:14","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5845,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5837,"src":"27090:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5844,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":5843,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:14","typeDescriptions":{}}},"id":5846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:14","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":5848,"nodeType":"ExpressionStatement","src":"27070:26:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5849,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5840,"src":"27110:10:14","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5850,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5837,"src":"27124:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5858,"nodeType":"IfStatement","src":"27106:98:14","trueBody":{"id":5857,"nodeType":"Block","src":"27131:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":5853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:14","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":5854,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5837,"src":"27187:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5852,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"27152:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5856,"nodeType":"RevertStatement","src":"27145:48:14"}]}}]},"documentation":{"id":5835,"nodeType":"StructuredDocumentation","src":"26669:312:14","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":5860,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:14","nodeType":"FunctionDefinition","parameters":{"id":5838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5837,"mutability":"mutable","name":"value","nameLocation":"27011:5:14","nodeType":"VariableDeclaration","scope":5860,"src":"27004:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5836,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:14"},"returnParameters":{"id":5841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5840,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:14","nodeType":"VariableDeclaration","scope":5860,"src":"27041:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":5839,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:14","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:14"},"scope":6239,"src":"26986:224:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5885,"nodeType":"Block","src":"27607:150:14","statements":[{"expression":{"id":5873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5868,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5866,"src":"27617:10:14","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5871,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5863,"src":"27637:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5870,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":5869,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:14","typeDescriptions":{}}},"id":5872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:14","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":5874,"nodeType":"ExpressionStatement","src":"27617:26:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5875,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5866,"src":"27657:10:14","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5876,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5863,"src":"27671:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5884,"nodeType":"IfStatement","src":"27653:98:14","trueBody":{"id":5883,"nodeType":"Block","src":"27678:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":5879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:14","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":5880,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5863,"src":"27734:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5878,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"27699:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5882,"nodeType":"RevertStatement","src":"27692:48:14"}]}}]},"documentation":{"id":5861,"nodeType":"StructuredDocumentation","src":"27216:312:14","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":5886,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:14","nodeType":"FunctionDefinition","parameters":{"id":5864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5863,"mutability":"mutable","name":"value","nameLocation":"27558:5:14","nodeType":"VariableDeclaration","scope":5886,"src":"27551:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5862,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:14"},"returnParameters":{"id":5867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5866,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:14","nodeType":"VariableDeclaration","scope":5886,"src":"27588:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":5865,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:14","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:14"},"scope":6239,"src":"27533:224:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5911,"nodeType":"Block","src":"28147:148:14","statements":[{"expression":{"id":5899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5894,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5892,"src":"28157:10:14","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5897,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5889,"src":"28176:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":5895,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:14","typeDescriptions":{}}},"id":5898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:14","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":5900,"nodeType":"ExpressionStatement","src":"28157:25:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5901,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5892,"src":"28196:10:14","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5902,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5889,"src":"28210:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5910,"nodeType":"IfStatement","src":"28192:97:14","trueBody":{"id":5909,"nodeType":"Block","src":"28217:72:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":5905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:14","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":5906,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5889,"src":"28272:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5904,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"28238:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5908,"nodeType":"RevertStatement","src":"28231:47:14"}]}}]},"documentation":{"id":5887,"nodeType":"StructuredDocumentation","src":"27763:307:14","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":5912,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:14","nodeType":"FunctionDefinition","parameters":{"id":5890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5889,"mutability":"mutable","name":"value","nameLocation":"28099:5:14","nodeType":"VariableDeclaration","scope":5912,"src":"28092:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5888,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:14"},"returnParameters":{"id":5893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5892,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:14","nodeType":"VariableDeclaration","scope":5912,"src":"28129:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":5891,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:14","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:14"},"scope":6239,"src":"28075:220:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5937,"nodeType":"Block","src":"28685:148:14","statements":[{"expression":{"id":5925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5920,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5918,"src":"28695:10:14","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5923,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5915,"src":"28714:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5922,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":5921,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:14","typeDescriptions":{}}},"id":5924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:14","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":5926,"nodeType":"ExpressionStatement","src":"28695:25:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5927,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5918,"src":"28734:10:14","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5928,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5915,"src":"28748:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5936,"nodeType":"IfStatement","src":"28730:97:14","trueBody":{"id":5935,"nodeType":"Block","src":"28755:72:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":5931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:14","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":5932,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5915,"src":"28810:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5930,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"28776:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5934,"nodeType":"RevertStatement","src":"28769:47:14"}]}}]},"documentation":{"id":5913,"nodeType":"StructuredDocumentation","src":"28301:307:14","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":5938,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:14","nodeType":"FunctionDefinition","parameters":{"id":5916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5915,"mutability":"mutable","name":"value","nameLocation":"28637:5:14","nodeType":"VariableDeclaration","scope":5938,"src":"28630:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5914,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:14"},"returnParameters":{"id":5919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5918,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:14","nodeType":"VariableDeclaration","scope":5938,"src":"28667:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":5917,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:14","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:14"},"scope":6239,"src":"28613:220:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5963,"nodeType":"Block","src":"29223:148:14","statements":[{"expression":{"id":5951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5946,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5944,"src":"29233:10:14","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5949,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5941,"src":"29252:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5948,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":5947,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:14","typeDescriptions":{}}},"id":5950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:14","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":5952,"nodeType":"ExpressionStatement","src":"29233:25:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5953,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5944,"src":"29272:10:14","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5954,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5941,"src":"29286:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5962,"nodeType":"IfStatement","src":"29268:97:14","trueBody":{"id":5961,"nodeType":"Block","src":"29293:72:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":5957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:14","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":5958,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5941,"src":"29348:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5956,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"29314:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5960,"nodeType":"RevertStatement","src":"29307:47:14"}]}}]},"documentation":{"id":5939,"nodeType":"StructuredDocumentation","src":"28839:307:14","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":5964,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:14","nodeType":"FunctionDefinition","parameters":{"id":5942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5941,"mutability":"mutable","name":"value","nameLocation":"29175:5:14","nodeType":"VariableDeclaration","scope":5964,"src":"29168:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5940,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:14"},"returnParameters":{"id":5945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5944,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:14","nodeType":"VariableDeclaration","scope":5964,"src":"29205:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":5943,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:14","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:14"},"scope":6239,"src":"29151:220:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5989,"nodeType":"Block","src":"29761:148:14","statements":[{"expression":{"id":5977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5972,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5970,"src":"29771:10:14","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5975,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5967,"src":"29790:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5974,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":5973,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:14","typeDescriptions":{}}},"id":5976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:14","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":5978,"nodeType":"ExpressionStatement","src":"29771:25:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5979,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5970,"src":"29810:10:14","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5980,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5967,"src":"29824:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5988,"nodeType":"IfStatement","src":"29806:97:14","trueBody":{"id":5987,"nodeType":"Block","src":"29831:72:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":5983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:14","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":5984,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5967,"src":"29886:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5982,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"29852:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5986,"nodeType":"RevertStatement","src":"29845:47:14"}]}}]},"documentation":{"id":5965,"nodeType":"StructuredDocumentation","src":"29377:307:14","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":5990,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:14","nodeType":"FunctionDefinition","parameters":{"id":5968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5967,"mutability":"mutable","name":"value","nameLocation":"29713:5:14","nodeType":"VariableDeclaration","scope":5990,"src":"29706:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5966,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:14"},"returnParameters":{"id":5971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5970,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:14","nodeType":"VariableDeclaration","scope":5990,"src":"29743:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":5969,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:14","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:14"},"scope":6239,"src":"29689:220:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6015,"nodeType":"Block","src":"30299:148:14","statements":[{"expression":{"id":6003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5998,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5996,"src":"30309:10:14","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6001,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5993,"src":"30328:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6000,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":5999,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:14","typeDescriptions":{}}},"id":6002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:14","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":6004,"nodeType":"ExpressionStatement","src":"30309:25:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6005,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5996,"src":"30348:10:14","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6006,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5993,"src":"30362:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6014,"nodeType":"IfStatement","src":"30344:97:14","trueBody":{"id":6013,"nodeType":"Block","src":"30369:72:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":6009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":6010,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5993,"src":"30424:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6008,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"30390:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6012,"nodeType":"RevertStatement","src":"30383:47:14"}]}}]},"documentation":{"id":5991,"nodeType":"StructuredDocumentation","src":"29915:307:14","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":6016,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:14","nodeType":"FunctionDefinition","parameters":{"id":5994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5993,"mutability":"mutable","name":"value","nameLocation":"30251:5:14","nodeType":"VariableDeclaration","scope":6016,"src":"30244:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5992,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:14"},"returnParameters":{"id":5997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5996,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:14","nodeType":"VariableDeclaration","scope":6016,"src":"30281:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5995,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:14","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:14"},"scope":6239,"src":"30227:220:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6041,"nodeType":"Block","src":"30837:148:14","statements":[{"expression":{"id":6029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6024,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6022,"src":"30847:10:14","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6027,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6019,"src":"30866:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6026,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":6025,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:14","typeDescriptions":{}}},"id":6028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:14","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":6030,"nodeType":"ExpressionStatement","src":"30847:25:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6031,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6022,"src":"30886:10:14","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6032,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6019,"src":"30900:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6040,"nodeType":"IfStatement","src":"30882:97:14","trueBody":{"id":6039,"nodeType":"Block","src":"30907:72:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":6035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:14","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":6036,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6019,"src":"30962:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6034,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"30928:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6038,"nodeType":"RevertStatement","src":"30921:47:14"}]}}]},"documentation":{"id":6017,"nodeType":"StructuredDocumentation","src":"30453:307:14","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":6042,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:14","nodeType":"FunctionDefinition","parameters":{"id":6020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6019,"mutability":"mutable","name":"value","nameLocation":"30789:5:14","nodeType":"VariableDeclaration","scope":6042,"src":"30782:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6018,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:14"},"returnParameters":{"id":6023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6022,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:14","nodeType":"VariableDeclaration","scope":6042,"src":"30819:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":6021,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:14","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:14"},"scope":6239,"src":"30765:220:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6067,"nodeType":"Block","src":"31375:148:14","statements":[{"expression":{"id":6055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6050,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6048,"src":"31385:10:14","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6053,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6045,"src":"31404:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6052,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":6051,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:14","typeDescriptions":{}}},"id":6054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:14","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":6056,"nodeType":"ExpressionStatement","src":"31385:25:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6057,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6048,"src":"31424:10:14","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6058,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6045,"src":"31438:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6066,"nodeType":"IfStatement","src":"31420:97:14","trueBody":{"id":6065,"nodeType":"Block","src":"31445:72:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":6061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:14","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":6062,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6045,"src":"31500:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6060,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"31466:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6064,"nodeType":"RevertStatement","src":"31459:47:14"}]}}]},"documentation":{"id":6043,"nodeType":"StructuredDocumentation","src":"30991:307:14","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":6068,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:14","nodeType":"FunctionDefinition","parameters":{"id":6046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6045,"mutability":"mutable","name":"value","nameLocation":"31327:5:14","nodeType":"VariableDeclaration","scope":6068,"src":"31320:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6044,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:14"},"returnParameters":{"id":6049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6048,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:14","nodeType":"VariableDeclaration","scope":6068,"src":"31357:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":6047,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:14","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:14"},"scope":6239,"src":"31303:220:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6093,"nodeType":"Block","src":"31913:148:14","statements":[{"expression":{"id":6081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6076,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6074,"src":"31923:10:14","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6079,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6071,"src":"31942:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6078,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":6077,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:14","typeDescriptions":{}}},"id":6080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:14","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":6082,"nodeType":"ExpressionStatement","src":"31923:25:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6083,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6074,"src":"31962:10:14","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6084,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6071,"src":"31976:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6092,"nodeType":"IfStatement","src":"31958:97:14","trueBody":{"id":6091,"nodeType":"Block","src":"31983:72:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":6087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:14","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":6088,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6071,"src":"32038:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6086,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"32004:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6090,"nodeType":"RevertStatement","src":"31997:47:14"}]}}]},"documentation":{"id":6069,"nodeType":"StructuredDocumentation","src":"31529:307:14","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":6094,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:14","nodeType":"FunctionDefinition","parameters":{"id":6072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6071,"mutability":"mutable","name":"value","nameLocation":"31865:5:14","nodeType":"VariableDeclaration","scope":6094,"src":"31858:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6070,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:14"},"returnParameters":{"id":6075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6074,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:14","nodeType":"VariableDeclaration","scope":6094,"src":"31895:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":6073,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:14","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:14"},"scope":6239,"src":"31841:220:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6119,"nodeType":"Block","src":"32451:148:14","statements":[{"expression":{"id":6107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6102,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6100,"src":"32461:10:14","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6105,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6097,"src":"32480:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6104,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":6103,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:14","typeDescriptions":{}}},"id":6106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:14","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":6108,"nodeType":"ExpressionStatement","src":"32461:25:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6109,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6100,"src":"32500:10:14","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6110,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6097,"src":"32514:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6118,"nodeType":"IfStatement","src":"32496:97:14","trueBody":{"id":6117,"nodeType":"Block","src":"32521:72:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":6113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":6114,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6097,"src":"32576:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6112,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"32542:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6116,"nodeType":"RevertStatement","src":"32535:47:14"}]}}]},"documentation":{"id":6095,"nodeType":"StructuredDocumentation","src":"32067:307:14","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":6120,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:14","nodeType":"FunctionDefinition","parameters":{"id":6098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6097,"mutability":"mutable","name":"value","nameLocation":"32403:5:14","nodeType":"VariableDeclaration","scope":6120,"src":"32396:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6096,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:14"},"returnParameters":{"id":6101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6100,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:14","nodeType":"VariableDeclaration","scope":6120,"src":"32433:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":6099,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:14","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:14"},"scope":6239,"src":"32379:220:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6145,"nodeType":"Block","src":"32989:148:14","statements":[{"expression":{"id":6133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6128,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6126,"src":"32999:10:14","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6131,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6123,"src":"33018:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":6129,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:14","typeDescriptions":{}}},"id":6132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:14","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":6134,"nodeType":"ExpressionStatement","src":"32999:25:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6135,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6126,"src":"33038:10:14","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6136,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6123,"src":"33052:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6144,"nodeType":"IfStatement","src":"33034:97:14","trueBody":{"id":6143,"nodeType":"Block","src":"33059:72:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:14","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6140,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6123,"src":"33114:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6138,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"33080:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6142,"nodeType":"RevertStatement","src":"33073:47:14"}]}}]},"documentation":{"id":6121,"nodeType":"StructuredDocumentation","src":"32605:307:14","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6146,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:14","nodeType":"FunctionDefinition","parameters":{"id":6124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6123,"mutability":"mutable","name":"value","nameLocation":"32941:5:14","nodeType":"VariableDeclaration","scope":6146,"src":"32934:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6122,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:14"},"returnParameters":{"id":6127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6126,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:14","nodeType":"VariableDeclaration","scope":6146,"src":"32971:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":6125,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:14","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:14"},"scope":6239,"src":"32917:220:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6171,"nodeType":"Block","src":"33527:148:14","statements":[{"expression":{"id":6159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6154,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6152,"src":"33537:10:14","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6157,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6149,"src":"33556:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":6155,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:14","typeDescriptions":{}}},"id":6158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:14","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":6160,"nodeType":"ExpressionStatement","src":"33537:25:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6161,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6152,"src":"33576:10:14","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6162,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6149,"src":"33590:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6170,"nodeType":"IfStatement","src":"33572:97:14","trueBody":{"id":6169,"nodeType":"Block","src":"33597:72:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6166,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6149,"src":"33652:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6164,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"33618:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6168,"nodeType":"RevertStatement","src":"33611:47:14"}]}}]},"documentation":{"id":6147,"nodeType":"StructuredDocumentation","src":"33143:307:14","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6172,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:14","nodeType":"FunctionDefinition","parameters":{"id":6150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6149,"mutability":"mutable","name":"value","nameLocation":"33479:5:14","nodeType":"VariableDeclaration","scope":6172,"src":"33472:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6148,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:14"},"returnParameters":{"id":6153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6152,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:14","nodeType":"VariableDeclaration","scope":6172,"src":"33509:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":6151,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:14","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:14"},"scope":6239,"src":"33455:220:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6197,"nodeType":"Block","src":"34058:146:14","statements":[{"expression":{"id":6185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6180,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6178,"src":"34068:10:14","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6183,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6175,"src":"34086:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6182,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":6181,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:14","typeDescriptions":{}}},"id":6184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:14","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":6186,"nodeType":"ExpressionStatement","src":"34068:24:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6187,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6178,"src":"34106:10:14","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6188,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6175,"src":"34120:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6196,"nodeType":"IfStatement","src":"34102:96:14","trueBody":{"id":6195,"nodeType":"Block","src":"34127:71:14","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6192,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6175,"src":"34181:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6190,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"34148:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6194,"nodeType":"RevertStatement","src":"34141:46:14"}]}}]},"documentation":{"id":6173,"nodeType":"StructuredDocumentation","src":"33681:302:14","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6198,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:14","nodeType":"FunctionDefinition","parameters":{"id":6176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6175,"mutability":"mutable","name":"value","nameLocation":"34011:5:14","nodeType":"VariableDeclaration","scope":6198,"src":"34004:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6174,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:14"},"returnParameters":{"id":6179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6178,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:14","nodeType":"VariableDeclaration","scope":6198,"src":"34041:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":6177,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:14","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:14"},"scope":6239,"src":"33988:216:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6227,"nodeType":"Block","src":"34444:250:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6206,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6201,"src":"34557:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":6211,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6210,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":6209,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":6213,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:14","memberName":"max","nodeType":"MemberAccess","src":"34573:16:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6208,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6207,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:14","typeDescriptions":{}}},"id":6214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6221,"nodeType":"IfStatement","src":"34553:105:14","trueBody":{"id":6220,"nodeType":"Block","src":"34592:66:14","statements":[{"errorCall":{"arguments":[{"id":6217,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6201,"src":"34641:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6216,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4501,"src":"34613:27:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6219,"nodeType":"RevertStatement","src":"34606:41:14"}]}},{"expression":{"arguments":[{"id":6224,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6201,"src":"34681:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6223,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6222,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:14","typeDescriptions":{}}},"id":6225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6205,"id":6226,"nodeType":"Return","src":"34667:20:14"}]},"documentation":{"id":6199,"nodeType":"StructuredDocumentation","src":"34210:165:14","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":6228,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:14","nodeType":"FunctionDefinition","parameters":{"id":6202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6201,"mutability":"mutable","name":"value","nameLocation":"34406:5:14","nodeType":"VariableDeclaration","scope":6228,"src":"34398:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6200,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:14"},"returnParameters":{"id":6205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6204,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6228,"src":"34436:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6203,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:14"},"scope":6239,"src":"34380:314:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6237,"nodeType":"Block","src":"34853:87:14","statements":[{"AST":{"nodeType":"YulBlock","src":"34888:46:14","statements":[{"nodeType":"YulAssignment","src":"34902:22:14","value":{"arguments":[{"arguments":[{"name":"b","nodeType":"YulIdentifier","src":"34921:1:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34914:6:14"},"nodeType":"YulFunctionCall","src":"34914:9:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34907:6:14"},"nodeType":"YulFunctionCall","src":"34907:17:14"},"variableNames":[{"name":"u","nodeType":"YulIdentifier","src":"34902:1:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6231,"isOffset":false,"isSlot":false,"src":"34921:1:14","valueSize":1},{"declaration":6234,"isOffset":false,"isSlot":false,"src":"34902:1:14","valueSize":1}],"flags":["memory-safe"],"id":6236,"nodeType":"InlineAssembly","src":"34863:71:14"}]},"documentation":{"id":6229,"nodeType":"StructuredDocumentation","src":"34700:90:14","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":6238,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:14","nodeType":"FunctionDefinition","parameters":{"id":6232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6231,"mutability":"mutable","name":"b","nameLocation":"34816:1:14","nodeType":"VariableDeclaration","scope":6238,"src":"34811:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6230,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:14"},"returnParameters":{"id":6235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6234,"mutability":"mutable","name":"u","nameLocation":"34850:1:14","nodeType":"VariableDeclaration","scope":6238,"src":"34842:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6233,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:14"},"scope":6239,"src":"34795:145:14","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6240,"src":"769:34173:14","usedErrors":[4484,4489,4496,4501],"usedEvents":[]}],"src":"192:34751:14"},"id":14},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[6239],"SignedMath":[6383]},"id":6384,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6241,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:15"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":6243,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6384,"sourceUnit":6240,"src":"135:40:15","symbolAliases":[{"foreign":{"id":6242,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"143:8:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":6244,"nodeType":"StructuredDocumentation","src":"177:80:15","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":6383,"linearizedBaseContracts":[6383],"name":"SignedMath","nameLocation":"266:10:15","nodeType":"ContractDefinition","nodes":[{"body":{"id":6273,"nodeType":"Block","src":"746:215:15","statements":[{"id":6272,"nodeType":"UncheckedBlock","src":"756:199:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6256,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6251,"src":"894:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6257,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6249,"src":"900:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6258,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6251,"src":"904:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6260,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":6265,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6247,"src":"932:9:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6263,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"916:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6239_$","typeString":"type(library SafeCast)"}},"id":6264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6238,"src":"916:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6262,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6261,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:15","typeDescriptions":{}}},"id":6267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6269,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6255,"id":6271,"nodeType":"Return","src":"887:57:15"}]}]},"documentation":{"id":6245,"nodeType":"StructuredDocumentation","src":"283:374:15","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":6274,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:15","nodeType":"FunctionDefinition","parameters":{"id":6252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6247,"mutability":"mutable","name":"condition","nameLocation":"684:9:15","nodeType":"VariableDeclaration","scope":6274,"src":"679:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6246,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6249,"mutability":"mutable","name":"a","nameLocation":"702:1:15","nodeType":"VariableDeclaration","scope":6274,"src":"695:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6248,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6251,"mutability":"mutable","name":"b","nameLocation":"712:1:15","nodeType":"VariableDeclaration","scope":6274,"src":"705:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6250,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:15"},"returnParameters":{"id":6255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6254,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6274,"src":"738:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6253,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:15"},"scope":6383,"src":"662:299:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6292,"nodeType":"Block","src":"1102:44:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6285,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6277,"src":"1127:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6286,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6279,"src":"1131:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6288,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6277,"src":"1134:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":6289,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6279,"src":"1137:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6284,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6274,"src":"1119:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":6290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6283,"id":6291,"nodeType":"Return","src":"1112:27:15"}]},"documentation":{"id":6275,"nodeType":"StructuredDocumentation","src":"967:66:15","text":" @dev Returns the largest of two signed numbers."},"id":6293,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:15","nodeType":"FunctionDefinition","parameters":{"id":6280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6277,"mutability":"mutable","name":"a","nameLocation":"1058:1:15","nodeType":"VariableDeclaration","scope":6293,"src":"1051:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6276,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6279,"mutability":"mutable","name":"b","nameLocation":"1068:1:15","nodeType":"VariableDeclaration","scope":6293,"src":"1061:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6278,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:15"},"returnParameters":{"id":6283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6282,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6293,"src":"1094:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6281,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:15"},"scope":6383,"src":"1038:108:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6311,"nodeType":"Block","src":"1288:44:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6304,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6296,"src":"1313:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6305,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6298,"src":"1317:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6307,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6296,"src":"1320:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":6308,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6298,"src":"1323:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6303,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6274,"src":"1305:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":6309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6302,"id":6310,"nodeType":"Return","src":"1298:27:15"}]},"documentation":{"id":6294,"nodeType":"StructuredDocumentation","src":"1152:67:15","text":" @dev Returns the smallest of two signed numbers."},"id":6312,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:15","nodeType":"FunctionDefinition","parameters":{"id":6299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6296,"mutability":"mutable","name":"a","nameLocation":"1244:1:15","nodeType":"VariableDeclaration","scope":6312,"src":"1237:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6295,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6298,"mutability":"mutable","name":"b","nameLocation":"1254:1:15","nodeType":"VariableDeclaration","scope":6312,"src":"1247:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6297,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:15"},"returnParameters":{"id":6302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6301,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6312,"src":"1280:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6300,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:15"},"scope":6383,"src":"1224:108:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6355,"nodeType":"Block","src":"1537:162:15","statements":[{"assignments":[6323],"declarations":[{"constant":false,"id":6323,"mutability":"mutable","name":"x","nameLocation":"1606:1:15","nodeType":"VariableDeclaration","scope":6355,"src":"1599:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6322,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6336,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6324,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6315,"src":"1611:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":6325,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6317,"src":"1615:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6327,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6328,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6315,"src":"1622:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6329,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6317,"src":"1626:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6331,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6334,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:15"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6337,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6323,"src":"1651:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6342,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6323,"src":"1671:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6341,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6340,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:15","typeDescriptions":{}}},"id":6343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":6344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:15","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6339,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6338,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:15","typeDescriptions":{}}},"id":6346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6347,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6315,"src":"1685:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6348,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6317,"src":"1689:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6350,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6352,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6321,"id":6354,"nodeType":"Return","src":"1644:48:15"}]},"documentation":{"id":6313,"nodeType":"StructuredDocumentation","src":"1338:126:15","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":6356,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:15","nodeType":"FunctionDefinition","parameters":{"id":6318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6315,"mutability":"mutable","name":"a","nameLocation":"1493:1:15","nodeType":"VariableDeclaration","scope":6356,"src":"1486:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6314,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6317,"mutability":"mutable","name":"b","nameLocation":"1503:1:15","nodeType":"VariableDeclaration","scope":6356,"src":"1496:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6316,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:15"},"returnParameters":{"id":6321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6320,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6356,"src":"1529:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6319,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:15"},"scope":6383,"src":"1469:230:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6381,"nodeType":"Block","src":"1843:767:15","statements":[{"id":6380,"nodeType":"UncheckedBlock","src":"1853:751:15","statements":[{"assignments":[6365],"declarations":[{"constant":false,"id":6365,"mutability":"mutable","name":"mask","nameLocation":"2424:4:15","nodeType":"VariableDeclaration","scope":6380,"src":"2417:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6364,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6369,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6366,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6359,"src":"2431:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":6367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:15","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6372,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6359,"src":"2576:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6373,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6365,"src":"2580:4:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6375,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6376,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6365,"src":"2588:4:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6371,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6370,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:15","typeDescriptions":{}}},"id":6378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6363,"id":6379,"nodeType":"Return","src":"2560:33:15"}]}]},"documentation":{"id":6357,"nodeType":"StructuredDocumentation","src":"1705:78:15","text":" @dev Returns the absolute unsigned value of a signed value."},"id":6382,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:15","nodeType":"FunctionDefinition","parameters":{"id":6360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6359,"mutability":"mutable","name":"n","nameLocation":"1808:1:15","nodeType":"VariableDeclaration","scope":6382,"src":"1801:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6358,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:15"},"returnParameters":{"id":6363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6362,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6382,"src":"1834:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6361,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:15"},"scope":6383,"src":"1788:822:15","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6384,"src":"258:2354:15","usedErrors":[],"usedEvents":[]}],"src":"109:2504:15"},"id":15},"contracts/IVehicleShield.sol":{"ast":{"absolutePath":"contracts/IVehicleShield.sol","exportedSymbols":{"IPolicyNFT":[6450],"IRiskAssessment":[6421],"IVehicleShield":[6390]},"id":6451,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6385,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:16"},{"abstract":false,"baseContracts":[],"canonicalName":"IVehicleShield","contractDependencies":[],"contractKind":"interface","fullyImplemented":true,"id":6390,"linearizedBaseContracts":[6390],"name":"IVehicleShield","nameLocation":"67:14:16","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IVehicleShield.VerificationTier","id":6389,"members":[{"id":6386,"name":"Basic","nameLocation":"112:5:16","nodeType":"EnumValue","src":"112:5:16"},{"id":6387,"name":"Medium","nameLocation":"119:6:16","nodeType":"EnumValue","src":"119:6:16"},{"id":6388,"name":"Premium","nameLocation":"127:7:16","nodeType":"EnumValue","src":"127:7:16"}],"name":"VerificationTier","nameLocation":"93:16:16","nodeType":"EnumDefinition","src":"88:48:16"}],"scope":6451,"src":"57:81:16","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IRiskAssessment","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":6421,"linearizedBaseContracts":[6421],"name":"IRiskAssessment","nameLocation":"150:15:16","nodeType":"ContractDefinition","nodes":[{"functionSelector":"0944a8ca","id":6410,"implemented":false,"kind":"function","modifiers":[],"name":"assessVehicle","nameLocation":"181:13:16","nodeType":"FunctionDefinition","parameters":{"id":6403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6392,"mutability":"mutable","name":"_regPlate","nameLocation":"218:9:16","nodeType":"VariableDeclaration","scope":6410,"src":"204:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6391,"name":"string","nodeType":"ElementaryTypeName","src":"204:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6394,"mutability":"mutable","name":"_baseValue","nameLocation":"245:10:16","nodeType":"VariableDeclaration","scope":6410,"src":"237:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6393,"name":"uint256","nodeType":"ElementaryTypeName","src":"237:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6396,"mutability":"mutable","name":"_age","nameLocation":"273:4:16","nodeType":"VariableDeclaration","scope":6410,"src":"265:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6395,"name":"uint256","nodeType":"ElementaryTypeName","src":"265:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6398,"mutability":"mutable","name":"_mileage","nameLocation":"295:8:16","nodeType":"VariableDeclaration","scope":6410,"src":"287:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6397,"name":"uint256","nodeType":"ElementaryTypeName","src":"287:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6400,"mutability":"mutable","name":"_condition","nameLocation":"319:10:16","nodeType":"VariableDeclaration","scope":6410,"src":"313:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6399,"name":"uint8","nodeType":"ElementaryTypeName","src":"313:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":6402,"mutability":"mutable","name":"_hasAccidentHistory","nameLocation":"344:19:16","nodeType":"VariableDeclaration","scope":6410,"src":"339:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6401,"name":"bool","nodeType":"ElementaryTypeName","src":"339:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"194:175:16"},"returnParameters":{"id":6409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6406,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6410,"src":"388:31:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_VerificationTier_$6389","typeString":"enum IVehicleShield.VerificationTier"},"typeName":{"id":6405,"nodeType":"UserDefinedTypeName","pathNode":{"id":6404,"name":"IVehicleShield.VerificationTier","nameLocations":["388:14:16","403:16:16"],"nodeType":"IdentifierPath","referencedDeclaration":6389,"src":"388:31:16"},"referencedDeclaration":6389,"src":"388:31:16","typeDescriptions":{"typeIdentifier":"t_enum$_VerificationTier_$6389","typeString":"enum IVehicleShield.VerificationTier"}},"visibility":"internal"},{"constant":false,"id":6408,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6410,"src":"421:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6407,"name":"uint256","nodeType":"ElementaryTypeName","src":"421:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"387:42:16"},"scope":6421,"src":"172:258:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"69c27e14","id":6420,"implemented":false,"kind":"function","modifiers":[],"name":"calculatePremium","nameLocation":"449:16:16","nodeType":"FunctionDefinition","parameters":{"id":6416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6412,"mutability":"mutable","name":"_regPlate","nameLocation":"480:9:16","nodeType":"VariableDeclaration","scope":6420,"src":"466:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6411,"name":"string","nodeType":"ElementaryTypeName","src":"466:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6415,"mutability":"mutable","name":"_tier","nameLocation":"523:5:16","nodeType":"VariableDeclaration","scope":6420,"src":"491:37:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_VerificationTier_$6389","typeString":"enum IVehicleShield.VerificationTier"},"typeName":{"id":6414,"nodeType":"UserDefinedTypeName","pathNode":{"id":6413,"name":"IVehicleShield.VerificationTier","nameLocations":["491:14:16","506:16:16"],"nodeType":"IdentifierPath","referencedDeclaration":6389,"src":"491:31:16"},"referencedDeclaration":6389,"src":"491:31:16","typeDescriptions":{"typeIdentifier":"t_enum$_VerificationTier_$6389","typeString":"enum IVehicleShield.VerificationTier"}},"visibility":"internal"}],"src":"465:64:16"},"returnParameters":{"id":6419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6418,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6420,"src":"562:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6417,"name":"uint256","nodeType":"ElementaryTypeName","src":"562:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"561:9:16"},"scope":6421,"src":"440:131:16","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":6451,"src":"140:433:16","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IPolicyNFT","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":6450,"linearizedBaseContracts":[6450],"name":"IPolicyNFT","nameLocation":"585:10:16","nodeType":"ContractDefinition","nodes":[{"functionSelector":"21a9bfe8","id":6437,"implemented":false,"kind":"function","modifiers":[],"name":"mintPolicy","nameLocation":"611:10:16","nodeType":"FunctionDefinition","parameters":{"id":6433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6423,"mutability":"mutable","name":"to","nameLocation":"639:2:16","nodeType":"VariableDeclaration","scope":6437,"src":"631:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6422,"name":"address","nodeType":"ElementaryTypeName","src":"631:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6425,"mutability":"mutable","name":"vehicleId","nameLocation":"666:9:16","nodeType":"VariableDeclaration","scope":6437,"src":"652:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6424,"name":"string","nodeType":"ElementaryTypeName","src":"652:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6428,"mutability":"mutable","name":"tier","nameLocation":"717:4:16","nodeType":"VariableDeclaration","scope":6437,"src":"685:36:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_VerificationTier_$6389","typeString":"enum IVehicleShield.VerificationTier"},"typeName":{"id":6427,"nodeType":"UserDefinedTypeName","pathNode":{"id":6426,"name":"IVehicleShield.VerificationTier","nameLocations":["685:14:16","700:16:16"],"nodeType":"IdentifierPath","referencedDeclaration":6389,"src":"685:31:16"},"referencedDeclaration":6389,"src":"685:31:16","typeDescriptions":{"typeIdentifier":"t_enum$_VerificationTier_$6389","typeString":"enum IVehicleShield.VerificationTier"}},"visibility":"internal"},{"constant":false,"id":6430,"mutability":"mutable","name":"premium","nameLocation":"739:7:16","nodeType":"VariableDeclaration","scope":6437,"src":"731:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6429,"name":"uint256","nodeType":"ElementaryTypeName","src":"731:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6432,"mutability":"mutable","name":"coverage","nameLocation":"764:8:16","nodeType":"VariableDeclaration","scope":6437,"src":"756:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6431,"name":"uint256","nodeType":"ElementaryTypeName","src":"756:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"621:157:16"},"returnParameters":{"id":6436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6435,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6437,"src":"797:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6434,"name":"uint256","nodeType":"ElementaryTypeName","src":"797:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"796:9:16"},"scope":6450,"src":"602:204:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"ca009021","id":6444,"implemented":false,"kind":"function","modifiers":[],"name":"getPolicyOwner","nameLocation":"820:14:16","nodeType":"FunctionDefinition","parameters":{"id":6440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6439,"mutability":"mutable","name":"policyId","nameLocation":"843:8:16","nodeType":"VariableDeclaration","scope":6444,"src":"835:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6438,"name":"uint256","nodeType":"ElementaryTypeName","src":"835:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"834:18:16"},"returnParameters":{"id":6443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6442,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6444,"src":"876:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6441,"name":"address","nodeType":"ElementaryTypeName","src":"876:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"875:9:16"},"scope":6450,"src":"811:74:16","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"f457a0fe","id":6449,"implemented":false,"kind":"function","modifiers":[],"name":"burnPolicy","nameLocation":"899:10:16","nodeType":"FunctionDefinition","parameters":{"id":6447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6446,"mutability":"mutable","name":"policyId","nameLocation":"918:8:16","nodeType":"VariableDeclaration","scope":6449,"src":"910:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6445,"name":"uint256","nodeType":"ElementaryTypeName","src":"910:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"909:18:16"},"returnParameters":{"id":6448,"nodeType":"ParameterList","parameters":[],"src":"936:0:16"},"scope":6450,"src":"890:47:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":6451,"src":"575:364:16","usedErrors":[],"usedEvents":[]}],"src":"32:907:16"},"id":16},"contracts/InsuranceCore.sol":{"ast":{"absolutePath":"contracts/InsuranceCore.sol","exportedSymbols":{"Context":[1511],"IPolicyNFT":[6450],"IRiskAssessment":[6421],"IVehicleShield":[6390],"InsuranceCore":[7145],"Ownable":[147],"ReentrancyGuard":[1632]},"id":7146,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6452,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:17"},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":6453,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7146,"sourceUnit":1633,"src":"57:59:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":6454,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7146,"sourceUnit":148,"src":"117:52:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/IVehicleShield.sol","file":"./IVehicleShield.sol","id":6455,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7146,"sourceUnit":6451,"src":"170:30:17","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":6456,"name":"ReentrancyGuard","nameLocations":["229:15:17"],"nodeType":"IdentifierPath","referencedDeclaration":1632,"src":"229:15:17"},"id":6457,"nodeType":"InheritanceSpecifier","src":"229:15:17"},{"baseName":{"id":6458,"name":"Ownable","nameLocations":["246:7:17"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"246:7:17"},"id":6459,"nodeType":"InheritanceSpecifier","src":"246:7:17"}],"canonicalName":"InsuranceCore","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":7145,"linearizedBaseContracts":[7145,147,1511,1632],"name":"InsuranceCore","nameLocation":"212:13:17","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"af02808a","id":6462,"mutability":"mutable","name":"policyNFT","nameLocation":"278:9:17","nodeType":"VariableDeclaration","scope":7145,"src":"260:27:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IPolicyNFT_$6450","typeString":"contract IPolicyNFT"},"typeName":{"id":6461,"nodeType":"UserDefinedTypeName","pathNode":{"id":6460,"name":"IPolicyNFT","nameLocations":["260:10:17"],"nodeType":"IdentifierPath","referencedDeclaration":6450,"src":"260:10:17"},"referencedDeclaration":6450,"src":"260:10:17","typeDescriptions":{"typeIdentifier":"t_contract$_IPolicyNFT_$6450","typeString":"contract IPolicyNFT"}},"visibility":"public"},{"constant":false,"functionSelector":"70a1a7d5","id":6465,"mutability":"mutable","name":"riskAssessment","nameLocation":"316:14:17","nodeType":"VariableDeclaration","scope":7145,"src":"293:37:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IRiskAssessment_$6421","typeString":"contract IRiskAssessment"},"typeName":{"id":6464,"nodeType":"UserDefinedTypeName","pathNode":{"id":6463,"name":"IRiskAssessment","nameLocations":["293:15:17"],"nodeType":"IdentifierPath","referencedDeclaration":6421,"src":"293:15:17"},"referencedDeclaration":6421,"src":"293:15:17","typeDescriptions":{"typeIdentifier":"t_contract$_IRiskAssessment_$6421","typeString":"contract IRiskAssessment"}},"visibility":"public"},{"canonicalName":"InsuranceCore.VerificationStatus","id":6469,"members":[{"id":6466,"name":"Pending","nameLocation":"367:7:17","nodeType":"EnumValue","src":"367:7:17"},{"id":6467,"name":"Verified","nameLocation":"376:8:17","nodeType":"EnumValue","src":"376:8:17"},{"id":6468,"name":"Rejected","nameLocation":"386:8:17","nodeType":"EnumValue","src":"386:8:17"}],"name":"VerificationStatus","nameLocation":"346:18:17","nodeType":"EnumDefinition","src":"341:55:17"},{"canonicalName":"InsuranceCore.VehiclePhotos","id":6486,"members":[{"constant":false,"id":6471,"mutability":"mutable","name":"frontHash","nameLocation":"449:9:17","nodeType":"VariableDeclaration","scope":6486,"src":"442:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":6470,"name":"string","nodeType":"ElementaryTypeName","src":"442:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6473,"mutability":"mutable","name":"backHash","nameLocation":"475:8:17","nodeType":"VariableDeclaration","scope":6486,"src":"468:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":6472,"name":"string","nodeType":"ElementaryTypeName","src":"468:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6475,"mutability":"mutable","name":"leftHash","nameLocation":"500:8:17","nodeType":"VariableDeclaration","scope":6486,"src":"493:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":6474,"name":"string","nodeType":"ElementaryTypeName","src":"493:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6477,"mutability":"mutable","name":"rightHash","nameLocation":"525:9:17","nodeType":"VariableDeclaration","scope":6486,"src":"518:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":6476,"name":"string","nodeType":"ElementaryTypeName","src":"518:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6479,"mutability":"mutable","name":"mirrorLeftHash","nameLocation":"551:14:17","nodeType":"VariableDeclaration","scope":6486,"src":"544:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":6478,"name":"string","nodeType":"ElementaryTypeName","src":"544:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6481,"mutability":"mutable","name":"mirrorRightHash","nameLocation":"582:15:17","nodeType":"VariableDeclaration","scope":6486,"src":"575:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":6480,"name":"string","nodeType":"ElementaryTypeName","src":"575:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6483,"mutability":"mutable","name":"uploadDate","nameLocation":"615:10:17","nodeType":"VariableDeclaration","scope":6486,"src":"607:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6482,"name":"uint256","nodeType":"ElementaryTypeName","src":"607:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6485,"mutability":"mutable","name":"isComplete","nameLocation":"640:10:17","nodeType":"VariableDeclaration","scope":6486,"src":"635:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6484,"name":"bool","nodeType":"ElementaryTypeName","src":"635:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"VehiclePhotos","nameLocation":"418:13:17","nodeType":"StructDefinition","scope":7145,"src":"411:246:17","visibility":"public"},{"canonicalName":"InsuranceCore.Vehicle","id":6507,"members":[{"constant":false,"id":6488,"mutability":"mutable","name":"regPlate","nameLocation":"699:8:17","nodeType":"VariableDeclaration","scope":6507,"src":"692:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":6487,"name":"string","nodeType":"ElementaryTypeName","src":"692:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6490,"mutability":"mutable","name":"make","nameLocation":"724:4:17","nodeType":"VariableDeclaration","scope":6507,"src":"717:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":6489,"name":"string","nodeType":"ElementaryTypeName","src":"717:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6492,"mutability":"mutable","name":"model","nameLocation":"745:5:17","nodeType":"VariableDeclaration","scope":6507,"src":"738:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":6491,"name":"string","nodeType":"ElementaryTypeName","src":"738:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6494,"mutability":"mutable","name":"year","nameLocation":"768:4:17","nodeType":"VariableDeclaration","scope":6507,"src":"760:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6493,"name":"uint256","nodeType":"ElementaryTypeName","src":"760:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6496,"mutability":"mutable","name":"owner","nameLocation":"790:5:17","nodeType":"VariableDeclaration","scope":6507,"src":"782:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6495,"name":"address","nodeType":"ElementaryTypeName","src":"782:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6499,"mutability":"mutable","name":"status","nameLocation":"824:6:17","nodeType":"VariableDeclaration","scope":6507,"src":"805:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_VerificationStatus_$6469","typeString":"enum InsuranceCore.VerificationStatus"},"typeName":{"id":6498,"nodeType":"UserDefinedTypeName","pathNode":{"id":6497,"name":"VerificationStatus","nameLocations":["805:18:17"],"nodeType":"IdentifierPath","referencedDeclaration":6469,"src":"805:18:17"},"referencedDeclaration":6469,"src":"805:18:17","typeDescriptions":{"typeIdentifier":"t_enum$_VerificationStatus_$6469","typeString":"enum InsuranceCore.VerificationStatus"}},"visibility":"internal"},{"constant":false,"id":6502,"mutability":"mutable","name":"tier","nameLocation":"872:4:17","nodeType":"VariableDeclaration","scope":6507,"src":"840:36:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_VerificationTier_$6389","typeString":"enum IVehicleShield.VerificationTier"},"typeName":{"id":6501,"nodeType":"UserDefinedTypeName","pathNode":{"id":6500,"name":"IVehicleShield.VerificationTier","nameLocations":["840:14:17","855:16:17"],"nodeType":"IdentifierPath","referencedDeclaration":6389,"src":"840:31:17"},"referencedDeclaration":6389,"src":"840:31:17","typeDescriptions":{"typeIdentifier":"t_enum$_VerificationTier_$6389","typeString":"enum IVehicleShield.VerificationTier"}},"visibility":"internal"},{"constant":false,"id":6504,"mutability":"mutable","name":"lastVerificationDate","nameLocation":"894:20:17","nodeType":"VariableDeclaration","scope":6507,"src":"886:28:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6503,"name":"uint256","nodeType":"ElementaryTypeName","src":"886:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6506,"mutability":"mutable","name":"isRegistered","nameLocation":"929:12:17","nodeType":"VariableDeclaration","scope":6507,"src":"924:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6505,"name":"bool","nodeType":"ElementaryTypeName","src":"924:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"Vehicle","nameLocation":"674:7:17","nodeType":"StructDefinition","scope":7145,"src":"667:281:17","visibility":"public"},{"canonicalName":"InsuranceCore.Policy","id":6519,"members":[{"constant":false,"id":6509,"mutability":"mutable","name":"coverage","nameLocation":"990:8:17","nodeType":"VariableDeclaration","scope":6519,"src":"982:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6508,"name":"uint256","nodeType":"ElementaryTypeName","src":"982:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6511,"mutability":"mutable","name":"startDate","nameLocation":"1016:9:17","nodeType":"VariableDeclaration","scope":6519,"src":"1008:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6510,"name":"uint256","nodeType":"ElementaryTypeName","src":"1008:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6513,"mutability":"mutable","name":"endDate","nameLocation":"1043:7:17","nodeType":"VariableDeclaration","scope":6519,"src":"1035:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6512,"name":"uint256","nodeType":"ElementaryTypeName","src":"1035:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6515,"mutability":"mutable","name":"isActive","nameLocation":"1065:8:17","nodeType":"VariableDeclaration","scope":6519,"src":"1060:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6514,"name":"bool","nodeType":"ElementaryTypeName","src":"1060:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6518,"mutability":"mutable","name":"tier","nameLocation":"1115:4:17","nodeType":"VariableDeclaration","scope":6519,"src":"1083:36:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_VerificationTier_$6389","typeString":"enum IVehicleShield.VerificationTier"},"typeName":{"id":6517,"nodeType":"UserDefinedTypeName","pathNode":{"id":6516,"name":"IVehicleShield.VerificationTier","nameLocations":["1083:14:17","1098:16:17"],"nodeType":"IdentifierPath","referencedDeclaration":6389,"src":"1083:31:17"},"referencedDeclaration":6389,"src":"1083:31:17","typeDescriptions":{"typeIdentifier":"t_enum$_VerificationTier_$6389","typeString":"enum IVehicleShield.VerificationTier"}},"visibility":"internal"}],"name":"Policy","nameLocation":"965:6:17","nodeType":"StructDefinition","scope":7145,"src":"958:168:17","visibility":"public"},{"canonicalName":"InsuranceCore.Claim","id":6534,"members":[{"constant":false,"id":6521,"mutability":"mutable","name":"claimId","nameLocation":"1167:7:17","nodeType":"VariableDeclaration","scope":6534,"src":"1159:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6520,"name":"uint256","nodeType":"ElementaryTypeName","src":"1159:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6523,"mutability":"mutable","name":"policyId","nameLocation":"1192:8:17","nodeType":"VariableDeclaration","scope":6534,"src":"1184:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6522,"name":"uint256","nodeType":"ElementaryTypeName","src":"1184:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6525,"mutability":"mutable","name":"description","nameLocation":"1217:11:17","nodeType":"VariableDeclaration","scope":6534,"src":"1210:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":6524,"name":"string","nodeType":"ElementaryTypeName","src":"1210:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6527,"mutability":"mutable","name":"photoHash","nameLocation":"1245:9:17","nodeType":"VariableDeclaration","scope":6534,"src":"1238:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":6526,"name":"string","nodeType":"ElementaryTypeName","src":"1238:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6529,"mutability":"mutable","name":"amount","nameLocation":"1272:6:17","nodeType":"VariableDeclaration","scope":6534,"src":"1264:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6528,"name":"uint256","nodeType":"ElementaryTypeName","src":"1264:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6531,"mutability":"mutable","name":"isProcessed","nameLocation":"1293:11:17","nodeType":"VariableDeclaration","scope":6534,"src":"1288:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6530,"name":"bool","nodeType":"ElementaryTypeName","src":"1288:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6533,"mutability":"mutable","name":"isPaid","nameLocation":"1319:6:17","nodeType":"VariableDeclaration","scope":6534,"src":"1314:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6532,"name":"bool","nodeType":"ElementaryTypeName","src":"1314:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"Claim","nameLocation":"1143:5:17","nodeType":"StructDefinition","scope":7145,"src":"1136:196:17","visibility":"public"},{"constant":false,"functionSelector":"976de5c5","id":6539,"mutability":"mutable","name":"vehicles","nameLocation":"1376:8:17","nodeType":"VariableDeclaration","scope":7145,"src":"1342:42:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_Vehicle_$6507_storage_$","typeString":"mapping(string => struct InsuranceCore.Vehicle)"},"typeName":{"id":6538,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6535,"name":"string","nodeType":"ElementaryTypeName","src":"1350:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"nodeType":"Mapping","src":"1342:26:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_Vehicle_$6507_storage_$","typeString":"mapping(string => struct InsuranceCore.Vehicle)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6537,"nodeType":"UserDefinedTypeName","pathNode":{"id":6536,"name":"Vehicle","nameLocations":["1360:7:17"],"nodeType":"IdentifierPath","referencedDeclaration":6507,"src":"1360:7:17"},"referencedDeclaration":6507,"src":"1360:7:17","typeDescriptions":{"typeIdentifier":"t_struct$_Vehicle_$6507_storage_ptr","typeString":"struct InsuranceCore.Vehicle"}}},"visibility":"public"},{"constant":false,"functionSelector":"744007fd","id":6544,"mutability":"mutable","name":"vehiclePhotos","nameLocation":"1430:13:17","nodeType":"VariableDeclaration","scope":7145,"src":"1390:53:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_VehiclePhotos_$6486_storage_$","typeString":"mapping(string => struct InsuranceCore.VehiclePhotos)"},"typeName":{"id":6543,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6540,"name":"string","nodeType":"ElementaryTypeName","src":"1398:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"nodeType":"Mapping","src":"1390:32:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_VehiclePhotos_$6486_storage_$","typeString":"mapping(string => struct InsuranceCore.VehiclePhotos)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6542,"nodeType":"UserDefinedTypeName","pathNode":{"id":6541,"name":"VehiclePhotos","nameLocations":["1408:13:17"],"nodeType":"IdentifierPath","referencedDeclaration":6486,"src":"1408:13:17"},"referencedDeclaration":6486,"src":"1408:13:17","typeDescriptions":{"typeIdentifier":"t_struct$_VehiclePhotos_$6486_storage_ptr","typeString":"struct InsuranceCore.VehiclePhotos"}}},"visibility":"public"},{"constant":false,"functionSelector":"d3e89483","id":6549,"mutability":"mutable","name":"policies","nameLocation":"1483:8:17","nodeType":"VariableDeclaration","scope":7145,"src":"1449:42:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Policy_$6519_storage_$","typeString":"mapping(uint256 => struct InsuranceCore.Policy)"},"typeName":{"id":6548,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6545,"name":"uint256","nodeType":"ElementaryTypeName","src":"1457:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1449:26:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Policy_$6519_storage_$","typeString":"mapping(uint256 => struct InsuranceCore.Policy)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6547,"nodeType":"UserDefinedTypeName","pathNode":{"id":6546,"name":"Policy","nameLocations":["1468:6:17"],"nodeType":"IdentifierPath","referencedDeclaration":6519,"src":"1468:6:17"},"referencedDeclaration":6519,"src":"1468:6:17","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6519_storage_ptr","typeString":"struct InsuranceCore.Policy"}}},"visibility":"public"},{"constant":false,"functionSelector":"a888c2cd","id":6554,"mutability":"mutable","name":"claims","nameLocation":"1530:6:17","nodeType":"VariableDeclaration","scope":7145,"src":"1497:39:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Claim_$6534_storage_$","typeString":"mapping(uint256 => struct InsuranceCore.Claim)"},"typeName":{"id":6553,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6550,"name":"uint256","nodeType":"ElementaryTypeName","src":"1505:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1497:25:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Claim_$6534_storage_$","typeString":"mapping(uint256 => struct InsuranceCore.Claim)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6552,"nodeType":"UserDefinedTypeName","pathNode":{"id":6551,"name":"Claim","nameLocations":["1516:5:17"],"nodeType":"IdentifierPath","referencedDeclaration":6534,"src":"1516:5:17"},"referencedDeclaration":6534,"src":"1516:5:17","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$6534_storage_ptr","typeString":"struct InsuranceCore.Claim"}}},"visibility":"public"},{"constant":false,"functionSelector":"fedda0e4","id":6559,"mutability":"mutable","name":"coverageLimits","nameLocation":"1601:14:17","nodeType":"VariableDeclaration","scope":7145,"src":"1542:73:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_VerificationTier_$6389_$_t_uint256_$","typeString":"mapping(enum IVehicleShield.VerificationTier => uint256)"},"typeName":{"id":6558,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6556,"nodeType":"UserDefinedTypeName","pathNode":{"id":6555,"name":"IVehicleShield.VerificationTier","nameLocations":["1550:14:17","1565:16:17"],"nodeType":"IdentifierPath","referencedDeclaration":6389,"src":"1550:31:17"},"referencedDeclaration":6389,"src":"1550:31:17","typeDescriptions":{"typeIdentifier":"t_enum$_VerificationTier_$6389","typeString":"enum IVehicleShield.VerificationTier"}},"nodeType":"Mapping","src":"1542:51:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_VerificationTier_$6389_$_t_uint256_$","typeString":"mapping(enum IVehicleShield.VerificationTier => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6557,"name":"uint256","nodeType":"ElementaryTypeName","src":"1585:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"id":6562,"mutability":"mutable","name":"_nextClaimId","nameLocation":"1642:12:17","nodeType":"VariableDeclaration","scope":7145,"src":"1626:32:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6560,"name":"uint256","nodeType":"ElementaryTypeName","src":"1626:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":6561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1657:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"anonymous":false,"eventSelector":"ac60a133922621409c80ab6958b2718dc64d275887639e7694b2aa0d87cbcb02","id":6571,"name":"VehicleRegistered","nameLocation":"1675:17:17","nodeType":"EventDefinition","parameters":{"id":6570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6564,"indexed":false,"mutability":"mutable","name":"regPlate","nameLocation":"1700:8:17","nodeType":"VariableDeclaration","scope":6571,"src":"1693:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6563,"name":"string","nodeType":"ElementaryTypeName","src":"1693:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6566,"indexed":false,"mutability":"mutable","name":"owner","nameLocation":"1718:5:17","nodeType":"VariableDeclaration","scope":6571,"src":"1710:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6565,"name":"address","nodeType":"ElementaryTypeName","src":"1710:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6569,"indexed":false,"mutability":"mutable","name":"tier","nameLocation":"1757:4:17","nodeType":"VariableDeclaration","scope":6571,"src":"1725:36:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_VerificationTier_$6389","typeString":"enum IVehicleShield.VerificationTier"},"typeName":{"id":6568,"nodeType":"UserDefinedTypeName","pathNode":{"id":6567,"name":"IVehicleShield.VerificationTier","nameLocations":["1725:14:17","1740:16:17"],"nodeType":"IdentifierPath","referencedDeclaration":6389,"src":"1725:31:17"},"referencedDeclaration":6389,"src":"1725:31:17","typeDescriptions":{"typeIdentifier":"t_enum$_VerificationTier_$6389","typeString":"enum IVehicleShield.VerificationTier"}},"visibility":"internal"}],"src":"1692:70:17"},"src":"1669:94:17"},{"anonymous":false,"eventSelector":"1d11784494a8ce3357eaab9e9cf4439a22dd7b03aefaea16088e21e4bb2cfeac","id":6577,"name":"PhotosUploaded","nameLocation":"1774:14:17","nodeType":"EventDefinition","parameters":{"id":6576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6573,"indexed":false,"mutability":"mutable","name":"regPlate","nameLocation":"1796:8:17","nodeType":"VariableDeclaration","scope":6577,"src":"1789:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6572,"name":"string","nodeType":"ElementaryTypeName","src":"1789:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6575,"indexed":false,"mutability":"mutable","name":"uploadDate","nameLocation":"1814:10:17","nodeType":"VariableDeclaration","scope":6577,"src":"1806:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6574,"name":"uint256","nodeType":"ElementaryTypeName","src":"1806:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1788:37:17"},"src":"1768:58:17"},{"anonymous":false,"eventSelector":"16199dc2004744f89cfe5bc916b084fff79f2e7be10b3a6be2240e97846fb408","id":6584,"name":"VerificationStatusUpdated","nameLocation":"1837:25:17","nodeType":"EventDefinition","parameters":{"id":6583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6579,"indexed":false,"mutability":"mutable","name":"regPlate","nameLocation":"1870:8:17","nodeType":"VariableDeclaration","scope":6584,"src":"1863:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6578,"name":"string","nodeType":"ElementaryTypeName","src":"1863:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6582,"indexed":false,"mutability":"mutable","name":"status","nameLocation":"1899:6:17","nodeType":"VariableDeclaration","scope":6584,"src":"1880:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_VerificationStatus_$6469","typeString":"enum InsuranceCore.VerificationStatus"},"typeName":{"id":6581,"nodeType":"UserDefinedTypeName","pathNode":{"id":6580,"name":"VerificationStatus","nameLocations":["1880:18:17"],"nodeType":"IdentifierPath","referencedDeclaration":6469,"src":"1880:18:17"},"referencedDeclaration":6469,"src":"1880:18:17","typeDescriptions":{"typeIdentifier":"t_enum$_VerificationStatus_$6469","typeString":"enum InsuranceCore.VerificationStatus"}},"visibility":"internal"}],"src":"1862:44:17"},"src":"1831:76:17"},{"anonymous":false,"eventSelector":"21d0178f0cde2aed24022db30651dabafb4bbe431fb787fbc92113304d8e3549","id":6592,"name":"PolicyCreated","nameLocation":"1918:13:17","nodeType":"EventDefinition","parameters":{"id":6591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6586,"indexed":true,"mutability":"mutable","name":"policyId","nameLocation":"1948:8:17","nodeType":"VariableDeclaration","scope":6592,"src":"1932:24:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6585,"name":"uint256","nodeType":"ElementaryTypeName","src":"1932:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6588,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"1974:5:17","nodeType":"VariableDeclaration","scope":6592,"src":"1958:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6587,"name":"address","nodeType":"ElementaryTypeName","src":"1958:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6590,"indexed":false,"mutability":"mutable","name":"vehicleId","nameLocation":"1988:9:17","nodeType":"VariableDeclaration","scope":6592,"src":"1981:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6589,"name":"string","nodeType":"ElementaryTypeName","src":"1981:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1931:67:17"},"src":"1912:87:17"},{"anonymous":false,"eventSelector":"675e9cd1ef5a9bb6971c9f1099eced3c6607be0407bc871bc50a8a7b36832e74","id":6598,"name":"ClaimSubmitted","nameLocation":"2010:14:17","nodeType":"EventDefinition","parameters":{"id":6597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6594,"indexed":true,"mutability":"mutable","name":"claimId","nameLocation":"2041:7:17","nodeType":"VariableDeclaration","scope":6598,"src":"2025:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6593,"name":"uint256","nodeType":"ElementaryTypeName","src":"2025:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6596,"indexed":true,"mutability":"mutable","name":"policyId","nameLocation":"2066:8:17","nodeType":"VariableDeclaration","scope":6598,"src":"2050:24:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6595,"name":"uint256","nodeType":"ElementaryTypeName","src":"2050:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2024:51:17"},"src":"2004:72:17"},{"anonymous":false,"eventSelector":"d4203892740c26c8184cfb101077c87ccf2d01beaf6aef0c250ab43bb43df202","id":6604,"name":"ClaimProcessed","nameLocation":"2087:14:17","nodeType":"EventDefinition","parameters":{"id":6603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6600,"indexed":true,"mutability":"mutable","name":"claimId","nameLocation":"2118:7:17","nodeType":"VariableDeclaration","scope":6604,"src":"2102:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6599,"name":"uint256","nodeType":"ElementaryTypeName","src":"2102:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6602,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"2132:8:17","nodeType":"VariableDeclaration","scope":6604,"src":"2127:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6601,"name":"bool","nodeType":"ElementaryTypeName","src":"2127:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2101:40:17"},"src":"2081:61:17"},{"anonymous":false,"eventSelector":"b0727183796e52c5bb00a257c1eb36d8e94dbee5d6d87e259287e3372ae39ace","id":6610,"name":"ClaimPaid","nameLocation":"2153:9:17","nodeType":"EventDefinition","parameters":{"id":6609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6606,"indexed":true,"mutability":"mutable","name":"claimId","nameLocation":"2179:7:17","nodeType":"VariableDeclaration","scope":6610,"src":"2163:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6605,"name":"uint256","nodeType":"ElementaryTypeName","src":"2163:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6608,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2196:6:17","nodeType":"VariableDeclaration","scope":6610,"src":"2188:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6607,"name":"uint256","nodeType":"ElementaryTypeName","src":"2188:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2162:41:17"},"src":"2147:57:17"},{"body":{"id":6657,"nodeType":"Block","src":"2301:362:17","statements":[{"expression":{"id":6625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6621,"name":"policyNFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6462,"src":"2311:9:17","typeDescriptions":{"typeIdentifier":"t_contract$_IPolicyNFT_$6450","typeString":"contract IPolicyNFT"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6623,"name":"_policyNFTAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6612,"src":"2334:17:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6622,"name":"IPolicyNFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6450,"src":"2323:10:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IPolicyNFT_$6450_$","typeString":"type(contract IPolicyNFT)"}},"id":6624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2323:29:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IPolicyNFT_$6450","typeString":"contract IPolicyNFT"}},"src":"2311:41:17","typeDescriptions":{"typeIdentifier":"t_contract$_IPolicyNFT_$6450","typeString":"contract IPolicyNFT"}},"id":6626,"nodeType":"ExpressionStatement","src":"2311:41:17"},{"expression":{"id":6631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6627,"name":"riskAssessment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6465,"src":"2362:14:17","typeDescriptions":{"typeIdentifier":"t_contract$_IRiskAssessment_$6421","typeString":"contract IRiskAssessment"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6629,"name":"_riskAssessmentAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6614,"src":"2395:22:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6628,"name":"IRiskAssessment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6421,"src":"2379:15:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IRiskAssessment_$6421_$","typeString":"type(contract IRiskAssessment)"}},"id":6630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2379:39:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IRiskAssessment_$6421","typeString":"contract IRiskAssessment"}},"src":"2362:56:17","typeDescriptions":{"typeIdentifier":"t_contract$_IRiskAssessment_$6421","typeString":"contract IRiskAssessment"}},"id":6632,"nodeType":"ExpressionStatement","src":"2362:56:17"},{"expression":{"id":6639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6633,"name":"coverageLimits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6559,"src":"2437:14:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_VerificationTier_$6389_$_t_uint256_$","typeString":"mapping(enum IVehicleShield.VerificationTier => uint256)"}},"id":6637,"indexExpression":{"expression":{"expression":{"id":6634,"name":"IVehicleShield","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6390,"src":"2452:14:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IVehicleShield_$6390_$","typeString":"type(contract IVehicleShield)"}},"id":6635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2467:16:17","memberName":"VerificationTier","nodeType":"MemberAccess","referencedDeclaration":6389,"src":"2452:31:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_VerificationTier_$6389_$","typeString":"type(enum IVehicleShield.VerificationTier)"}},"id":6636,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2484:5:17","memberName":"Basic","nodeType":"MemberAccess","referencedDeclaration":6386,"src":"2452:37:17","typeDescriptions":{"typeIdentifier":"t_enum$_VerificationTier_$6389","typeString":"enum IVehicleShield.VerificationTier"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2437:53:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"302e3035","id":6638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2493:10:17","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_50000000000000000_by_1","typeString":"int_const 50000000000000000"},"value":"0.05"},"src":"2437:66:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6640,"nodeType":"ExpressionStatement","src":"2437:66:17"},{"expression":{"id":6647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6641,"name":"coverageLimits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6559,"src":"2513:14:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_VerificationTier_$6389_$_t_uint256_$","typeString":"mapping(enum IVehicleShield.VerificationTier => uint256)"}},"id":6645,"indexExpression":{"expression":{"expression":{"id":6642,"name":"IVehicleShield","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6390,"src":"2528:14:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IVehicleShield_$6390_$","typeString":"type(contract IVehicleShield)"}},"id":6643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2543:16:17","memberName":"VerificationTier","nodeType":"MemberAccess","referencedDeclaration":6389,"src":"2528:31:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_VerificationTier_$6389_$","typeString":"type(enum IVehicleShield.VerificationTier)"}},"id":6644,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2560:6:17","memberName":"Medium","nodeType":"MemberAccess","referencedDeclaration":6387,"src":"2528:38:17","typeDescriptions":{"typeIdentifier":"t_enum$_VerificationTier_$6389","typeString":"enum IVehicleShield.VerificationTier"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2513:54:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"302e31","id":6646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2570:9:17","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000_by_1","typeString":"int_const 100000000000000000"},"value":"0.1"},"src":"2513:66:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6648,"nodeType":"ExpressionStatement","src":"2513:66:17"},{"expression":{"id":6655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6649,"name":"coverageLimits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6559,"src":"2589:14:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_VerificationTier_$6389_$_t_uint256_$","typeString":"mapping(enum IVehicleShield.VerificationTier => uint256)"}},"id":6653,"indexExpression":{"expression":{"expression":{"id":6650,"name":"IVehicleShield","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6390,"src":"2604:14:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IVehicleShield_$6390_$","typeString":"type(contract IVehicleShield)"}},"id":6651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2619:16:17","memberName":"VerificationTier","nodeType":"MemberAccess","referencedDeclaration":6389,"src":"2604:31:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_VerificationTier_$6389_$","typeString":"type(enum IVehicleShield.VerificationTier)"}},"id":6652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2636:7:17","memberName":"Premium","nodeType":"MemberAccess","referencedDeclaration":6388,"src":"2604:39:17","typeDescriptions":{"typeIdentifier":"t_enum$_VerificationTier_$6389","typeString":"enum IVehicleShield.VerificationTier"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2589:55:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"302e32","id":6654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:9:17","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_200000000000000000_by_1","typeString":"int_const 200000000000000000"},"value":"0.2"},"src":"2589:67:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6656,"nodeType":"ExpressionStatement","src":"2589:67:17"}]},"id":6658,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":6617,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2289:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2293:6:17","memberName":"sender","nodeType":"MemberAccess","src":"2289:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":6619,"kind":"baseConstructorSpecifier","modifierName":{"id":6616,"name":"Ownable","nameLocations":["2281:7:17"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"2281:7:17"},"nodeType":"ModifierInvocation","src":"2281:19:17"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":6615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6612,"mutability":"mutable","name":"_policyNFTAddress","nameLocation":"2230:17:17","nodeType":"VariableDeclaration","scope":6658,"src":"2222:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6611,"name":"address","nodeType":"ElementaryTypeName","src":"2222:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6614,"mutability":"mutable","name":"_riskAssessmentAddress","nameLocation":"2257:22:17","nodeType":"VariableDeclaration","scope":6658,"src":"2249:30:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6613,"name":"address","nodeType":"ElementaryTypeName","src":"2249:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2221:59:17"},"returnParameters":{"id":6620,"nodeType":"ParameterList","parameters":[],"src":"2301:0:17"},"scope":7145,"src":"2210:453:17","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6746,"nodeType":"Block","src":"2938:866:17","statements":[{"expression":{"arguments":[{"id":6682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2956:33:17","subExpression":{"expression":{"baseExpression":{"id":6678,"name":"vehicles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6539,"src":"2957:8:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_Vehicle_$6507_storage_$","typeString":"mapping(string memory => struct InsuranceCore.Vehicle storage ref)"}},"id":6680,"indexExpression":{"id":6679,"name":"_regPlate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6660,"src":"2966:9:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2957:19:17","typeDescriptions":{"typeIdentifier":"t_struct$_Vehicle_$6507_storage","typeString":"struct InsuranceCore.Vehicle storage ref"}},"id":6681,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2977:12:17","memberName":"isRegistered","nodeType":"MemberAccess","referencedDeclaration":6506,"src":"2957:32:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"56656869636c6520616c72656164792072656769737465726564","id":6683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2991:28:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_6a1fe13f1cbfc4e94e476d484fdbff96a49a9eed66b275148b49e4ed57d3a6bc","typeString":"literal_string \"Vehicle already registered\""},"value":"Vehicle already registered"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6a1fe13f1cbfc4e94e476d484fdbff96a49a9eed66b275148b49e4ed57d3a6bc","typeString":"literal_string \"Vehicle already registered\""}],"id":6677,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2948:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2948:72:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6685,"nodeType":"ExpressionStatement","src":"2948:72:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6687,"name":"_year","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6666,"src":"3038:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6688,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3047:5:17","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3053:9:17","memberName":"timestamp","nodeType":"MemberAccess","src":"3047:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"333635","id":6690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3065:8:17","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_31536000_by_1","typeString":"int_const 31536000"},"value":"365"},"src":"3047:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31393730","id":6692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3076:4:17","typeDescriptions":{"typeIdentifier":"t_rational_1970_by_1","typeString":"int_const 1970"},"value":"1970"},"src":"3047:33:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3038:42:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642079656172","id":6695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3082:14:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_247169d39dec5a8666f09ef6f1e26495735cec7758e82ed149c983ef50cdbcf1","typeString":"literal_string \"Invalid year\""},"value":"Invalid year"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_247169d39dec5a8666f09ef6f1e26495735cec7758e82ed149c983ef50cdbcf1","typeString":"literal_string \"Invalid year\""}],"id":6686,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3030:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3030:67:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6697,"nodeType":"ExpressionStatement","src":"3030:67:17"},{"assignments":[6702,null],"declarations":[{"constant":false,"id":6702,"mutability":"mutable","name":"tier","nameLocation":"3150:4:17","nodeType":"VariableDeclaration","scope":6746,"src":"3118:36:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_VerificationTier_$6389","typeString":"enum IVehicleShield.VerificationTier"},"typeName":{"id":6701,"nodeType":"UserDefinedTypeName","pathNode":{"id":6700,"name":"IVehicleShield.VerificationTier","nameLocations":["3118:14:17","3133:16:17"],"nodeType":"IdentifierPath","referencedDeclaration":6389,"src":"3118:31:17"},"referencedDeclaration":6389,"src":"3118:31:17","typeDescriptions":{"typeIdentifier":"t_enum$_VerificationTier_$6389","typeString":"enum IVehicleShield.VerificationTier"}},"visibility":"internal"},null],"id":6719,"initialValue":{"arguments":[{"id":6705,"name":"_regPlate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6660,"src":"3202:9:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6706,"name":"_baseValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6668,"src":"3225:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6707,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3249:5:17","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3255:9:17","memberName":"timestamp","nodeType":"MemberAccess","src":"3249:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"333635","id":6709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3267:8:17","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_31536000_by_1","typeString":"int_const 31536000"},"value":"365"},"src":"3249:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31393730","id":6711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3278:4:17","typeDescriptions":{"typeIdentifier":"t_rational_1970_by_1","typeString":"int_const 1970"},"value":"1970"},"src":"3249:33:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6713,"name":"_year","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6666,"src":"3285:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3249:41:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6715,"name":"_mileage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6670,"src":"3304:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6716,"name":"_condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6672,"src":"3326:10:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":6717,"name":"_hasAccidentHistory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6674,"src":"3350:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6703,"name":"riskAssessment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6465,"src":"3160:14:17","typeDescriptions":{"typeIdentifier":"t_contract$_IRiskAssessment_$6421","typeString":"contract IRiskAssessment"}},"id":6704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3175:13:17","memberName":"assessVehicle","nodeType":"MemberAccess","referencedDeclaration":6410,"src":"3160:28:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bool_$returns$_t_enum$_VerificationTier_$6389_$_t_uint256_$","typeString":"function (string memory,uint256,uint256,uint256,uint8,bool) external returns (enum IVehicleShield.VerificationTier,uint256)"}},"id":6718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3160:219:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_enum$_VerificationTier_$6389_$_t_uint256_$","typeString":"tuple(enum IVehicleShield.VerificationTier,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3117:262:17"},{"expression":{"id":6737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6720,"name":"vehicles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6539,"src":"3390:8:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_Vehicle_$6507_storage_$","typeString":"mapping(string memory => struct InsuranceCore.Vehicle storage ref)"}},"id":6722,"indexExpression":{"id":6721,"name":"_regPlate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6660,"src":"3399:9:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3390:19:17","typeDescriptions":{"typeIdentifier":"t_struct$_Vehicle_$6507_storage","typeString":"struct InsuranceCore.Vehicle storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6724,"name":"_regPlate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6660,"src":"3444:9:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6725,"name":"_make","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6662,"src":"3473:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6726,"name":"_model","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6664,"src":"3499:6:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6727,"name":"_year","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6666,"src":"3525:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6728,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3551:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3555:6:17","memberName":"sender","nodeType":"MemberAccess","src":"3551:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":6730,"name":"VerificationStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6469,"src":"3583:18:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_VerificationStatus_$6469_$","typeString":"type(enum InsuranceCore.VerificationStatus)"}},"id":6731,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3602:7:17","memberName":"Pending","nodeType":"MemberAccess","referencedDeclaration":6466,"src":"3583:26:17","typeDescriptions":{"typeIdentifier":"t_enum$_VerificationStatus_$6469","typeString":"enum InsuranceCore.VerificationStatus"}},{"id":6732,"name":"tier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6702,"src":"3629:4:17","typeDescriptions":{"typeIdentifier":"t_enum$_VerificationTier_$6389","typeString":"enum IVehicleShield.VerificationTier"}},{"expression":{"id":6733,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3669:5:17","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3675:9:17","memberName":"timestamp","nodeType":"MemberAccess","src":"3669:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":6735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3712:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_VerificationStatus_$6469","typeString":"enum InsuranceCore.VerificationStatus"},{"typeIdentifier":"t_enum$_VerificationTier_$6389","typeString":"enum IVehicleShield.VerificationTier"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":6723,"name":"Vehicle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6507,"src":"3412:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Vehicle_$6507_storage_ptr_$","typeString":"type(struct InsuranceCore.Vehicle storage pointer)"}},"id":6736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["3434:8:17","3467:4:17","3492:5:17","3519:4:17","3544:5:17","3575:6:17","3623:4:17","3647:20:17","3698:12:17"],"names":["regPlate","make","model","year","owner","status","tier","lastVerificationDate","isRegistered"],"nodeType":"FunctionCall","src":"3412:315:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Vehicle_$6507_memory_ptr","typeString":"struct InsuranceCore.Vehicle memory"}},"src":"3390:337:17","typeDescriptions":{"typeIdentifier":"t_struct$_Vehicle_$6507_storage","typeString":"struct InsuranceCore.Vehicle storage ref"}},"id":6738,"nodeType":"ExpressionStatement","src":"3390:337:17"},{"eventCall":{"arguments":[{"id":6740,"name":"_regPlate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6660,"src":"3769:9:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":6741,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3780:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3784:6:17","memberName":"sender","nodeType":"MemberAccess","src":"3780:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6743,"name":"tier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6702,"src":"3792:4:17","typeDescriptions":{"typeIdentifier":"t_enum$_VerificationTier_$6389","typeString":"enum IVehicleShield.VerificationTier"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_VerificationTier_$6389","typeString":"enum IVehicleShield.VerificationTier"}],"id":6739,"name":"VehicleRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6571,"src":"3751:17:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_enum$_VerificationTier_$6389_$returns$__$","typeString":"function (string memory,address,enum IVehicleShield.VerificationTier)"}},"id":6744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3751:46:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6745,"nodeType":"EmitStatement","src":"3746:51:17"}]},"functionSelector":"f21ad98b","id":6747,"implemented":true,"kind":"function","modifiers":[],"name":"registerVehicle","nameLocation":"2678:15:17","nodeType":"FunctionDefinition","parameters":{"id":6675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6660,"mutability":"mutable","name":"_regPlate","nameLocation":"2717:9:17","nodeType":"VariableDeclaration","scope":6747,"src":"2703:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6659,"name":"string","nodeType":"ElementaryTypeName","src":"2703:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6662,"mutability":"mutable","name":"_make","nameLocation":"2750:5:17","nodeType":"VariableDeclaration","scope":6747,"src":"2736:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6661,"name":"string","nodeType":"ElementaryTypeName","src":"2736:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6664,"mutability":"mutable","name":"_model","nameLocation":"2779:6:17","nodeType":"VariableDeclaration","scope":6747,"src":"2765:20:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6663,"name":"string","nodeType":"ElementaryTypeName","src":"2765:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6666,"mutability":"mutable","name":"_year","nameLocation":"2803:5:17","nodeType":"VariableDeclaration","scope":6747,"src":"2795:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6665,"name":"uint256","nodeType":"ElementaryTypeName","src":"2795:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6668,"mutability":"mutable","name":"_baseValue","nameLocation":"2826:10:17","nodeType":"VariableDeclaration","scope":6747,"src":"2818:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6667,"name":"uint256","nodeType":"ElementaryTypeName","src":"2818:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6670,"mutability":"mutable","name":"_mileage","nameLocation":"2854:8:17","nodeType":"VariableDeclaration","scope":6747,"src":"2846:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6669,"name":"uint256","nodeType":"ElementaryTypeName","src":"2846:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6672,"mutability":"mutable","name":"_condition","nameLocation":"2878:10:17","nodeType":"VariableDeclaration","scope":6747,"src":"2872:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6671,"name":"uint8","nodeType":"ElementaryTypeName","src":"2872:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":6674,"mutability":"mutable","name":"_hasAccidentHistory","nameLocation":"2903:19:17","nodeType":"VariableDeclaration","scope":6747,"src":"2898:24:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6673,"name":"bool","nodeType":"ElementaryTypeName","src":"2898:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2693:235:17"},"returnParameters":{"id":6676,"nodeType":"ParameterList","parameters":[],"src":"2938:0:17"},"scope":7145,"src":"2669:1135:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6806,"nodeType":"Block","src":"4104:604:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":6765,"name":"vehicles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6539,"src":"4122:8:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_Vehicle_$6507_storage_$","typeString":"mapping(string memory => struct InsuranceCore.Vehicle storage ref)"}},"id":6767,"indexExpression":{"id":6766,"name":"_regPlate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6749,"src":"4131:9:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4122:19:17","typeDescriptions":{"typeIdentifier":"t_struct$_Vehicle_$6507_storage","typeString":"struct InsuranceCore.Vehicle storage ref"}},"id":6768,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4142:5:17","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":6496,"src":"4122:25:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":6769,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4151:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4155:6:17","memberName":"sender","nodeType":"MemberAccess","src":"4151:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4122:39:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f742076656869636c65206f776e6572","id":6772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4163:19:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c1a493b215ee9743b1073772936fe1708d9ad9a54e420311fd253597e9010212","typeString":"literal_string \"Not vehicle owner\""},"value":"Not vehicle owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c1a493b215ee9743b1073772936fe1708d9ad9a54e420311fd253597e9010212","typeString":"literal_string \"Not vehicle owner\""}],"id":6764,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4114:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4114:69:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6774,"nodeType":"ExpressionStatement","src":"4114:69:17"},{"expression":{"arguments":[{"id":6780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4201:36:17","subExpression":{"expression":{"baseExpression":{"id":6776,"name":"vehiclePhotos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6544,"src":"4202:13:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_VehiclePhotos_$6486_storage_$","typeString":"mapping(string memory => struct InsuranceCore.VehiclePhotos storage ref)"}},"id":6778,"indexExpression":{"id":6777,"name":"_regPlate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6749,"src":"4216:9:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4202:24:17","typeDescriptions":{"typeIdentifier":"t_struct$_VehiclePhotos_$6486_storage","typeString":"struct InsuranceCore.VehiclePhotos storage ref"}},"id":6779,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4227:10:17","memberName":"isComplete","nodeType":"MemberAccess","referencedDeclaration":6485,"src":"4202:35:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50686f746f7320616c72656164792075706c6f61646564","id":6781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4239:25:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_d4641406100510d0ad93d6c220da4cef8ded35e87ec0657f527e262652d1c942","typeString":"literal_string \"Photos already uploaded\""},"value":"Photos already uploaded"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d4641406100510d0ad93d6c220da4cef8ded35e87ec0657f527e262652d1c942","typeString":"literal_string \"Photos already uploaded\""}],"id":6775,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4193:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4193:72:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6783,"nodeType":"ExpressionStatement","src":"4193:72:17"},{"expression":{"id":6798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6784,"name":"vehiclePhotos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6544,"src":"4284:13:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_VehiclePhotos_$6486_storage_$","typeString":"mapping(string memory => struct InsuranceCore.VehiclePhotos storage ref)"}},"id":6786,"indexExpression":{"id":6785,"name":"_regPlate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6749,"src":"4298:9:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4284:24:17","typeDescriptions":{"typeIdentifier":"t_struct$_VehiclePhotos_$6486_storage","typeString":"struct InsuranceCore.VehiclePhotos storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6788,"name":"_frontHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6751,"src":"4350:10:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6789,"name":"_backHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6753,"src":"4384:9:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6790,"name":"_leftHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6755,"src":"4417:9:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6791,"name":"_rightHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6757,"src":"4451:10:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6792,"name":"_mirrorLeftHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6759,"src":"4491:15:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6793,"name":"_mirrorRightHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6761,"src":"4537:16:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":6794,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4579:5:17","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4585:9:17","memberName":"timestamp","nodeType":"MemberAccess","src":"4579:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":6796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4620:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":6787,"name":"VehiclePhotos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6486,"src":"4311:13:17","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_VehiclePhotos_$6486_storage_ptr_$","typeString":"type(struct InsuranceCore.VehiclePhotos storage pointer)"}},"id":6797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["4339:9:17","4374:8:17","4407:8:17","4440:9:17","4475:14:17","4520:15:17","4567:10:17","4608:10:17"],"names":["frontHash","backHash","leftHash","rightHash","mirrorLeftHash","mirrorRightHash","uploadDate","isComplete"],"nodeType":"FunctionCall","src":"4311:324:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_VehiclePhotos_$6486_memory_ptr","typeString":"struct InsuranceCore.VehiclePhotos memory"}},"src":"4284:351:17","typeDescriptions":{"typeIdentifier":"t_struct$_VehiclePhotos_$6486_storage","typeString":"struct InsuranceCore.VehiclePhotos storage ref"}},"id":6799,"nodeType":"ExpressionStatement","src":"4284:351:17"},{"eventCall":{"arguments":[{"id":6801,"name":"_regPlate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6749,"src":"4674:9:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":6802,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4685:5:17","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4691:9:17","memberName":"timestamp","nodeType":"MemberAccess","src":"4685:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6800,"name":"PhotosUploaded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6577,"src":"4659:14:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (string memory,uint256)"}},"id":6804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4659:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6805,"nodeType":"EmitStatement","src":"4654:47:17"}]},"functionSelector":"7daaaaf3","id":6807,"implemented":true,"kind":"function","modifiers":[],"name":"uploadVehiclePhotos","nameLocation":"3823:19:17","nodeType":"FunctionDefinition","parameters":{"id":6762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6749,"mutability":"mutable","name":"_regPlate","nameLocation":"3866:9:17","nodeType":"VariableDeclaration","scope":6807,"src":"3852:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6748,"name":"string","nodeType":"ElementaryTypeName","src":"3852:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6751,"mutability":"mutable","name":"_frontHash","nameLocation":"3899:10:17","nodeType":"VariableDeclaration","scope":6807,"src":"3885:24:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6750,"name":"string","nodeType":"ElementaryTypeName","src":"3885:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6753,"mutability":"mutable","name":"_backHash","nameLocation":"3933:9:17","nodeType":"VariableDeclaration","scope":6807,"src":"3919:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6752,"name":"string","nodeType":"ElementaryTypeName","src":"3919:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6755,"mutability":"mutable","name":"_leftHash","nameLocation":"3966:9:17","nodeType":"VariableDeclaration","scope":6807,"src":"3952:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6754,"name":"string","nodeType":"ElementaryTypeName","src":"3952:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6757,"mutability":"mutable","name":"_rightHash","nameLocation":"3999:10:17","nodeType":"VariableDeclaration","scope":6807,"src":"3985:24:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6756,"name":"string","nodeType":"ElementaryTypeName","src":"3985:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6759,"mutability":"mutable","name":"_mirrorLeftHash","nameLocation":"4033:15:17","nodeType":"VariableDeclaration","scope":6807,"src":"4019:29:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6758,"name":"string","nodeType":"ElementaryTypeName","src":"4019:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6761,"mutability":"mutable","name":"_mirrorRightHash","nameLocation":"4072:16:17","nodeType":"VariableDeclaration","scope":6807,"src":"4058:30:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6760,"name":"string","nodeType":"ElementaryTypeName","src":"4058:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3842:252:17"},"returnParameters":{"id":6763,"nodeType":"ParameterList","parameters":[],"src":"4104:0:17"},"scope":7145,"src":"3814:894:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6853,"nodeType":"Block","src":"4846:353:17","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":6818,"name":"vehicles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6539,"src":"4864:8:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_Vehicle_$6507_storage_$","typeString":"mapping(string memory => struct InsuranceCore.Vehicle storage ref)"}},"id":6820,"indexExpression":{"id":6819,"name":"_regPlate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6809,"src":"4873:9:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4864:19:17","typeDescriptions":{"typeIdentifier":"t_struct$_Vehicle_$6507_storage","typeString":"struct InsuranceCore.Vehicle storage ref"}},"id":6821,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4884:12:17","memberName":"isRegistered","nodeType":"MemberAccess","referencedDeclaration":6506,"src":"4864:32:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"56656869636c65206e6f742072656769737465726564","id":6822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4898:24:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_a91c9f81e9feb710f18005dba909bf9f6dc78a9b082739b042458d7a998ca6ab","typeString":"literal_string \"Vehicle not registered\""},"value":"Vehicle not registered"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a91c9f81e9feb710f18005dba909bf9f6dc78a9b082739b042458d7a998ca6ab","typeString":"literal_string \"Vehicle not registered\""}],"id":6817,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4856:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4856:67:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6824,"nodeType":"ExpressionStatement","src":"4856:67:17"},{"expression":{"arguments":[{"expression":{"baseExpression":{"id":6826,"name":"vehiclePhotos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6544,"src":"4941:13:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_VehiclePhotos_$6486_storage_$","typeString":"mapping(string memory => struct InsuranceCore.VehiclePhotos storage ref)"}},"id":6828,"indexExpression":{"id":6827,"name":"_regPlate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6809,"src":"4955:9:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4941:24:17","typeDescriptions":{"typeIdentifier":"t_struct$_VehiclePhotos_$6486_storage","typeString":"struct InsuranceCore.VehiclePhotos storage ref"}},"id":6829,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4966:10:17","memberName":"isComplete","nodeType":"MemberAccess","referencedDeclaration":6485,"src":"4941:35:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50686f746f73206e6f742075706c6f61646564","id":6830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4978:21:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_ff9ad865b57974cd8b3c520410a7fb45d1a1d122e3478b20a5b20d59fc540b67","typeString":"literal_string \"Photos not uploaded\""},"value":"Photos not uploaded"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ff9ad865b57974cd8b3c520410a7fb45d1a1d122e3478b20a5b20d59fc540b67","typeString":"literal_string \"Photos not uploaded\""}],"id":6825,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4933:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4933:67:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6832,"nodeType":"ExpressionStatement","src":"4933:67:17"},{"expression":{"id":6838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":6833,"name":"vehicles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6539,"src":"5019:8:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_Vehicle_$6507_storage_$","typeString":"mapping(string memory => struct InsuranceCore.Vehicle storage ref)"}},"id":6835,"indexExpression":{"id":6834,"name":"_regPlate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6809,"src":"5028:9:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5019:19:17","typeDescriptions":{"typeIdentifier":"t_struct$_Vehicle_$6507_storage","typeString":"struct InsuranceCore.Vehicle storage ref"}},"id":6836,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5039:6:17","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":6499,"src":"5019:26:17","typeDescriptions":{"typeIdentifier":"t_enum$_VerificationStatus_$6469","typeString":"enum InsuranceCore.VerificationStatus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6837,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6812,"src":"5048:7:17","typeDescriptions":{"typeIdentifier":"t_enum$_VerificationStatus_$6469","typeString":"enum InsuranceCore.VerificationStatus"}},"src":"5019:36:17","typeDescriptions":{"typeIdentifier":"t_enum$_VerificationStatus_$6469","typeString":"enum InsuranceCore.VerificationStatus"}},"id":6839,"nodeType":"ExpressionStatement","src":"5019:36:17"},{"expression":{"id":6846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":6840,"name":"vehicles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6539,"src":"5065:8:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_Vehicle_$6507_storage_$","typeString":"mapping(string memory => struct InsuranceCore.Vehicle storage ref)"}},"id":6842,"indexExpression":{"id":6841,"name":"_regPlate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6809,"src":"5074:9:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5065:19:17","typeDescriptions":{"typeIdentifier":"t_struct$_Vehicle_$6507_storage","typeString":"struct InsuranceCore.Vehicle storage ref"}},"id":6843,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5085:20:17","memberName":"lastVerificationDate","nodeType":"MemberAccess","referencedDeclaration":6504,"src":"5065:40:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":6844,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5108:5:17","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5114:9:17","memberName":"timestamp","nodeType":"MemberAccess","src":"5108:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5065:58:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6847,"nodeType":"ExpressionStatement","src":"5065:58:17"},{"eventCall":{"arguments":[{"id":6849,"name":"_regPlate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6809,"src":"5173:9:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6850,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6812,"src":"5184:7:17","typeDescriptions":{"typeIdentifier":"t_enum$_VerificationStatus_$6469","typeString":"enum InsuranceCore.VerificationStatus"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_enum$_VerificationStatus_$6469","typeString":"enum InsuranceCore.VerificationStatus"}],"id":6848,"name":"VerificationStatusUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6584,"src":"5147:25:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$_t_enum$_VerificationStatus_$6469_$returns$__$","typeString":"function (string memory,enum InsuranceCore.VerificationStatus)"}},"id":6851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5147:45:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6852,"nodeType":"EmitStatement","src":"5142:50:17"}]},"functionSelector":"1ca2cf28","id":6854,"implemented":true,"kind":"function","modifiers":[{"id":6815,"kind":"modifierInvocation","modifierName":{"id":6814,"name":"onlyOwner","nameLocations":["4836:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"4836:9:17"},"nodeType":"ModifierInvocation","src":"4836:9:17"}],"name":"updateVerificationStatus","nameLocation":"4727:24:17","nodeType":"FunctionDefinition","parameters":{"id":6813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6809,"mutability":"mutable","name":"_regPlate","nameLocation":"4775:9:17","nodeType":"VariableDeclaration","scope":6854,"src":"4761:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6808,"name":"string","nodeType":"ElementaryTypeName","src":"4761:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6812,"mutability":"mutable","name":"_status","nameLocation":"4813:7:17","nodeType":"VariableDeclaration","scope":6854,"src":"4794:26:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_VerificationStatus_$6469","typeString":"enum InsuranceCore.VerificationStatus"},"typeName":{"id":6811,"nodeType":"UserDefinedTypeName","pathNode":{"id":6810,"name":"VerificationStatus","nameLocations":["4794:18:17"],"nodeType":"IdentifierPath","referencedDeclaration":6469,"src":"4794:18:17"},"referencedDeclaration":6469,"src":"4794:18:17","typeDescriptions":{"typeIdentifier":"t_enum$_VerificationStatus_$6469","typeString":"enum InsuranceCore.VerificationStatus"}},"visibility":"internal"}],"src":"4751:75:17"},"returnParameters":{"id":6816,"nodeType":"ParameterList","parameters":[],"src":"4846:0:17"},"scope":7145,"src":"4718:481:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6971,"nodeType":"Block","src":"5368:1068:17","statements":[{"assignments":[6869],"declarations":[{"constant":false,"id":6869,"mutability":"mutable","name":"vehicle","nameLocation":"5394:7:17","nodeType":"VariableDeclaration","scope":6971,"src":"5378:23:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Vehicle_$6507_storage_ptr","typeString":"struct InsuranceCore.Vehicle"},"typeName":{"id":6868,"nodeType":"UserDefinedTypeName","pathNode":{"id":6867,"name":"Vehicle","nameLocations":["5378:7:17"],"nodeType":"IdentifierPath","referencedDeclaration":6507,"src":"5378:7:17"},"referencedDeclaration":6507,"src":"5378:7:17","typeDescriptions":{"typeIdentifier":"t_struct$_Vehicle_$6507_storage_ptr","typeString":"struct InsuranceCore.Vehicle"}},"visibility":"internal"}],"id":6873,"initialValue":{"baseExpression":{"id":6870,"name":"vehicles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6539,"src":"5404:8:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_Vehicle_$6507_storage_$","typeString":"mapping(string memory => struct InsuranceCore.Vehicle storage ref)"}},"id":6872,"indexExpression":{"id":6871,"name":"_regPlate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6856,"src":"5413:9:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5404:19:17","typeDescriptions":{"typeIdentifier":"t_struct$_Vehicle_$6507_storage","typeString":"struct InsuranceCore.Vehicle storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5378:45:17"},{"expression":{"arguments":[{"expression":{"id":6875,"name":"vehicle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6869,"src":"5441:7:17","typeDescriptions":{"typeIdentifier":"t_struct$_Vehicle_$6507_storage_ptr","typeString":"struct InsuranceCore.Vehicle storage pointer"}},"id":6876,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5449:12:17","memberName":"isRegistered","nodeType":"MemberAccess","referencedDeclaration":6506,"src":"5441:20:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"56656869636c65206e6f742072656769737465726564","id":6877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5463:24:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_a91c9f81e9feb710f18005dba909bf9f6dc78a9b082739b042458d7a998ca6ab","typeString":"literal_string \"Vehicle not registered\""},"value":"Vehicle not registered"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a91c9f81e9feb710f18005dba909bf9f6dc78a9b082739b042458d7a998ca6ab","typeString":"literal_string \"Vehicle not registered\""}],"id":6874,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5433:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5433:55:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6879,"nodeType":"ExpressionStatement","src":"5433:55:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6881,"name":"vehicle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6869,"src":"5506:7:17","typeDescriptions":{"typeIdentifier":"t_struct$_Vehicle_$6507_storage_ptr","typeString":"struct InsuranceCore.Vehicle storage pointer"}},"id":6882,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5514:5:17","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":6496,"src":"5506:13:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":6883,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5523:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5527:6:17","memberName":"sender","nodeType":"MemberAccess","src":"5523:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5506:27:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f742076656869636c65206f776e6572","id":6886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5535:19:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c1a493b215ee9743b1073772936fe1708d9ad9a54e420311fd253597e9010212","typeString":"literal_string \"Not vehicle owner\""},"value":"Not vehicle owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c1a493b215ee9743b1073772936fe1708d9ad9a54e420311fd253597e9010212","typeString":"literal_string \"Not vehicle owner\""}],"id":6880,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5498:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5498:57:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6888,"nodeType":"ExpressionStatement","src":"5498:57:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_VerificationStatus_$6469","typeString":"enum InsuranceCore.VerificationStatus"},"id":6894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6890,"name":"vehicle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6869,"src":"5573:7:17","typeDescriptions":{"typeIdentifier":"t_struct$_Vehicle_$6507_storage_ptr","typeString":"struct InsuranceCore.Vehicle storage pointer"}},"id":6891,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5581:6:17","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":6499,"src":"5573:14:17","typeDescriptions":{"typeIdentifier":"t_enum$_VerificationStatus_$6469","typeString":"enum InsuranceCore.VerificationStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":6892,"name":"VerificationStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6469,"src":"5591:18:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_VerificationStatus_$6469_$","typeString":"type(enum InsuranceCore.VerificationStatus)"}},"id":6893,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5610:8:17","memberName":"Verified","nodeType":"MemberAccess","referencedDeclaration":6467,"src":"5591:27:17","typeDescriptions":{"typeIdentifier":"t_enum$_VerificationStatus_$6469","typeString":"enum InsuranceCore.VerificationStatus"}},"src":"5573:45:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"56656869636c65206e6f74207665726966696564","id":6895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5620:22:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_3793fdef918127330e0d76c5b92b8820046031cf55bdfac2b0725a41a43ee952","typeString":"literal_string \"Vehicle not verified\""},"value":"Vehicle not verified"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3793fdef918127330e0d76c5b92b8820046031cf55bdfac2b0725a41a43ee952","typeString":"literal_string \"Vehicle not verified\""}],"id":6889,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5565:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5565:78:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6897,"nodeType":"ExpressionStatement","src":"5565:78:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6899,"name":"_coverage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6860,"src":"5661:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"baseExpression":{"id":6900,"name":"coverageLimits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6559,"src":"5674:14:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_VerificationTier_$6389_$_t_uint256_$","typeString":"mapping(enum IVehicleShield.VerificationTier => uint256)"}},"id":6903,"indexExpression":{"expression":{"id":6901,"name":"vehicle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6869,"src":"5689:7:17","typeDescriptions":{"typeIdentifier":"t_struct$_Vehicle_$6507_storage_ptr","typeString":"struct InsuranceCore.Vehicle storage pointer"}},"id":6902,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5697:4:17","memberName":"tier","nodeType":"MemberAccess","referencedDeclaration":6502,"src":"5689:12:17","typeDescriptions":{"typeIdentifier":"t_enum$_VerificationTier_$6389","typeString":"enum IVehicleShield.VerificationTier"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5674:28:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5661:41:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f76657261676520657863656564732074696572206c696d6974","id":6905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5704:29:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_645330ee036893cbc37966ce7efc404d1f8451960092bb671b4db5d0c8accd42","typeString":"literal_string \"Coverage exceeds tier limit\""},"value":"Coverage exceeds tier limit"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_645330ee036893cbc37966ce7efc404d1f8451960092bb671b4db5d0c8accd42","typeString":"literal_string \"Coverage exceeds tier limit\""}],"id":6898,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5653:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5653:81:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6907,"nodeType":"ExpressionStatement","src":"5653:81:17"},{"assignments":[6909],"declarations":[{"constant":false,"id":6909,"mutability":"mutable","name":"requiredPremium","nameLocation":"5761:15:17","nodeType":"VariableDeclaration","scope":6971,"src":"5753:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6908,"name":"uint256","nodeType":"ElementaryTypeName","src":"5753:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6916,"initialValue":{"arguments":[{"id":6912,"name":"_regPlate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6856,"src":"5811:9:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":6913,"name":"vehicle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6869,"src":"5822:7:17","typeDescriptions":{"typeIdentifier":"t_struct$_Vehicle_$6507_storage_ptr","typeString":"struct InsuranceCore.Vehicle storage pointer"}},"id":6914,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5830:4:17","memberName":"tier","nodeType":"MemberAccess","referencedDeclaration":6502,"src":"5822:12:17","typeDescriptions":{"typeIdentifier":"t_enum$_VerificationTier_$6389","typeString":"enum IVehicleShield.VerificationTier"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_enum$_VerificationTier_$6389","typeString":"enum IVehicleShield.VerificationTier"}],"expression":{"id":6910,"name":"riskAssessment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6465,"src":"5779:14:17","typeDescriptions":{"typeIdentifier":"t_contract$_IRiskAssessment_$6421","typeString":"contract IRiskAssessment"}},"id":6911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5794:16:17","memberName":"calculatePremium","nodeType":"MemberAccess","referencedDeclaration":6420,"src":"5779:31:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_string_memory_ptr_$_t_enum$_VerificationTier_$6389_$returns$_t_uint256_$","typeString":"function (string memory,enum IVehicleShield.VerificationTier) view external returns (uint256)"}},"id":6915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5779:56:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5753:82:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6918,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5855:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5859:5:17","memberName":"value","nodeType":"MemberAccess","src":"5855:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":6920,"name":"requiredPremium","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6909,"src":"5868:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5855:28:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e74207072656d69756d207061796d656e74","id":6922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5885:30:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_94c883244898b2ef300949156ea78e9c524ab5bc5021a4d0763c5111f4225c8f","typeString":"literal_string \"Insufficient premium payment\""},"value":"Insufficient premium payment"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_94c883244898b2ef300949156ea78e9c524ab5bc5021a4d0763c5111f4225c8f","typeString":"literal_string \"Insufficient premium payment\""}],"id":6917,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5847:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5847:69:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6924,"nodeType":"ExpressionStatement","src":"5847:69:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6926,"name":"_duration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6858,"src":"5936:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5948:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5936:13:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206475726174696f6e","id":6929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5951:18:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_24673d1b0003a199275166474575e96e531c915eb950e021102fb167de0d7af4","typeString":"literal_string \"Invalid duration\""},"value":"Invalid duration"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24673d1b0003a199275166474575e96e531c915eb950e021102fb167de0d7af4","typeString":"literal_string \"Invalid duration\""}],"id":6925,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5928:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5928:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6931,"nodeType":"ExpressionStatement","src":"5928:42:17"},{"assignments":[6933],"declarations":[{"constant":false,"id":6933,"mutability":"mutable","name":"policyId","nameLocation":"5997:8:17","nodeType":"VariableDeclaration","scope":6971,"src":"5989:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6932,"name":"uint256","nodeType":"ElementaryTypeName","src":"5989:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6944,"initialValue":{"arguments":[{"expression":{"id":6936,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6029:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6033:6:17","memberName":"sender","nodeType":"MemberAccess","src":"6029:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6938,"name":"_regPlate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6856,"src":"6041:9:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":6939,"name":"vehicle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6869,"src":"6052:7:17","typeDescriptions":{"typeIdentifier":"t_struct$_Vehicle_$6507_storage_ptr","typeString":"struct InsuranceCore.Vehicle storage pointer"}},"id":6940,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6060:4:17","memberName":"tier","nodeType":"MemberAccess","referencedDeclaration":6502,"src":"6052:12:17","typeDescriptions":{"typeIdentifier":"t_enum$_VerificationTier_$6389","typeString":"enum IVehicleShield.VerificationTier"}},{"id":6941,"name":"requiredPremium","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6909,"src":"6066:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6942,"name":"_coverage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6860,"src":"6083:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_enum$_VerificationTier_$6389","typeString":"enum IVehicleShield.VerificationTier"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6934,"name":"policyNFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6462,"src":"6008:9:17","typeDescriptions":{"typeIdentifier":"t_contract$_IPolicyNFT_$6450","typeString":"contract IPolicyNFT"}},"id":6935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6018:10:17","memberName":"mintPolicy","nodeType":"MemberAccess","referencedDeclaration":6437,"src":"6008:20:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$_t_enum$_VerificationTier_$6389_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,string memory,enum IVehicleShield.VerificationTier,uint256,uint256) external returns (uint256)"}},"id":6943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6008:85:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5989:104:17"},{"expression":{"id":6960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6945,"name":"policies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6549,"src":"6112:8:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Policy_$6519_storage_$","typeString":"mapping(uint256 => struct InsuranceCore.Policy storage ref)"}},"id":6947,"indexExpression":{"id":6946,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6933,"src":"6121:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6112:18:17","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6519_storage","typeString":"struct InsuranceCore.Policy storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6949,"name":"_coverage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6860,"src":"6164:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6950,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6198:5:17","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6204:9:17","memberName":"timestamp","nodeType":"MemberAccess","src":"6198:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6952,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6236:5:17","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6242:9:17","memberName":"timestamp","nodeType":"MemberAccess","src":"6236:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6954,"name":"_duration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6858,"src":"6254:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6236:27:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":6956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6287:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"id":6957,"name":"vehicle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6869,"src":"6311:7:17","typeDescriptions":{"typeIdentifier":"t_struct$_Vehicle_$6507_storage_ptr","typeString":"struct InsuranceCore.Vehicle storage pointer"}},"id":6958,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6319:4:17","memberName":"tier","nodeType":"MemberAccess","referencedDeclaration":6502,"src":"6311:12:17","typeDescriptions":{"typeIdentifier":"t_enum$_VerificationTier_$6389","typeString":"enum IVehicleShield.VerificationTier"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_enum$_VerificationTier_$6389","typeString":"enum IVehicleShield.VerificationTier"}],"id":6948,"name":"Policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6519,"src":"6133:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Policy_$6519_storage_ptr_$","typeString":"type(struct InsuranceCore.Policy storage pointer)"}},"id":6959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["6154:8:17","6187:9:17","6227:7:17","6277:8:17","6305:4:17"],"names":["coverage","startDate","endDate","isActive","tier"],"nodeType":"FunctionCall","src":"6133:201:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6519_memory_ptr","typeString":"struct InsuranceCore.Policy memory"}},"src":"6112:222:17","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6519_storage","typeString":"struct InsuranceCore.Policy storage ref"}},"id":6961,"nodeType":"ExpressionStatement","src":"6112:222:17"},{"eventCall":{"arguments":[{"id":6963,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6933,"src":"6372:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6964,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6382:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6386:6:17","memberName":"sender","nodeType":"MemberAccess","src":"6382:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6966,"name":"_regPlate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6856,"src":"6394:9:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6962,"name":"PolicyCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6592,"src":"6358:13:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,address,string memory)"}},"id":6967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6358:46:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6968,"nodeType":"EmitStatement","src":"6353:51:17"},{"expression":{"id":6969,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6933,"src":"6421:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6866,"id":6970,"nodeType":"Return","src":"6414:15:17"}]},"functionSelector":"e93b2a34","id":6972,"implemented":true,"kind":"function","modifiers":[{"id":6863,"kind":"modifierInvocation","modifierName":{"id":6862,"name":"nonReentrant","nameLocations":["5337:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":1596,"src":"5337:12:17"},"nodeType":"ModifierInvocation","src":"5337:12:17"}],"name":"createPolicy","nameLocation":"5214:12:17","nodeType":"FunctionDefinition","parameters":{"id":6861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6856,"mutability":"mutable","name":"_regPlate","nameLocation":"5250:9:17","nodeType":"VariableDeclaration","scope":6972,"src":"5236:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6855,"name":"string","nodeType":"ElementaryTypeName","src":"5236:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6858,"mutability":"mutable","name":"_duration","nameLocation":"5277:9:17","nodeType":"VariableDeclaration","scope":6972,"src":"5269:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6857,"name":"uint256","nodeType":"ElementaryTypeName","src":"5269:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6860,"mutability":"mutable","name":"_coverage","nameLocation":"5304:9:17","nodeType":"VariableDeclaration","scope":6972,"src":"5296:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6859,"name":"uint256","nodeType":"ElementaryTypeName","src":"5296:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5226:93:17"},"returnParameters":{"id":6866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6865,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6972,"src":"5359:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6864,"name":"uint256","nodeType":"ElementaryTypeName","src":"5359:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5358:9:17"},"scope":7145,"src":"5205:1231:17","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":7032,"nodeType":"Block","src":"6635:566:17","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":6988,"name":"policies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6549,"src":"6653:8:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Policy_$6519_storage_$","typeString":"mapping(uint256 => struct InsuranceCore.Policy storage ref)"}},"id":6990,"indexExpression":{"id":6989,"name":"_policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6974,"src":"6662:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6653:19:17","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6519_storage","typeString":"struct InsuranceCore.Policy storage ref"}},"id":6991,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6673:8:17","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":6515,"src":"6653:28:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506f6c696379206e6f7420616374697665","id":6992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6683:19:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_4bc221f51c0c4bd6523cb893b47fce57185073464b1c6fa624cc7cfeaeaca718","typeString":"literal_string \"Policy not active\""},"value":"Policy not active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4bc221f51c0c4bd6523cb893b47fce57185073464b1c6fa624cc7cfeaeaca718","typeString":"literal_string \"Policy not active\""}],"id":6987,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6645:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6645:58:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6994,"nodeType":"ExpressionStatement","src":"6645:58:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6998,"name":"_policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6974,"src":"6746:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6996,"name":"policyNFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6462,"src":"6721:9:17","typeDescriptions":{"typeIdentifier":"t_contract$_IPolicyNFT_$6450","typeString":"contract IPolicyNFT"}},"id":6997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6731:14:17","memberName":"getPolicyOwner","nodeType":"MemberAccess","referencedDeclaration":6444,"src":"6721:24:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view external returns (address)"}},"id":6999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6721:35:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7000,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6760:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6764:6:17","memberName":"sender","nodeType":"MemberAccess","src":"6760:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6721:49:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420706f6c696379206f776e6572","id":7003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6772:18:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_aeef98c871014711956d29bf45ac3fa97a84e928c584213afc461aa2c4a788c5","typeString":"literal_string \"Not policy owner\""},"value":"Not policy owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_aeef98c871014711956d29bf45ac3fa97a84e928c584213afc461aa2c4a788c5","typeString":"literal_string \"Not policy owner\""}],"id":6995,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6713:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6713:78:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7005,"nodeType":"ExpressionStatement","src":"6713:78:17"},{"assignments":[7007],"declarations":[{"constant":false,"id":7007,"mutability":"mutable","name":"claimId","nameLocation":"6818:7:17","nodeType":"VariableDeclaration","scope":7032,"src":"6810:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7006,"name":"uint256","nodeType":"ElementaryTypeName","src":"6810:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7010,"initialValue":{"id":7009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6828:14:17","subExpression":{"id":7008,"name":"_nextClaimId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6562,"src":"6828:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6810:32:17"},{"expression":{"id":7023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7011,"name":"claims","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6554,"src":"6852:6:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Claim_$6534_storage_$","typeString":"mapping(uint256 => struct InsuranceCore.Claim storage ref)"}},"id":7013,"indexExpression":{"id":7012,"name":"claimId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7007,"src":"6859:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6852:15:17","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$6534_storage","typeString":"struct InsuranceCore.Claim storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7015,"name":"claimId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7007,"src":"6899:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7016,"name":"_policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6974,"src":"6930:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7017,"name":"_description","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6976,"src":"6966:12:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":7018,"name":"_photoHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6978,"src":"7003:10:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":7019,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6980,"src":"7035:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":7020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7069:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"66616c7365","id":7021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7096:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":7014,"name":"Claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6534,"src":"6870:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Claim_$6534_storage_ptr_$","typeString":"type(struct InsuranceCore.Claim storage pointer)"}},"id":7022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["6890:7:17","6920:8:17","6953:11:17","6992:9:17","7027:6:17","7056:11:17","7088:6:17"],"names":["claimId","policyId","description","photoHash","amount","isProcessed","isPaid"],"nodeType":"FunctionCall","src":"6870:242:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$6534_memory_ptr","typeString":"struct InsuranceCore.Claim memory"}},"src":"6852:260:17","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$6534_storage","typeString":"struct InsuranceCore.Claim storage ref"}},"id":7024,"nodeType":"ExpressionStatement","src":"6852:260:17"},{"eventCall":{"arguments":[{"id":7026,"name":"claimId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7007,"src":"7151:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7027,"name":"_policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6974,"src":"7160:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7025,"name":"ClaimSubmitted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6598,"src":"7136:14:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":7028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7136:34:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7029,"nodeType":"EmitStatement","src":"7131:39:17"},{"expression":{"id":7030,"name":"claimId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7007,"src":"7187:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6986,"id":7031,"nodeType":"Return","src":"7180:14:17"}]},"functionSelector":"8f749e15","id":7033,"implemented":true,"kind":"function","modifiers":[{"id":6983,"kind":"modifierInvocation","modifierName":{"id":6982,"name":"nonReentrant","nameLocations":["6604:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":1596,"src":"6604:12:17"},"nodeType":"ModifierInvocation","src":"6604:12:17"}],"name":"submitClaim","nameLocation":"6455:11:17","nodeType":"FunctionDefinition","parameters":{"id":6981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6974,"mutability":"mutable","name":"_policyId","nameLocation":"6484:9:17","nodeType":"VariableDeclaration","scope":7033,"src":"6476:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6973,"name":"uint256","nodeType":"ElementaryTypeName","src":"6476:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6976,"mutability":"mutable","name":"_description","nameLocation":"6517:12:17","nodeType":"VariableDeclaration","scope":7033,"src":"6503:26:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6975,"name":"string","nodeType":"ElementaryTypeName","src":"6503:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6978,"mutability":"mutable","name":"_photoHash","nameLocation":"6553:10:17","nodeType":"VariableDeclaration","scope":7033,"src":"6539:24:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6977,"name":"string","nodeType":"ElementaryTypeName","src":"6539:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6980,"mutability":"mutable","name":"_amount","nameLocation":"6581:7:17","nodeType":"VariableDeclaration","scope":7033,"src":"6573:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6979,"name":"uint256","nodeType":"ElementaryTypeName","src":"6573:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6466:128:17"},"returnParameters":{"id":6986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6985,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7033,"src":"6626:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6984,"name":"uint256","nodeType":"ElementaryTypeName","src":"6626:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6625:9:17"},"scope":7145,"src":"6446:755:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7074,"nodeType":"Block","src":"7286:291:17","statements":[{"assignments":[7044],"declarations":[{"constant":false,"id":7044,"mutability":"mutable","name":"claim","nameLocation":"7310:5:17","nodeType":"VariableDeclaration","scope":7074,"src":"7296:19:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$6534_storage_ptr","typeString":"struct InsuranceCore.Claim"},"typeName":{"id":7043,"nodeType":"UserDefinedTypeName","pathNode":{"id":7042,"name":"Claim","nameLocations":["7296:5:17"],"nodeType":"IdentifierPath","referencedDeclaration":6534,"src":"7296:5:17"},"referencedDeclaration":6534,"src":"7296:5:17","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$6534_storage_ptr","typeString":"struct InsuranceCore.Claim"}},"visibility":"internal"}],"id":7048,"initialValue":{"baseExpression":{"id":7045,"name":"claims","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6554,"src":"7318:6:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Claim_$6534_storage_$","typeString":"mapping(uint256 => struct InsuranceCore.Claim storage ref)"}},"id":7047,"indexExpression":{"id":7046,"name":"_claimId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7035,"src":"7325:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7318:16:17","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$6534_storage","typeString":"struct InsuranceCore.Claim storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7296:38:17"},{"expression":{"arguments":[{"id":7052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7352:18:17","subExpression":{"expression":{"id":7050,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7044,"src":"7353:5:17","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$6534_storage_ptr","typeString":"struct InsuranceCore.Claim storage pointer"}},"id":7051,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7359:11:17","memberName":"isProcessed","nodeType":"MemberAccess","referencedDeclaration":6531,"src":"7353:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436c61696d20616c72656164792070726f636573736564","id":7053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7372:25:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_49dea5ad47e4b4a8e741022bbde0f91413b0cb7f3d15b1515bae7c7b15a11cde","typeString":"literal_string \"Claim already processed\""},"value":"Claim already processed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_49dea5ad47e4b4a8e741022bbde0f91413b0cb7f3d15b1515bae7c7b15a11cde","typeString":"literal_string \"Claim already processed\""}],"id":7049,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7344:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7344:54:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7055,"nodeType":"ExpressionStatement","src":"7344:54:17"},{"expression":{"id":7060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7056,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7044,"src":"7417:5:17","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$6534_storage_ptr","typeString":"struct InsuranceCore.Claim storage pointer"}},"id":7058,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7423:11:17","memberName":"isProcessed","nodeType":"MemberAccess","referencedDeclaration":6531,"src":"7417:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":7059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7437:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7417:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7061,"nodeType":"ExpressionStatement","src":"7417:24:17"},{"condition":{"id":7062,"name":"_approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7037,"src":"7455:9:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7068,"nodeType":"IfStatement","src":"7451:61:17","trueBody":{"id":7067,"nodeType":"Block","src":"7466:46:17","statements":[{"expression":{"arguments":[{"id":7064,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7044,"src":"7495:5:17","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$6534_storage_ptr","typeString":"struct InsuranceCore.Claim storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Claim_$6534_storage_ptr","typeString":"struct InsuranceCore.Claim storage pointer"}],"id":7063,"name":"_processPayout","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7140,"src":"7480:14:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Claim_$6534_storage_ptr_$returns$__$","typeString":"function (struct InsuranceCore.Claim storage pointer)"}},"id":7065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7480:21:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7066,"nodeType":"ExpressionStatement","src":"7480:21:17"}]}},{"eventCall":{"arguments":[{"id":7070,"name":"_claimId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7035,"src":"7550:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7071,"name":"_approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7037,"src":"7560:9:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":7069,"name":"ClaimProcessed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6604,"src":"7535:14:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_bool_$returns$__$","typeString":"function (uint256,bool)"}},"id":7072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7535:35:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7073,"nodeType":"EmitStatement","src":"7530:40:17"}]},"functionSelector":"35446def","id":7075,"implemented":true,"kind":"function","modifiers":[{"id":7040,"kind":"modifierInvocation","modifierName":{"id":7039,"name":"onlyOwner","nameLocations":["7276:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"7276:9:17"},"nodeType":"ModifierInvocation","src":"7276:9:17"}],"name":"processClaim","nameLocation":"7220:12:17","nodeType":"FunctionDefinition","parameters":{"id":7038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7035,"mutability":"mutable","name":"_claimId","nameLocation":"7241:8:17","nodeType":"VariableDeclaration","scope":7075,"src":"7233:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7034,"name":"uint256","nodeType":"ElementaryTypeName","src":"7233:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7037,"mutability":"mutable","name":"_approved","nameLocation":"7256:9:17","nodeType":"VariableDeclaration","scope":7075,"src":"7251:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7036,"name":"bool","nodeType":"ElementaryTypeName","src":"7251:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7232:34:17"},"returnParameters":{"id":7041,"nodeType":"ParameterList","parameters":[],"src":"7286:0:17"},"scope":7145,"src":"7211:366:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7139,"nodeType":"Block","src":"7641:467:17","statements":[{"expression":{"arguments":[{"id":7084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7659:14:17","subExpression":{"expression":{"id":7082,"name":"_claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7078,"src":"7660:6:17","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$6534_storage_ptr","typeString":"struct InsuranceCore.Claim storage pointer"}},"id":7083,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7667:6:17","memberName":"isPaid","nodeType":"MemberAccess","referencedDeclaration":6533,"src":"7660:13:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436c61696d20616c72656164792070616964","id":7085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7675:20:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_f00b54c7845babbe8f88a73867934c8d99124bf65b43aac829e39ecb9b6e5191","typeString":"literal_string \"Claim already paid\""},"value":"Claim already paid"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f00b54c7845babbe8f88a73867934c8d99124bf65b43aac829e39ecb9b6e5191","typeString":"literal_string \"Claim already paid\""}],"id":7081,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7651:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7651:45:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7087,"nodeType":"ExpressionStatement","src":"7651:45:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":7091,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7722:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_InsuranceCore_$7145","typeString":"contract InsuranceCore"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_InsuranceCore_$7145","typeString":"contract InsuranceCore"}],"id":7090,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7714:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7089,"name":"address","nodeType":"ElementaryTypeName","src":"7714:7:17","typeDescriptions":{}}},"id":7092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7714:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7728:7:17","memberName":"balance","nodeType":"MemberAccess","src":"7714:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":7094,"name":"_claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7078,"src":"7739:6:17","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$6534_storage_ptr","typeString":"struct InsuranceCore.Claim storage pointer"}},"id":7095,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7746:6:17","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":6529,"src":"7739:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7714:38:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e7420636f6e74726163742062616c616e6365","id":7097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7754:31:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749","typeString":"literal_string \"Insufficient contract balance\""},"value":"Insufficient contract balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749","typeString":"literal_string \"Insufficient contract balance\""}],"id":7088,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7706:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7706:80:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7099,"nodeType":"ExpressionStatement","src":"7706:80:17"},{"assignments":[7101],"declarations":[{"constant":false,"id":7101,"mutability":"mutable","name":"recipient","nameLocation":"7821:9:17","nodeType":"VariableDeclaration","scope":7139,"src":"7805:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":7100,"name":"address","nodeType":"ElementaryTypeName","src":"7805:15:17","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"id":7110,"initialValue":{"arguments":[{"arguments":[{"expression":{"id":7106,"name":"_claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7078,"src":"7866:6:17","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$6534_storage_ptr","typeString":"struct InsuranceCore.Claim storage pointer"}},"id":7107,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7873:8:17","memberName":"policyId","nodeType":"MemberAccess","referencedDeclaration":6523,"src":"7866:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7104,"name":"policyNFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6462,"src":"7841:9:17","typeDescriptions":{"typeIdentifier":"t_contract$_IPolicyNFT_$6450","typeString":"contract IPolicyNFT"}},"id":7105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7851:14:17","memberName":"getPolicyOwner","nodeType":"MemberAccess","referencedDeclaration":6444,"src":"7841:24:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view external returns (address)"}},"id":7108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7841:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7103,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7833:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":7102,"name":"address","nodeType":"ElementaryTypeName","src":"7833:8:17","stateMutability":"payable","typeDescriptions":{}}},"id":7109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7833:50:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"VariableDeclarationStatement","src":"7805:78:17"},{"expression":{"id":7115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7111,"name":"_claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7078,"src":"7893:6:17","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$6534_storage_ptr","typeString":"struct InsuranceCore.Claim storage pointer"}},"id":7113,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7900:6:17","memberName":"isPaid","nodeType":"MemberAccess","referencedDeclaration":6533,"src":"7893:13:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":7114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7909:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7893:20:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7116,"nodeType":"ExpressionStatement","src":"7893:20:17"},{"assignments":[7118,null],"declarations":[{"constant":false,"id":7118,"mutability":"mutable","name":"sent","nameLocation":"7938:4:17","nodeType":"VariableDeclaration","scope":7139,"src":"7933:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7117,"name":"bool","nodeType":"ElementaryTypeName","src":"7933:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":7126,"initialValue":{"arguments":[{"hexValue":"","id":7124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7985:2:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":7119,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7101,"src":"7948:9:17","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":7120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7958:4:17","memberName":"call","nodeType":"MemberAccess","src":"7948:14:17","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":7123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":7121,"name":"_claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7078,"src":"7970:6:17","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$6534_storage_ptr","typeString":"struct InsuranceCore.Claim storage pointer"}},"id":7122,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7977:6:17","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":6529,"src":"7970:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"7948:36:17","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":7125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7948:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7932:56:17"},{"expression":{"arguments":[{"id":7128,"name":"sent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7118,"src":"8006:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4661696c656420746f2073656e64207061796d656e74","id":7129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8012:24:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_92ad45549db9f58d19e024365f85a0c8ac795b4a8ba66a369c16933f75075f07","typeString":"literal_string \"Failed to send payment\""},"value":"Failed to send payment"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_92ad45549db9f58d19e024365f85a0c8ac795b4a8ba66a369c16933f75075f07","typeString":"literal_string \"Failed to send payment\""}],"id":7127,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7998:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7998:39:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7131,"nodeType":"ExpressionStatement","src":"7998:39:17"},{"eventCall":{"arguments":[{"expression":{"id":7133,"name":"_claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7078,"src":"8071:6:17","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$6534_storage_ptr","typeString":"struct InsuranceCore.Claim storage pointer"}},"id":7134,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8078:7:17","memberName":"claimId","nodeType":"MemberAccess","referencedDeclaration":6521,"src":"8071:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7135,"name":"_claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7078,"src":"8087:6:17","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$6534_storage_ptr","typeString":"struct InsuranceCore.Claim storage pointer"}},"id":7136,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8094:6:17","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":6529,"src":"8087:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7132,"name":"ClaimPaid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6610,"src":"8061:9:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":7137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8061:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7138,"nodeType":"EmitStatement","src":"8056:45:17"}]},"id":7140,"implemented":true,"kind":"function","modifiers":[],"name":"_processPayout","nameLocation":"7596:14:17","nodeType":"FunctionDefinition","parameters":{"id":7079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7078,"mutability":"mutable","name":"_claim","nameLocation":"7625:6:17","nodeType":"VariableDeclaration","scope":7140,"src":"7611:20:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$6534_storage_ptr","typeString":"struct InsuranceCore.Claim"},"typeName":{"id":7077,"nodeType":"UserDefinedTypeName","pathNode":{"id":7076,"name":"Claim","nameLocations":["7611:5:17"],"nodeType":"IdentifierPath","referencedDeclaration":6534,"src":"7611:5:17"},"referencedDeclaration":6534,"src":"7611:5:17","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$6534_storage_ptr","typeString":"struct InsuranceCore.Claim"}},"visibility":"internal"}],"src":"7610:22:17"},"returnParameters":{"id":7080,"nodeType":"ParameterList","parameters":[],"src":"7641:0:17"},"scope":7145,"src":"7587:521:17","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":7143,"nodeType":"Block","src":"8145:2:17","statements":[]},"id":7144,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7141,"nodeType":"ParameterList","parameters":[],"src":"8125:2:17"},"returnParameters":{"id":7142,"nodeType":"ParameterList","parameters":[],"src":"8145:0:17"},"scope":7145,"src":"8118:29:17","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":7146,"src":"203:7946:17","usedErrors":[13,18,1577],"usedEvents":[24,6571,6577,6584,6592,6598,6604,6610]}],"src":"32:8117:17"},"id":17},"contracts/PolicyNFT.sol":{"ast":{"absolutePath":"contracts/PolicyNFT.sol","exportedSymbols":{"Context":[1511],"ERC165":[2856],"ERC721":[1241],"ERC721Utils":[1481],"IERC165":[2868],"IERC721":[1358],"IERC721Errors":[237],"IERC721Metadata":[1404],"IPolicyNFT":[6450],"IRiskAssessment":[6421],"IVehicleShield":[6390],"Ownable":[147],"PolicyNFT":[7301],"Strings":[2832]},"id":7302,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7147,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:18"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"@openzeppelin/contracts/token/ERC721/ERC721.sol","id":7148,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7302,"sourceUnit":1242,"src":"57:57:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":7149,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7302,"sourceUnit":148,"src":"115:52:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/IVehicleShield.sol","file":"./IVehicleShield.sol","id":7150,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7302,"sourceUnit":6451,"src":"168:30:18","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7151,"name":"ERC721","nameLocations":["222:6:18"],"nodeType":"IdentifierPath","referencedDeclaration":1241,"src":"222:6:18"},"id":7152,"nodeType":"InheritanceSpecifier","src":"222:6:18"},{"baseName":{"id":7153,"name":"Ownable","nameLocations":["230:7:18"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"230:7:18"},"id":7154,"nodeType":"InheritanceSpecifier","src":"230:7:18"},{"baseName":{"id":7155,"name":"IPolicyNFT","nameLocations":["239:10:18"],"nodeType":"IdentifierPath","referencedDeclaration":6450,"src":"239:10:18"},"id":7156,"nodeType":"InheritanceSpecifier","src":"239:10:18"}],"canonicalName":"PolicyNFT","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":7301,"linearizedBaseContracts":[7301,6450,147,1241,237,1404,1358,2856,2868,1511],"name":"PolicyNFT","nameLocation":"209:9:18","nodeType":"ContractDefinition","nodes":[{"canonicalName":"PolicyNFT.PolicyMetadata","id":7168,"members":[{"constant":false,"id":7158,"mutability":"mutable","name":"vehicleId","nameLocation":"295:9:18","nodeType":"VariableDeclaration","scope":7168,"src":"288:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":7157,"name":"string","nodeType":"ElementaryTypeName","src":"288:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7160,"mutability":"mutable","name":"createdAt","nameLocation":"322:9:18","nodeType":"VariableDeclaration","scope":7168,"src":"314:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7159,"name":"uint256","nodeType":"ElementaryTypeName","src":"314:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7163,"mutability":"mutable","name":"tier","nameLocation":"373:4:18","nodeType":"VariableDeclaration","scope":7168,"src":"341:36:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_VerificationTier_$6389","typeString":"enum IVehicleShield.VerificationTier"},"typeName":{"id":7162,"nodeType":"UserDefinedTypeName","pathNode":{"id":7161,"name":"IVehicleShield.VerificationTier","nameLocations":["341:14:18","356:16:18"],"nodeType":"IdentifierPath","referencedDeclaration":6389,"src":"341:31:18"},"referencedDeclaration":6389,"src":"341:31:18","typeDescriptions":{"typeIdentifier":"t_enum$_VerificationTier_$6389","typeString":"enum IVehicleShield.VerificationTier"}},"visibility":"internal"},{"constant":false,"id":7165,"mutability":"mutable","name":"premium","nameLocation":"395:7:18","nodeType":"VariableDeclaration","scope":7168,"src":"387:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7164,"name":"uint256","nodeType":"ElementaryTypeName","src":"387:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7167,"mutability":"mutable","name":"coverage","nameLocation":"420:8:18","nodeType":"VariableDeclaration","scope":7168,"src":"412:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7166,"name":"uint256","nodeType":"ElementaryTypeName","src":"412:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"PolicyMetadata","nameLocation":"263:14:18","nodeType":"StructDefinition","scope":7301,"src":"256:179:18","visibility":"public"},{"constant":false,"id":7173,"mutability":"mutable","name":"_policies","nameLocation":"488:9:18","nodeType":"VariableDeclaration","scope":7301,"src":"445:52:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_PolicyMetadata_$7168_storage_$","typeString":"mapping(uint256 => struct PolicyNFT.PolicyMetadata)"},"typeName":{"id":7172,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7169,"name":"uint256","nodeType":"ElementaryTypeName","src":"453:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"445:34:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_PolicyMetadata_$7168_storage_$","typeString":"mapping(uint256 => struct PolicyNFT.PolicyMetadata)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7171,"nodeType":"UserDefinedTypeName","pathNode":{"id":7170,"name":"PolicyMetadata","nameLocations":["464:14:18"],"nodeType":"IdentifierPath","referencedDeclaration":7168,"src":"464:14:18"},"referencedDeclaration":7168,"src":"464:14:18","typeDescriptions":{"typeIdentifier":"t_struct$_PolicyMetadata_$7168_storage_ptr","typeString":"struct PolicyNFT.PolicyMetadata"}}},"visibility":"private"},{"constant":false,"id":7176,"mutability":"mutable","name":"_nextPolicyId","nameLocation":"519:13:18","nodeType":"VariableDeclaration","scope":7301,"src":"503:33:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7174,"name":"uint256","nodeType":"ElementaryTypeName","src":"503:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":7175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"535:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":false,"id":7178,"mutability":"mutable","name":"_insuranceCoreAddress","nameLocation":"558:21:18","nodeType":"VariableDeclaration","scope":7301,"src":"542:37:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7177,"name":"address","nodeType":"ElementaryTypeName","src":"542:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"body":{"id":7189,"nodeType":"Block","src":"662:2:18","statements":[]},"id":7190,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"56656869636c65536869656c6420506f6c696379","id":7181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"611:22:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_2d0239d1e9f693bb8dc4c6709b7baa91502ad3db634c167c5040b9279e954703","typeString":"literal_string \"VehicleShield Policy\""},"value":"VehicleShield Policy"},{"hexValue":"565350","id":7182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"635:5:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_959f5d2ad4fcb7685c8463e15d67d23ab461892fd901f24207063e8d7bcaa565","typeString":"literal_string \"VSP\""},"value":"VSP"}],"id":7183,"kind":"baseConstructorSpecifier","modifierName":{"id":7180,"name":"ERC721","nameLocations":["604:6:18"],"nodeType":"IdentifierPath","referencedDeclaration":1241,"src":"604:6:18"},"nodeType":"ModifierInvocation","src":"604:37:18"},{"arguments":[{"expression":{"id":7185,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"650:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"654:6:18","memberName":"sender","nodeType":"MemberAccess","src":"650:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":7187,"kind":"baseConstructorSpecifier","modifierName":{"id":7184,"name":"Ownable","nameLocations":["642:7:18"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"642:7:18"},"nodeType":"ModifierInvocation","src":"642:19:18"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7179,"nodeType":"ParameterList","parameters":[],"src":"601:2:18"},"returnParameters":{"id":7188,"nodeType":"ParameterList","parameters":[],"src":"662:0:18"},"scope":7301,"src":"590:74:18","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7201,"nodeType":"Block","src":"703:103:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7193,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"721:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"725:6:18","memberName":"sender","nodeType":"MemberAccess","src":"721:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7195,"name":"_insuranceCoreAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7178,"src":"735:21:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"721:35:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616c6c6572206973206e6f7420496e737572616e6365436f7265","id":7197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"758:29:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_0588848746f24b7ecbd0725ab3d6ece869f8091407a74cd56eca3bc5c7d9b270","typeString":"literal_string \"Caller is not InsuranceCore\""},"value":"Caller is not InsuranceCore"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0588848746f24b7ecbd0725ab3d6ece869f8091407a74cd56eca3bc5c7d9b270","typeString":"literal_string \"Caller is not InsuranceCore\""}],"id":7192,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"713:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"713:75:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7199,"nodeType":"ExpressionStatement","src":"713:75:18"},{"id":7200,"nodeType":"PlaceholderStatement","src":"798:1:18"}]},"id":7202,"name":"onlyInsuranceCore","nameLocation":"683:17:18","nodeType":"ModifierDefinition","parameters":{"id":7191,"nodeType":"ParameterList","parameters":[],"src":"700:2:18"},"src":"674:132:18","virtual":false,"visibility":"internal"},{"body":{"id":7213,"nodeType":"Block","src":"898:61:18","statements":[{"expression":{"id":7211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7209,"name":"_insuranceCoreAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7178,"src":"908:21:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7210,"name":"insuranceCoreAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7204,"src":"932:20:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"908:44:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7212,"nodeType":"ExpressionStatement","src":"908:44:18"}]},"functionSelector":"239036c0","id":7214,"implemented":true,"kind":"function","modifiers":[{"id":7207,"kind":"modifierInvocation","modifierName":{"id":7206,"name":"onlyOwner","nameLocations":["888:9:18"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"888:9:18"},"nodeType":"ModifierInvocation","src":"888:9:18"}],"name":"setInsuranceCoreAddress","nameLocation":"825:23:18","nodeType":"FunctionDefinition","parameters":{"id":7205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7204,"mutability":"mutable","name":"insuranceCoreAddress","nameLocation":"857:20:18","nodeType":"VariableDeclaration","scope":7214,"src":"849:28:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7203,"name":"address","nodeType":"ElementaryTypeName","src":"849:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"848:30:18"},"returnParameters":{"id":7208,"nodeType":"ParameterList","parameters":[],"src":"898:0:18"},"scope":7301,"src":"816:143:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[6437],"body":{"id":7257,"nodeType":"Block","src":"1191:278:18","statements":[{"assignments":[7233],"declarations":[{"constant":false,"id":7233,"mutability":"mutable","name":"policyId","nameLocation":"1209:8:18","nodeType":"VariableDeclaration","scope":7257,"src":"1201:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7232,"name":"uint256","nodeType":"ElementaryTypeName","src":"1201:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7236,"initialValue":{"id":7235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1220:15:18","subExpression":{"id":7234,"name":"_nextPolicyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7176,"src":"1220:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1201:34:18"},{"expression":{"id":7248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7237,"name":"_policies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7173,"src":"1245:9:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_PolicyMetadata_$7168_storage_$","typeString":"mapping(uint256 => struct PolicyNFT.PolicyMetadata storage ref)"}},"id":7239,"indexExpression":{"id":7238,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7233,"src":"1255:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1245:19:18","typeDescriptions":{"typeIdentifier":"t_struct$_PolicyMetadata_$7168_storage","typeString":"struct PolicyNFT.PolicyMetadata storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7241,"name":"vehicleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7218,"src":"1295:9:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":7242,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1318:5:18","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1324:9:18","memberName":"timestamp","nodeType":"MemberAccess","src":"1318:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7244,"name":"tier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7221,"src":"1347:4:18","typeDescriptions":{"typeIdentifier":"t_enum$_VerificationTier_$6389","typeString":"enum IVehicleShield.VerificationTier"}},{"id":7245,"name":"premium","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7223,"src":"1365:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7246,"name":"coverage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7225,"src":"1386:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_VerificationTier_$6389","typeString":"enum IVehicleShield.VerificationTier"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7240,"name":"PolicyMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7168,"src":"1267:14:18","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_PolicyMetadata_$7168_storage_ptr_$","typeString":"type(struct PolicyNFT.PolicyMetadata storage pointer)"}},"id":7247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1267:137:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PolicyMetadata_$7168_memory_ptr","typeString":"struct PolicyNFT.PolicyMetadata memory"}},"src":"1245:159:18","typeDescriptions":{"typeIdentifier":"t_struct$_PolicyMetadata_$7168_storage","typeString":"struct PolicyNFT.PolicyMetadata storage ref"}},"id":7249,"nodeType":"ExpressionStatement","src":"1245:159:18"},{"expression":{"arguments":[{"id":7251,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7216,"src":"1424:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7252,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7233,"src":"1428:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7250,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[919,949],"referencedDeclaration":919,"src":"1414:9:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1414:23:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7254,"nodeType":"ExpressionStatement","src":"1414:23:18"},{"expression":{"id":7255,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7233,"src":"1454:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7231,"id":7256,"nodeType":"Return","src":"1447:15:18"}]},"functionSelector":"21a9bfe8","id":7258,"implemented":true,"kind":"function","modifiers":[{"id":7228,"kind":"modifierInvocation","modifierName":{"id":7227,"name":"onlyInsuranceCore","nameLocations":["1155:17:18"],"nodeType":"IdentifierPath","referencedDeclaration":7202,"src":"1155:17:18"},"nodeType":"ModifierInvocation","src":"1155:17:18"}],"name":"mintPolicy","nameLocation":"978:10:18","nodeType":"FunctionDefinition","parameters":{"id":7226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7216,"mutability":"mutable","name":"to","nameLocation":"1006:2:18","nodeType":"VariableDeclaration","scope":7258,"src":"998:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7215,"name":"address","nodeType":"ElementaryTypeName","src":"998:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7218,"mutability":"mutable","name":"vehicleId","nameLocation":"1033:9:18","nodeType":"VariableDeclaration","scope":7258,"src":"1019:23:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7217,"name":"string","nodeType":"ElementaryTypeName","src":"1019:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7221,"mutability":"mutable","name":"tier","nameLocation":"1084:4:18","nodeType":"VariableDeclaration","scope":7258,"src":"1052:36:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_VerificationTier_$6389","typeString":"enum IVehicleShield.VerificationTier"},"typeName":{"id":7220,"nodeType":"UserDefinedTypeName","pathNode":{"id":7219,"name":"IVehicleShield.VerificationTier","nameLocations":["1052:14:18","1067:16:18"],"nodeType":"IdentifierPath","referencedDeclaration":6389,"src":"1052:31:18"},"referencedDeclaration":6389,"src":"1052:31:18","typeDescriptions":{"typeIdentifier":"t_enum$_VerificationTier_$6389","typeString":"enum IVehicleShield.VerificationTier"}},"visibility":"internal"},{"constant":false,"id":7223,"mutability":"mutable","name":"premium","nameLocation":"1106:7:18","nodeType":"VariableDeclaration","scope":7258,"src":"1098:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7222,"name":"uint256","nodeType":"ElementaryTypeName","src":"1098:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7225,"mutability":"mutable","name":"coverage","nameLocation":"1131:8:18","nodeType":"VariableDeclaration","scope":7258,"src":"1123:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7224,"name":"uint256","nodeType":"ElementaryTypeName","src":"1123:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"988:157:18"},"returnParameters":{"id":7231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7230,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7258,"src":"1182:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7229,"name":"uint256","nodeType":"ElementaryTypeName","src":"1182:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1181:9:18"},"scope":7301,"src":"969:500:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[6444],"body":{"id":7269,"nodeType":"Block","src":"1553:41:18","statements":[{"expression":{"arguments":[{"id":7266,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7260,"src":"1578:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7265,"name":"ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":426,"src":"1570:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":7267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1570:17:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":7264,"id":7268,"nodeType":"Return","src":"1563:24:18"}]},"functionSelector":"ca009021","id":7270,"implemented":true,"kind":"function","modifiers":[],"name":"getPolicyOwner","nameLocation":"1488:14:18","nodeType":"FunctionDefinition","parameters":{"id":7261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7260,"mutability":"mutable","name":"policyId","nameLocation":"1511:8:18","nodeType":"VariableDeclaration","scope":7270,"src":"1503:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7259,"name":"uint256","nodeType":"ElementaryTypeName","src":"1503:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1502:18:18"},"returnParameters":{"id":7264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7263,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7270,"src":"1544:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7262,"name":"address","nodeType":"ElementaryTypeName","src":"1544:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1543:9:18"},"scope":7301,"src":"1479:115:18","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":7282,"nodeType":"Block","src":"1695:43:18","statements":[{"expression":{"baseExpression":{"id":7278,"name":"_policies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7173,"src":"1712:9:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_PolicyMetadata_$7168_storage_$","typeString":"mapping(uint256 => struct PolicyNFT.PolicyMetadata storage ref)"}},"id":7280,"indexExpression":{"id":7279,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7272,"src":"1722:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1712:19:18","typeDescriptions":{"typeIdentifier":"t_struct$_PolicyMetadata_$7168_storage","typeString":"struct PolicyNFT.PolicyMetadata storage ref"}},"functionReturnParameters":7277,"id":7281,"nodeType":"Return","src":"1705:26:18"}]},"functionSelector":"8cf7a293","id":7283,"implemented":true,"kind":"function","modifiers":[],"name":"getPolicyMetadata","nameLocation":"1613:17:18","nodeType":"FunctionDefinition","parameters":{"id":7273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7272,"mutability":"mutable","name":"policyId","nameLocation":"1639:8:18","nodeType":"VariableDeclaration","scope":7283,"src":"1631:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7271,"name":"uint256","nodeType":"ElementaryTypeName","src":"1631:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1630:18:18"},"returnParameters":{"id":7277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7276,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7283,"src":"1672:21:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_PolicyMetadata_$7168_memory_ptr","typeString":"struct PolicyNFT.PolicyMetadata"},"typeName":{"id":7275,"nodeType":"UserDefinedTypeName","pathNode":{"id":7274,"name":"PolicyMetadata","nameLocations":["1672:14:18"],"nodeType":"IdentifierPath","referencedDeclaration":7168,"src":"1672:14:18"},"referencedDeclaration":7168,"src":"1672:14:18","typeDescriptions":{"typeIdentifier":"t_struct$_PolicyMetadata_$7168_storage_ptr","typeString":"struct PolicyNFT.PolicyMetadata"}},"visibility":"internal"}],"src":"1671:23:18"},"scope":7301,"src":"1604:134:18","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[6449],"body":{"id":7299,"nodeType":"Block","src":"1813:68:18","statements":[{"expression":{"arguments":[{"id":7291,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7285,"src":"1829:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7290,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"1823:5:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":7292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1823:15:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7293,"nodeType":"ExpressionStatement","src":"1823:15:18"},{"expression":{"id":7297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"1848:26:18","subExpression":{"baseExpression":{"id":7294,"name":"_policies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7173,"src":"1855:9:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_PolicyMetadata_$7168_storage_$","typeString":"mapping(uint256 => struct PolicyNFT.PolicyMetadata storage ref)"}},"id":7296,"indexExpression":{"id":7295,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7285,"src":"1865:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1855:19:18","typeDescriptions":{"typeIdentifier":"t_struct$_PolicyMetadata_$7168_storage","typeString":"struct PolicyNFT.PolicyMetadata storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7298,"nodeType":"ExpressionStatement","src":"1848:26:18"}]},"functionSelector":"f457a0fe","id":7300,"implemented":true,"kind":"function","modifiers":[{"id":7288,"kind":"modifierInvocation","modifierName":{"id":7287,"name":"onlyInsuranceCore","nameLocations":["1795:17:18"],"nodeType":"IdentifierPath","referencedDeclaration":7202,"src":"1795:17:18"},"nodeType":"ModifierInvocation","src":"1795:17:18"}],"name":"burnPolicy","nameLocation":"1757:10:18","nodeType":"FunctionDefinition","parameters":{"id":7286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7285,"mutability":"mutable","name":"policyId","nameLocation":"1776:8:18","nodeType":"VariableDeclaration","scope":7300,"src":"1768:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7284,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1767:18:18"},"returnParameters":{"id":7289,"nodeType":"ParameterList","parameters":[],"src":"1813:0:18"},"scope":7301,"src":"1748:133:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":7302,"src":"200:1683:18","usedErrors":[13,18,195,200,209,214,219,226,231,236],"usedEvents":[24,1257,1266,1275]}],"src":"32:1851:18"},"id":18},"contracts/RiskAssessment.sol":{"ast":{"absolutePath":"contracts/RiskAssessment.sol","exportedSymbols":{"Context":[1511],"IPolicyNFT":[6450],"IRiskAssessment":[6421],"IVehicleShield":[6390],"Ownable":[147],"RiskAssessment":[7709]},"id":7710,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7303,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:19"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":7304,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7710,"sourceUnit":148,"src":"57:52:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/IVehicleShield.sol","file":"./IVehicleShield.sol","id":7305,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7710,"sourceUnit":6451,"src":"110:30:19","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7306,"name":"Ownable","nameLocations":["169:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"169:7:19"},"id":7307,"nodeType":"InheritanceSpecifier","src":"169:7:19"},{"baseName":{"id":7308,"name":"IRiskAssessment","nameLocations":["178:15:19"],"nodeType":"IdentifierPath","referencedDeclaration":6421,"src":"178:15:19"},"id":7309,"nodeType":"InheritanceSpecifier","src":"178:15:19"}],"canonicalName":"RiskAssessment","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":7709,"linearizedBaseContracts":[7709,6421,147,1511],"name":"RiskAssessment","nameLocation":"151:14:19","nodeType":"ContractDefinition","nodes":[{"canonicalName":"RiskAssessment.VehicleRisk","id":7324,"members":[{"constant":false,"id":7311,"mutability":"mutable","name":"baseValue","nameLocation":"237:9:19","nodeType":"VariableDeclaration","scope":7324,"src":"229:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7310,"name":"uint256","nodeType":"ElementaryTypeName","src":"229:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7313,"mutability":"mutable","name":"age","nameLocation":"264:3:19","nodeType":"VariableDeclaration","scope":7324,"src":"256:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7312,"name":"uint256","nodeType":"ElementaryTypeName","src":"256:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7315,"mutability":"mutable","name":"mileage","nameLocation":"285:7:19","nodeType":"VariableDeclaration","scope":7324,"src":"277:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7314,"name":"uint256","nodeType":"ElementaryTypeName","src":"277:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7317,"mutability":"mutable","name":"condition","nameLocation":"308:9:19","nodeType":"VariableDeclaration","scope":7324,"src":"302:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7316,"name":"uint8","nodeType":"ElementaryTypeName","src":"302:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":7319,"mutability":"mutable","name":"riskScore","nameLocation":"333:9:19","nodeType":"VariableDeclaration","scope":7324,"src":"327:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7318,"name":"uint8","nodeType":"ElementaryTypeName","src":"327:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":7321,"mutability":"mutable","name":"hasAccidentHistory","nameLocation":"357:18:19","nodeType":"VariableDeclaration","scope":7324,"src":"352:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7320,"name":"bool","nodeType":"ElementaryTypeName","src":"352:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7323,"mutability":"mutable","name":"lastAssessment","nameLocation":"393:14:19","nodeType":"VariableDeclaration","scope":7324,"src":"385:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7322,"name":"uint256","nodeType":"ElementaryTypeName","src":"385:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"VehicleRisk","nameLocation":"207:11:19","nodeType":"StructDefinition","scope":7709,"src":"200:214:19","visibility":"public"},{"canonicalName":"RiskAssessment.PremiumFactors","id":7333,"members":[{"constant":false,"id":7326,"mutability":"mutable","name":"baseRate","nameLocation":"464:8:19","nodeType":"VariableDeclaration","scope":7333,"src":"456:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7325,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7328,"mutability":"mutable","name":"ageMultiplier","nameLocation":"490:13:19","nodeType":"VariableDeclaration","scope":7333,"src":"482:21:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7327,"name":"uint256","nodeType":"ElementaryTypeName","src":"482:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7330,"mutability":"mutable","name":"conditionMultiplier","nameLocation":"521:19:19","nodeType":"VariableDeclaration","scope":7333,"src":"513:27:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7329,"name":"uint256","nodeType":"ElementaryTypeName","src":"513:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7332,"mutability":"mutable","name":"accidentPenalty","nameLocation":"558:15:19","nodeType":"VariableDeclaration","scope":7333,"src":"550:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7331,"name":"uint256","nodeType":"ElementaryTypeName","src":"550:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"PremiumFactors","nameLocation":"431:14:19","nodeType":"StructDefinition","scope":7709,"src":"424:156:19","visibility":"public"},{"constant":false,"functionSelector":"e51267c7","id":7338,"mutability":"mutable","name":"vehicleRisks","nameLocation":"624:12:19","nodeType":"VariableDeclaration","scope":7709,"src":"586:50:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_VehicleRisk_$7324_storage_$","typeString":"mapping(string => struct RiskAssessment.VehicleRisk)"},"typeName":{"id":7337,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7334,"name":"string","nodeType":"ElementaryTypeName","src":"594:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"nodeType":"Mapping","src":"586:30:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_VehicleRisk_$7324_storage_$","typeString":"mapping(string => struct RiskAssessment.VehicleRisk)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7336,"nodeType":"UserDefinedTypeName","pathNode":{"id":7335,"name":"VehicleRisk","nameLocations":["604:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":7324,"src":"604:11:19"},"referencedDeclaration":7324,"src":"604:11:19","typeDescriptions":{"typeIdentifier":"t_struct$_VehicleRisk_$7324_storage_ptr","typeString":"struct RiskAssessment.VehicleRisk"}}},"visibility":"public"},{"constant":false,"functionSelector":"a870afcd","id":7344,"mutability":"mutable","name":"tierPremiums","nameLocation":"708:12:19","nodeType":"VariableDeclaration","scope":7709,"src":"642:78:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_VerificationTier_$6389_$_t_struct$_PremiumFactors_$7333_storage_$","typeString":"mapping(enum IVehicleShield.VerificationTier => struct RiskAssessment.PremiumFactors)"},"typeName":{"id":7343,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7340,"nodeType":"UserDefinedTypeName","pathNode":{"id":7339,"name":"IVehicleShield.VerificationTier","nameLocations":["650:14:19","665:16:19"],"nodeType":"IdentifierPath","referencedDeclaration":6389,"src":"650:31:19"},"referencedDeclaration":6389,"src":"650:31:19","typeDescriptions":{"typeIdentifier":"t_enum$_VerificationTier_$6389","typeString":"enum IVehicleShield.VerificationTier"}},"nodeType":"Mapping","src":"642:58:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_VerificationTier_$6389_$_t_struct$_PremiumFactors_$7333_storage_$","typeString":"mapping(enum IVehicleShield.VerificationTier => struct RiskAssessment.PremiumFactors)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7342,"nodeType":"UserDefinedTypeName","pathNode":{"id":7341,"name":"PremiumFactors","nameLocations":["685:14:19"],"nodeType":"IdentifierPath","referencedDeclaration":7333,"src":"685:14:19"},"referencedDeclaration":7333,"src":"685:14:19","typeDescriptions":{"typeIdentifier":"t_struct$_PremiumFactors_$7333_storage_ptr","typeString":"struct RiskAssessment.PremiumFactors"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"3d95572704130bb661d2805806f913c134f4cb017e58bdf1c7041db1055001e1","id":7353,"name":"RiskAssessed","nameLocation":"737:12:19","nodeType":"EventDefinition","parameters":{"id":7352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7346,"indexed":false,"mutability":"mutable","name":"regPlate","nameLocation":"757:8:19","nodeType":"VariableDeclaration","scope":7353,"src":"750:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7345,"name":"string","nodeType":"ElementaryTypeName","src":"750:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7348,"indexed":false,"mutability":"mutable","name":"riskScore","nameLocation":"773:9:19","nodeType":"VariableDeclaration","scope":7353,"src":"767:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7347,"name":"uint8","nodeType":"ElementaryTypeName","src":"767:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":7351,"indexed":false,"mutability":"mutable","name":"tier","nameLocation":"816:4:19","nodeType":"VariableDeclaration","scope":7353,"src":"784:36:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_VerificationTier_$6389","typeString":"enum IVehicleShield.VerificationTier"},"typeName":{"id":7350,"nodeType":"UserDefinedTypeName","pathNode":{"id":7349,"name":"IVehicleShield.VerificationTier","nameLocations":["784:14:19","799:16:19"],"nodeType":"IdentifierPath","referencedDeclaration":6389,"src":"784:31:19"},"referencedDeclaration":6389,"src":"784:31:19","typeDescriptions":{"typeIdentifier":"t_enum$_VerificationTier_$6389","typeString":"enum IVehicleShield.VerificationTier"}},"visibility":"internal"}],"src":"749:72:19"},"src":"731:91:19"},{"body":{"id":7399,"nodeType":"Block","src":"866:308:19","statements":[{"expression":{"id":7371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7360,"name":"tierPremiums","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7344,"src":"876:12:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_VerificationTier_$6389_$_t_struct$_PremiumFactors_$7333_storage_$","typeString":"mapping(enum IVehicleShield.VerificationTier => struct RiskAssessment.PremiumFactors storage ref)"}},"id":7364,"indexExpression":{"expression":{"expression":{"id":7361,"name":"IVehicleShield","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6390,"src":"889:14:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IVehicleShield_$6390_$","typeString":"type(contract IVehicleShield)"}},"id":7362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"904:16:19","memberName":"VerificationTier","nodeType":"MemberAccess","referencedDeclaration":6389,"src":"889:31:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_VerificationTier_$6389_$","typeString":"type(enum IVehicleShield.VerificationTier)"}},"id":7363,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"921:5:19","memberName":"Basic","nodeType":"MemberAccess","referencedDeclaration":6386,"src":"889:37:19","typeDescriptions":{"typeIdentifier":"t_enum$_VerificationTier_$6389","typeString":"enum IVehicleShield.VerificationTier"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"876:51:19","typeDescriptions":{"typeIdentifier":"t_struct$_PremiumFactors_$7333_storage","typeString":"struct RiskAssessment.PremiumFactors storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"302e3031","id":7366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"945:10:19","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"value":"0.01"},{"hexValue":"32","id":7367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"957:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},{"hexValue":"35","id":7368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"960:1:19","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},{"hexValue":"3130","id":7369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"963:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}],"id":7365,"name":"PremiumFactors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7333,"src":"930:14:19","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_PremiumFactors_$7333_storage_ptr_$","typeString":"type(struct RiskAssessment.PremiumFactors storage pointer)"}},"id":7370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"930:36:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PremiumFactors_$7333_memory_ptr","typeString":"struct RiskAssessment.PremiumFactors memory"}},"src":"876:90:19","typeDescriptions":{"typeIdentifier":"t_struct$_PremiumFactors_$7333_storage","typeString":"struct RiskAssessment.PremiumFactors storage ref"}},"id":7372,"nodeType":"ExpressionStatement","src":"876:90:19"},{"expression":{"id":7384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7373,"name":"tierPremiums","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7344,"src":"976:12:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_VerificationTier_$6389_$_t_struct$_PremiumFactors_$7333_storage_$","typeString":"mapping(enum IVehicleShield.VerificationTier => struct RiskAssessment.PremiumFactors storage ref)"}},"id":7377,"indexExpression":{"expression":{"expression":{"id":7374,"name":"IVehicleShield","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6390,"src":"989:14:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IVehicleShield_$6390_$","typeString":"type(contract IVehicleShield)"}},"id":7375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1004:16:19","memberName":"VerificationTier","nodeType":"MemberAccess","referencedDeclaration":6389,"src":"989:31:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_VerificationTier_$6389_$","typeString":"type(enum IVehicleShield.VerificationTier)"}},"id":7376,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1021:6:19","memberName":"Medium","nodeType":"MemberAccess","referencedDeclaration":6387,"src":"989:38:19","typeDescriptions":{"typeIdentifier":"t_enum$_VerificationTier_$6389","typeString":"enum IVehicleShield.VerificationTier"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"976:52:19","typeDescriptions":{"typeIdentifier":"t_struct$_PremiumFactors_$7333_storage","typeString":"struct RiskAssessment.PremiumFactors storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"302e3032","id":7379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1046:10:19","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_20000000000000000_by_1","typeString":"int_const 20000000000000000"},"value":"0.02"},{"hexValue":"31","id":7380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1058:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},{"hexValue":"33","id":7381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1061:1:19","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},{"hexValue":"37","id":7382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1064:1:19","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_20000000000000000_by_1","typeString":"int_const 20000000000000000"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"}],"id":7378,"name":"PremiumFactors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7333,"src":"1031:14:19","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_PremiumFactors_$7333_storage_ptr_$","typeString":"type(struct RiskAssessment.PremiumFactors storage pointer)"}},"id":7383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1031:35:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PremiumFactors_$7333_memory_ptr","typeString":"struct RiskAssessment.PremiumFactors memory"}},"src":"976:90:19","typeDescriptions":{"typeIdentifier":"t_struct$_PremiumFactors_$7333_storage","typeString":"struct RiskAssessment.PremiumFactors storage ref"}},"id":7385,"nodeType":"ExpressionStatement","src":"976:90:19"},{"expression":{"id":7397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7386,"name":"tierPremiums","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7344,"src":"1076:12:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_VerificationTier_$6389_$_t_struct$_PremiumFactors_$7333_storage_$","typeString":"mapping(enum IVehicleShield.VerificationTier => struct RiskAssessment.PremiumFactors storage ref)"}},"id":7390,"indexExpression":{"expression":{"expression":{"id":7387,"name":"IVehicleShield","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6390,"src":"1089:14:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IVehicleShield_$6390_$","typeString":"type(contract IVehicleShield)"}},"id":7388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1104:16:19","memberName":"VerificationTier","nodeType":"MemberAccess","referencedDeclaration":6389,"src":"1089:31:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_VerificationTier_$6389_$","typeString":"type(enum IVehicleShield.VerificationTier)"}},"id":7389,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1121:7:19","memberName":"Premium","nodeType":"MemberAccess","referencedDeclaration":6388,"src":"1089:39:19","typeDescriptions":{"typeIdentifier":"t_enum$_VerificationTier_$6389","typeString":"enum IVehicleShield.VerificationTier"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1076:53:19","typeDescriptions":{"typeIdentifier":"t_struct$_PremiumFactors_$7333_storage","typeString":"struct RiskAssessment.PremiumFactors storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"302e3033","id":7392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1147:10:19","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_30000000000000000_by_1","typeString":"int_const 30000000000000000"},"value":"0.03"},{"hexValue":"31","id":7393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1159:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},{"hexValue":"32","id":7394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1162:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},{"hexValue":"35","id":7395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1165:1:19","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_30000000000000000_by_1","typeString":"int_const 30000000000000000"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"}],"id":7391,"name":"PremiumFactors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7333,"src":"1132:14:19","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_PremiumFactors_$7333_storage_ptr_$","typeString":"type(struct RiskAssessment.PremiumFactors storage pointer)"}},"id":7396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1132:35:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PremiumFactors_$7333_memory_ptr","typeString":"struct RiskAssessment.PremiumFactors memory"}},"src":"1076:91:19","typeDescriptions":{"typeIdentifier":"t_struct$_PremiumFactors_$7333_storage","typeString":"struct RiskAssessment.PremiumFactors storage ref"}},"id":7398,"nodeType":"ExpressionStatement","src":"1076:91:19"}]},"id":7400,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":7356,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"854:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"858:6:19","memberName":"sender","nodeType":"MemberAccess","src":"854:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":7358,"kind":"baseConstructorSpecifier","modifierName":{"id":7355,"name":"Ownable","nameLocations":["846:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"846:7:19"},"nodeType":"ModifierInvocation","src":"846:19:19"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7354,"nodeType":"ParameterList","parameters":[],"src":"843:2:19"},"returnParameters":{"id":7359,"nodeType":"ParameterList","parameters":[],"src":"866:0:19"},"scope":7709,"src":"832:342:19","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[6410],"body":{"id":7485,"nodeType":"Block","src":"1438:805:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":7423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7421,"name":"_condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7410,"src":"1456:10:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"3130","id":7422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1470:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1456:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f6e646974696f6e206d75737420626520312d3130","id":7424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1474:24:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_240f2cb56ab5d552ae68690a8e5deef2a9c45637fcc1f8de554c4218753ac3a7","typeString":"literal_string \"Condition must be 1-10\""},"value":"Condition must be 1-10"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_240f2cb56ab5d552ae68690a8e5deef2a9c45637fcc1f8de554c4218753ac3a7","typeString":"literal_string \"Condition must be 1-10\""}],"id":7420,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1448:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1448:51:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7426,"nodeType":"ExpressionStatement","src":"1448:51:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7428,"name":"_mileage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7408,"src":"1517:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31303030303030","id":7429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1529:7:19","typeDescriptions":{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"},"value":"1000000"},"src":"1517:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206d696c65616765","id":7431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1538:17:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_a0cdf71dbdc54f4514cca7f791da40224dcc7f2b64e85da63bfb02a2785baf3b","typeString":"literal_string \"Invalid mileage\""},"value":"Invalid mileage"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a0cdf71dbdc54f4514cca7f791da40224dcc7f2b64e85da63bfb02a2785baf3b","typeString":"literal_string \"Invalid mileage\""}],"id":7427,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1509:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1509:47:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7433,"nodeType":"ExpressionStatement","src":"1509:47:19"},{"assignments":[7435],"declarations":[{"constant":false,"id":7435,"mutability":"mutable","name":"riskScore","nameLocation":"1581:9:19","nodeType":"VariableDeclaration","scope":7485,"src":"1575:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7434,"name":"uint8","nodeType":"ElementaryTypeName","src":"1575:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":7442,"initialValue":{"arguments":[{"id":7437,"name":"_age","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7406,"src":"1612:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7438,"name":"_mileage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7408,"src":"1618:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7439,"name":"_condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7410,"src":"1628:10:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":7440,"name":"_hasAccidentHistory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7412,"src":"1640:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":7436,"name":"calculateRiskScore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7564,"src":"1593:18:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint8_$_t_bool_$returns$_t_uint8_$","typeString":"function (uint256,uint256,uint8,bool) pure returns (uint8)"}},"id":7441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1593:67:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"1575:85:19"},{"expression":{"id":7456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7443,"name":"vehicleRisks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7338,"src":"1679:12:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_VehicleRisk_$7324_storage_$","typeString":"mapping(string memory => struct RiskAssessment.VehicleRisk storage ref)"}},"id":7445,"indexExpression":{"id":7444,"name":"_regPlate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7402,"src":"1692:9:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1679:23:19","typeDescriptions":{"typeIdentifier":"t_struct$_VehicleRisk_$7324_storage","typeString":"struct RiskAssessment.VehicleRisk storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7447,"name":"_baseValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7404,"src":"1742:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7448,"name":"_age","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7406,"src":"1771:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7449,"name":"_mileage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7408,"src":"1798:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7450,"name":"_condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7410,"src":"1831:10:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":7451,"name":"riskScore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7435,"src":"1866:9:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":7452,"name":"_hasAccidentHistory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7412,"src":"1909:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":7453,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1958:5:19","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1964:9:19","memberName":"timestamp","nodeType":"MemberAccess","src":"1958:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7446,"name":"VehicleRisk","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7324,"src":"1705:11:19","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_VehicleRisk_$7324_storage_ptr_$","typeString":"type(struct RiskAssessment.VehicleRisk storage pointer)"}},"id":7455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["1731:9:19","1766:3:19","1789:7:19","1820:9:19","1855:9:19","1889:18:19","1942:14:19"],"names":["baseValue","age","mileage","condition","riskScore","hasAccidentHistory","lastAssessment"],"nodeType":"FunctionCall","src":"1705:279:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_VehicleRisk_$7324_memory_ptr","typeString":"struct RiskAssessment.VehicleRisk memory"}},"src":"1679:305:19","typeDescriptions":{"typeIdentifier":"t_struct$_VehicleRisk_$7324_storage","typeString":"struct RiskAssessment.VehicleRisk storage ref"}},"id":7457,"nodeType":"ExpressionStatement","src":"1679:305:19"},{"assignments":[7462],"declarations":[{"constant":false,"id":7462,"mutability":"mutable","name":"tier","nameLocation":"2027:4:19","nodeType":"VariableDeclaration","scope":7485,"src":"1995:36:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_VerificationTier_$6389","typeString":"enum IVehicleShield.VerificationTier"},"typeName":{"id":7461,"nodeType":"UserDefinedTypeName","pathNode":{"id":7460,"name":"IVehicleShield.VerificationTier","nameLocations":["1995:14:19","2010:16:19"],"nodeType":"IdentifierPath","referencedDeclaration":6389,"src":"1995:31:19"},"referencedDeclaration":6389,"src":"1995:31:19","typeDescriptions":{"typeIdentifier":"t_enum$_VerificationTier_$6389","typeString":"enum IVehicleShield.VerificationTier"}},"visibility":"internal"}],"id":7467,"initialValue":{"arguments":[{"id":7464,"name":"_baseValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7404,"src":"2048:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7465,"name":"riskScore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7435,"src":"2060:9:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":7463,"name":"determineTier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7605,"src":"2034:13:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint8_$returns$_t_enum$_VerificationTier_$6389_$","typeString":"function (uint256,uint8) pure returns (enum IVehicleShield.VerificationTier)"}},"id":7466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2034:36:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_VerificationTier_$6389","typeString":"enum IVehicleShield.VerificationTier"}},"nodeType":"VariableDeclarationStatement","src":"1995:75:19"},{"assignments":[7469],"declarations":[{"constant":false,"id":7469,"mutability":"mutable","name":"premium","nameLocation":"2088:7:19","nodeType":"VariableDeclaration","scope":7485,"src":"2080:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7468,"name":"uint256","nodeType":"ElementaryTypeName","src":"2080:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7474,"initialValue":{"arguments":[{"id":7471,"name":"_regPlate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7402,"src":"2115:9:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":7472,"name":"tier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7462,"src":"2126:4:19","typeDescriptions":{"typeIdentifier":"t_enum$_VerificationTier_$6389","typeString":"enum IVehicleShield.VerificationTier"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_enum$_VerificationTier_$6389","typeString":"enum IVehicleShield.VerificationTier"}],"id":7470,"name":"calculatePremium","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7667,"src":"2098:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_string_memory_ptr_$_t_enum$_VerificationTier_$6389_$returns$_t_uint256_$","typeString":"function (string memory,enum IVehicleShield.VerificationTier) view returns (uint256)"}},"id":7473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2098:33:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2080:51:19"},{"eventCall":{"arguments":[{"id":7476,"name":"_regPlate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7402,"src":"2168:9:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":7477,"name":"riskScore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7435,"src":"2179:9:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":7478,"name":"tier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7462,"src":"2190:4:19","typeDescriptions":{"typeIdentifier":"t_enum$_VerificationTier_$6389","typeString":"enum IVehicleShield.VerificationTier"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_enum$_VerificationTier_$6389","typeString":"enum IVehicleShield.VerificationTier"}],"id":7475,"name":"RiskAssessed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7353,"src":"2155:12:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint8_$_t_enum$_VerificationTier_$6389_$returns$__$","typeString":"function (string memory,uint8,enum IVehicleShield.VerificationTier)"}},"id":7479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2155:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7480,"nodeType":"EmitStatement","src":"2150:45:19"},{"expression":{"components":[{"id":7481,"name":"tier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7462,"src":"2222:4:19","typeDescriptions":{"typeIdentifier":"t_enum$_VerificationTier_$6389","typeString":"enum IVehicleShield.VerificationTier"}},{"id":7482,"name":"premium","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7469,"src":"2228:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7483,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2221:15:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_enum$_VerificationTier_$6389_$_t_uint256_$","typeString":"tuple(enum IVehicleShield.VerificationTier,uint256)"}},"functionReturnParameters":7419,"id":7484,"nodeType":"Return","src":"2214:22:19"}]},"functionSelector":"0944a8ca","id":7486,"implemented":true,"kind":"function","modifiers":[],"name":"assessVehicle","nameLocation":"1189:13:19","nodeType":"FunctionDefinition","parameters":{"id":7413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7402,"mutability":"mutable","name":"_regPlate","nameLocation":"1226:9:19","nodeType":"VariableDeclaration","scope":7486,"src":"1212:23:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7401,"name":"string","nodeType":"ElementaryTypeName","src":"1212:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7404,"mutability":"mutable","name":"_baseValue","nameLocation":"1253:10:19","nodeType":"VariableDeclaration","scope":7486,"src":"1245:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7403,"name":"uint256","nodeType":"ElementaryTypeName","src":"1245:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7406,"mutability":"mutable","name":"_age","nameLocation":"1281:4:19","nodeType":"VariableDeclaration","scope":7486,"src":"1273:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7405,"name":"uint256","nodeType":"ElementaryTypeName","src":"1273:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7408,"mutability":"mutable","name":"_mileage","nameLocation":"1303:8:19","nodeType":"VariableDeclaration","scope":7486,"src":"1295:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7407,"name":"uint256","nodeType":"ElementaryTypeName","src":"1295:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7410,"mutability":"mutable","name":"_condition","nameLocation":"1327:10:19","nodeType":"VariableDeclaration","scope":7486,"src":"1321:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7409,"name":"uint8","nodeType":"ElementaryTypeName","src":"1321:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":7412,"mutability":"mutable","name":"_hasAccidentHistory","nameLocation":"1352:19:19","nodeType":"VariableDeclaration","scope":7486,"src":"1347:24:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7411,"name":"bool","nodeType":"ElementaryTypeName","src":"1347:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1202:175:19"},"returnParameters":{"id":7419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7416,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7486,"src":"1396:31:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_VerificationTier_$6389","typeString":"enum IVehicleShield.VerificationTier"},"typeName":{"id":7415,"nodeType":"UserDefinedTypeName","pathNode":{"id":7414,"name":"IVehicleShield.VerificationTier","nameLocations":["1396:14:19","1411:16:19"],"nodeType":"IdentifierPath","referencedDeclaration":6389,"src":"1396:31:19"},"referencedDeclaration":6389,"src":"1396:31:19","typeDescriptions":{"typeIdentifier":"t_enum$_VerificationTier_$6389","typeString":"enum IVehicleShield.VerificationTier"}},"visibility":"internal"},{"constant":false,"id":7418,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7486,"src":"1429:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7417,"name":"uint256","nodeType":"ElementaryTypeName","src":"1429:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1395:42:19"},"scope":7709,"src":"1180:1063:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7563,"nodeType":"Block","src":"2423:342:19","statements":[{"assignments":[7500],"declarations":[{"constant":false,"id":7500,"mutability":"mutable","name":"score","nameLocation":"2441:5:19","nodeType":"VariableDeclaration","scope":7563,"src":"2433:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7499,"name":"uint256","nodeType":"ElementaryTypeName","src":"2433:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7502,"initialValue":{"hexValue":"313030","id":7501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2449:3:19","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"nodeType":"VariableDeclarationStatement","src":"2433:19:19"},{"expression":{"id":7510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7503,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7500,"src":"2462:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7504,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7500,"src":"2470:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7505,"name":"_age","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7488,"src":"2479:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":7506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2486:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2479:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7508,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2478:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2470:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2462:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7511,"nodeType":"ExpressionStatement","src":"2462:26:19"},{"expression":{"id":7522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7512,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7500,"src":"2498:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7513,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7500,"src":"2506:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7514,"name":"_mileage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7490,"src":"2516:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":7515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2527:5:19","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"2516:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7517,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2515:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"33","id":7518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2536:1:19","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"2515:22:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7520,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2514:24:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2506:32:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2498:40:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7523,"nodeType":"ExpressionStatement","src":"2498:40:19"},{"expression":{"id":7531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7524,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7500,"src":"2548:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7525,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7500,"src":"2556:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":7528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7526,"name":"_condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7492,"src":"2565:10:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"35","id":7527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2578:1:19","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"2565:14:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":7529,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2564:16:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"2556:24:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2548:32:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7532,"nodeType":"ExpressionStatement","src":"2548:32:19"},{"condition":{"id":7533,"name":"_hasAccidentHistory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7494,"src":"2594:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7541,"nodeType":"IfStatement","src":"2590:68:19","trueBody":{"id":7540,"nodeType":"Block","src":"2615:43:19","statements":[{"expression":{"id":7538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7534,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7500,"src":"2629:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7535,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7500,"src":"2637:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"3230","id":7536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2645:2:19","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"src":"2637:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2629:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7539,"nodeType":"ExpressionStatement","src":"2629:18:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7542,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7500,"src":"2671:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"313030","id":7543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2679:3:19","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"2671:11:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7549,"nodeType":"IfStatement","src":"2667:28:19","trueBody":{"expression":{"id":7547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7545,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7500,"src":"2684:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"313030","id":7546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2692:3:19","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"2684:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7548,"nodeType":"ExpressionStatement","src":"2684:11:19"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7550,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7500,"src":"2709:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":7551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2717:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2709:9:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7557,"nodeType":"IfStatement","src":"2705:24:19","trueBody":{"expression":{"id":7555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7553,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7500,"src":"2720:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":7554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2728:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2720:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7556,"nodeType":"ExpressionStatement","src":"2720:9:19"}},{"expression":{"arguments":[{"id":7560,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7500,"src":"2752:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7559,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2746:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":7558,"name":"uint8","nodeType":"ElementaryTypeName","src":"2746:5:19","typeDescriptions":{}}},"id":7561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2746:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":7498,"id":7562,"nodeType":"Return","src":"2739:19:19"}]},"functionSelector":"70ac03d8","id":7564,"implemented":true,"kind":"function","modifiers":[],"name":"calculateRiskScore","nameLocation":"2262:18:19","nodeType":"FunctionDefinition","parameters":{"id":7495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7488,"mutability":"mutable","name":"_age","nameLocation":"2298:4:19","nodeType":"VariableDeclaration","scope":7564,"src":"2290:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7487,"name":"uint256","nodeType":"ElementaryTypeName","src":"2290:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7490,"mutability":"mutable","name":"_mileage","nameLocation":"2320:8:19","nodeType":"VariableDeclaration","scope":7564,"src":"2312:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7489,"name":"uint256","nodeType":"ElementaryTypeName","src":"2312:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7492,"mutability":"mutable","name":"_condition","nameLocation":"2344:10:19","nodeType":"VariableDeclaration","scope":7564,"src":"2338:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7491,"name":"uint8","nodeType":"ElementaryTypeName","src":"2338:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":7494,"mutability":"mutable","name":"_hasAccidentHistory","nameLocation":"2369:19:19","nodeType":"VariableDeclaration","scope":7564,"src":"2364:24:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7493,"name":"bool","nodeType":"ElementaryTypeName","src":"2364:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2280:114:19"},"returnParameters":{"id":7498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7497,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7564,"src":"2416:5:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7496,"name":"uint8","nodeType":"ElementaryTypeName","src":"2416:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2415:7:19"},"scope":7709,"src":"2253:512:19","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":7604,"nodeType":"Block","src":"2890:315:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7574,"name":"_baseValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7566,"src":"2904:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"302e32","id":7575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2918:9:19","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_200000000000000000_by_1","typeString":"int_const 200000000000000000"},"value":"0.2"},"src":"2904:23:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":7579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7577,"name":"_riskScore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7568,"src":"2931:10:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"3830","id":7578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2945:2:19","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},"src":"2931:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2904:43:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7586,"name":"_baseValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7566,"src":"3030:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"302e31","id":7587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3044:9:19","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000_by_1","typeString":"int_const 100000000000000000"},"value":"0.1"},"src":"3030:23:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":7591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7589,"name":"_riskScore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7568,"src":"3057:10:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"3630","id":7590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3071:2:19","typeDescriptions":{"typeIdentifier":"t_rational_60_by_1","typeString":"int_const 60"},"value":"60"},"src":"3057:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3030:43:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7598,"nodeType":"IfStatement","src":"3026:119:19","trueBody":{"id":7597,"nodeType":"Block","src":"3075:70:19","statements":[{"expression":{"expression":{"expression":{"id":7593,"name":"IVehicleShield","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6390,"src":"3096:14:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IVehicleShield_$6390_$","typeString":"type(contract IVehicleShield)"}},"id":7594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3111:16:19","memberName":"VerificationTier","nodeType":"MemberAccess","referencedDeclaration":6389,"src":"3096:31:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_VerificationTier_$6389_$","typeString":"type(enum IVehicleShield.VerificationTier)"}},"id":7595,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3128:6:19","memberName":"Medium","nodeType":"MemberAccess","referencedDeclaration":6387,"src":"3096:38:19","typeDescriptions":{"typeIdentifier":"t_enum$_VerificationTier_$6389","typeString":"enum IVehicleShield.VerificationTier"}},"functionReturnParameters":7573,"id":7596,"nodeType":"Return","src":"3089:45:19"}]}},"id":7599,"nodeType":"IfStatement","src":"2900:245:19","trueBody":{"id":7585,"nodeType":"Block","src":"2949:71:19","statements":[{"expression":{"expression":{"expression":{"id":7581,"name":"IVehicleShield","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6390,"src":"2970:14:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IVehicleShield_$6390_$","typeString":"type(contract IVehicleShield)"}},"id":7582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2985:16:19","memberName":"VerificationTier","nodeType":"MemberAccess","referencedDeclaration":6389,"src":"2970:31:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_VerificationTier_$6389_$","typeString":"type(enum IVehicleShield.VerificationTier)"}},"id":7583,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3002:7:19","memberName":"Premium","nodeType":"MemberAccess","referencedDeclaration":6388,"src":"2970:39:19","typeDescriptions":{"typeIdentifier":"t_enum$_VerificationTier_$6389","typeString":"enum IVehicleShield.VerificationTier"}},"functionReturnParameters":7573,"id":7584,"nodeType":"Return","src":"2963:46:19"}]}},{"expression":{"expression":{"expression":{"id":7600,"name":"IVehicleShield","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6390,"src":"3161:14:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IVehicleShield_$6390_$","typeString":"type(contract IVehicleShield)"}},"id":7601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3176:16:19","memberName":"VerificationTier","nodeType":"MemberAccess","referencedDeclaration":6389,"src":"3161:31:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_VerificationTier_$6389_$","typeString":"type(enum IVehicleShield.VerificationTier)"}},"id":7602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3193:5:19","memberName":"Basic","nodeType":"MemberAccess","referencedDeclaration":6386,"src":"3161:37:19","typeDescriptions":{"typeIdentifier":"t_enum$_VerificationTier_$6389","typeString":"enum IVehicleShield.VerificationTier"}},"functionReturnParameters":7573,"id":7603,"nodeType":"Return","src":"3154:44:19"}]},"functionSelector":"af27c152","id":7605,"implemented":true,"kind":"function","modifiers":[],"name":"determineTier","nameLocation":"2784:13:19","nodeType":"FunctionDefinition","parameters":{"id":7569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7566,"mutability":"mutable","name":"_baseValue","nameLocation":"2806:10:19","nodeType":"VariableDeclaration","scope":7605,"src":"2798:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7565,"name":"uint256","nodeType":"ElementaryTypeName","src":"2798:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7568,"mutability":"mutable","name":"_riskScore","nameLocation":"2824:10:19","nodeType":"VariableDeclaration","scope":7605,"src":"2818:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7567,"name":"uint8","nodeType":"ElementaryTypeName","src":"2818:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2797:38:19"},"returnParameters":{"id":7573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7572,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7605,"src":"2857:31:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_VerificationTier_$6389","typeString":"enum IVehicleShield.VerificationTier"},"typeName":{"id":7571,"nodeType":"UserDefinedTypeName","pathNode":{"id":7570,"name":"IVehicleShield.VerificationTier","nameLocations":["2857:14:19","2872:16:19"],"nodeType":"IdentifierPath","referencedDeclaration":6389,"src":"2857:31:19"},"referencedDeclaration":6389,"src":"2857:31:19","typeDescriptions":{"typeIdentifier":"t_enum$_VerificationTier_$6389","typeString":"enum IVehicleShield.VerificationTier"}},"visibility":"internal"}],"src":"2856:33:19"},"scope":7709,"src":"2775:430:19","stateMutability":"pure","virtual":false,"visibility":"public"},{"baseFunctions":[6420],"body":{"id":7666,"nodeType":"Block","src":"3358:432:19","statements":[{"assignments":[7617],"declarations":[{"constant":false,"id":7617,"mutability":"mutable","name":"risk","nameLocation":"3388:4:19","nodeType":"VariableDeclaration","scope":7666,"src":"3368:24:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_VehicleRisk_$7324_storage_ptr","typeString":"struct RiskAssessment.VehicleRisk"},"typeName":{"id":7616,"nodeType":"UserDefinedTypeName","pathNode":{"id":7615,"name":"VehicleRisk","nameLocations":["3368:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":7324,"src":"3368:11:19"},"referencedDeclaration":7324,"src":"3368:11:19","typeDescriptions":{"typeIdentifier":"t_struct$_VehicleRisk_$7324_storage_ptr","typeString":"struct RiskAssessment.VehicleRisk"}},"visibility":"internal"}],"id":7621,"initialValue":{"baseExpression":{"id":7618,"name":"vehicleRisks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7338,"src":"3395:12:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_VehicleRisk_$7324_storage_$","typeString":"mapping(string memory => struct RiskAssessment.VehicleRisk storage ref)"}},"id":7620,"indexExpression":{"id":7619,"name":"_regPlate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7607,"src":"3408:9:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3395:23:19","typeDescriptions":{"typeIdentifier":"t_struct$_VehicleRisk_$7324_storage","typeString":"struct RiskAssessment.VehicleRisk storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3368:50:19"},{"assignments":[7624],"declarations":[{"constant":false,"id":7624,"mutability":"mutable","name":"factors","nameLocation":"3451:7:19","nodeType":"VariableDeclaration","scope":7666,"src":"3428:30:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PremiumFactors_$7333_storage_ptr","typeString":"struct RiskAssessment.PremiumFactors"},"typeName":{"id":7623,"nodeType":"UserDefinedTypeName","pathNode":{"id":7622,"name":"PremiumFactors","nameLocations":["3428:14:19"],"nodeType":"IdentifierPath","referencedDeclaration":7333,"src":"3428:14:19"},"referencedDeclaration":7333,"src":"3428:14:19","typeDescriptions":{"typeIdentifier":"t_struct$_PremiumFactors_$7333_storage_ptr","typeString":"struct RiskAssessment.PremiumFactors"}},"visibility":"internal"}],"id":7628,"initialValue":{"baseExpression":{"id":7625,"name":"tierPremiums","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7344,"src":"3461:12:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_VerificationTier_$6389_$_t_struct$_PremiumFactors_$7333_storage_$","typeString":"mapping(enum IVehicleShield.VerificationTier => struct RiskAssessment.PremiumFactors storage ref)"}},"id":7627,"indexExpression":{"id":7626,"name":"_tier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7610,"src":"3474:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_VerificationTier_$6389","typeString":"enum IVehicleShield.VerificationTier"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3461:19:19","typeDescriptions":{"typeIdentifier":"t_struct$_PremiumFactors_$7333_storage","typeString":"struct RiskAssessment.PremiumFactors storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3428:52:19"},{"assignments":[7630],"declarations":[{"constant":false,"id":7630,"mutability":"mutable","name":"premium","nameLocation":"3507:7:19","nodeType":"VariableDeclaration","scope":7666,"src":"3499:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7629,"name":"uint256","nodeType":"ElementaryTypeName","src":"3499:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7633,"initialValue":{"expression":{"id":7631,"name":"factors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7624,"src":"3517:7:19","typeDescriptions":{"typeIdentifier":"t_struct$_PremiumFactors_$7333_storage_ptr","typeString":"struct RiskAssessment.PremiumFactors storage pointer"}},"id":7632,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3525:8:19","memberName":"baseRate","nodeType":"MemberAccess","referencedDeclaration":7326,"src":"3517:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3499:34:19"},{"expression":{"id":7641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7634,"name":"premium","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7630,"src":"3543:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7635,"name":"risk","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7617,"src":"3555:4:19","typeDescriptions":{"typeIdentifier":"t_struct$_VehicleRisk_$7324_storage_ptr","typeString":"struct RiskAssessment.VehicleRisk storage pointer"}},"id":7636,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3560:3:19","memberName":"age","nodeType":"MemberAccess","referencedDeclaration":7313,"src":"3555:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":7637,"name":"factors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7624,"src":"3566:7:19","typeDescriptions":{"typeIdentifier":"t_struct$_PremiumFactors_$7333_storage_ptr","typeString":"struct RiskAssessment.PremiumFactors storage pointer"}},"id":7638,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3574:13:19","memberName":"ageMultiplier","nodeType":"MemberAccess","referencedDeclaration":7328,"src":"3566:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3555:32:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7640,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3554:34:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3543:45:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7642,"nodeType":"ExpressionStatement","src":"3543:45:19"},{"expression":{"id":7653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7643,"name":"premium","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7630,"src":"3598:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":7647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3611:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":7645,"name":"risk","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7617,"src":"3616:4:19","typeDescriptions":{"typeIdentifier":"t_struct$_VehicleRisk_$7324_storage_ptr","typeString":"struct RiskAssessment.VehicleRisk storage pointer"}},"id":7646,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3621:9:19","memberName":"condition","nodeType":"MemberAccess","referencedDeclaration":7317,"src":"3616:14:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"3611:19:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":7648,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3610:21:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":7649,"name":"factors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7624,"src":"3634:7:19","typeDescriptions":{"typeIdentifier":"t_struct$_PremiumFactors_$7333_storage_ptr","typeString":"struct RiskAssessment.PremiumFactors storage pointer"}},"id":7650,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3642:19:19","memberName":"conditionMultiplier","nodeType":"MemberAccess","referencedDeclaration":7330,"src":"3634:27:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3610:51:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7652,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3609:53:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3598:64:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7654,"nodeType":"ExpressionStatement","src":"3598:64:19"},{"condition":{"expression":{"id":7655,"name":"risk","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7617,"src":"3676:4:19","typeDescriptions":{"typeIdentifier":"t_struct$_VehicleRisk_$7324_storage_ptr","typeString":"struct RiskAssessment.VehicleRisk storage pointer"}},"id":7656,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3681:18:19","memberName":"hasAccidentHistory","nodeType":"MemberAccess","referencedDeclaration":7321,"src":"3676:23:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7663,"nodeType":"IfStatement","src":"3672:88:19","trueBody":{"id":7662,"nodeType":"Block","src":"3701:59:19","statements":[{"expression":{"id":7660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7657,"name":"premium","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7630,"src":"3715:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":7658,"name":"factors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7624,"src":"3726:7:19","typeDescriptions":{"typeIdentifier":"t_struct$_PremiumFactors_$7333_storage_ptr","typeString":"struct RiskAssessment.PremiumFactors storage pointer"}},"id":7659,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3734:15:19","memberName":"accidentPenalty","nodeType":"MemberAccess","referencedDeclaration":7332,"src":"3726:23:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3715:34:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7661,"nodeType":"ExpressionStatement","src":"3715:34:19"}]}},{"expression":{"id":7664,"name":"premium","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7630,"src":"3776:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7614,"id":7665,"nodeType":"Return","src":"3769:14:19"}]},"functionSelector":"69c27e14","id":7667,"implemented":true,"kind":"function","modifiers":[],"name":"calculatePremium","nameLocation":"3224:16:19","nodeType":"FunctionDefinition","parameters":{"id":7611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7607,"mutability":"mutable","name":"_regPlate","nameLocation":"3264:9:19","nodeType":"VariableDeclaration","scope":7667,"src":"3250:23:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7606,"name":"string","nodeType":"ElementaryTypeName","src":"3250:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7610,"mutability":"mutable","name":"_tier","nameLocation":"3316:5:19","nodeType":"VariableDeclaration","scope":7667,"src":"3284:37:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_VerificationTier_$6389","typeString":"enum IVehicleShield.VerificationTier"},"typeName":{"id":7609,"nodeType":"UserDefinedTypeName","pathNode":{"id":7608,"name":"IVehicleShield.VerificationTier","nameLocations":["3284:14:19","3299:16:19"],"nodeType":"IdentifierPath","referencedDeclaration":6389,"src":"3284:31:19"},"referencedDeclaration":6389,"src":"3284:31:19","typeDescriptions":{"typeIdentifier":"t_enum$_VerificationTier_$6389","typeString":"enum IVehicleShield.VerificationTier"}},"visibility":"internal"}],"src":"3240:87:19"},"returnParameters":{"id":7614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7613,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7667,"src":"3349:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7612,"name":"uint256","nodeType":"ElementaryTypeName","src":"3349:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3348:9:19"},"scope":7709,"src":"3215:575:19","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":7694,"nodeType":"Block","src":"4029:243:19","statements":[{"expression":{"id":7692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7683,"name":"tierPremiums","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7344,"src":"4039:12:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_VerificationTier_$6389_$_t_struct$_PremiumFactors_$7333_storage_$","typeString":"mapping(enum IVehicleShield.VerificationTier => struct RiskAssessment.PremiumFactors storage ref)"}},"id":7685,"indexExpression":{"id":7684,"name":"_tier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7670,"src":"4052:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_VerificationTier_$6389","typeString":"enum IVehicleShield.VerificationTier"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4039:19:19","typeDescriptions":{"typeIdentifier":"t_struct$_PremiumFactors_$7333_storage","typeString":"struct RiskAssessment.PremiumFactors storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7687,"name":"_baseRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7672,"src":"4100:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7688,"name":"_ageMultiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7674,"src":"4138:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7689,"name":"_conditionMultiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7676,"src":"4187:20:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7690,"name":"_accidentPenalty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7678,"src":"4238:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7686,"name":"PremiumFactors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7333,"src":"4061:14:19","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_PremiumFactors_$7333_storage_ptr_$","typeString":"type(struct RiskAssessment.PremiumFactors storage pointer)"}},"id":7691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["4090:8:19","4123:13:19","4166:19:19","4221:15:19"],"names":["baseRate","ageMultiplier","conditionMultiplier","accidentPenalty"],"nodeType":"FunctionCall","src":"4061:204:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PremiumFactors_$7333_memory_ptr","typeString":"struct RiskAssessment.PremiumFactors memory"}},"src":"4039:226:19","typeDescriptions":{"typeIdentifier":"t_struct$_PremiumFactors_$7333_storage","typeString":"struct RiskAssessment.PremiumFactors storage ref"}},"id":7693,"nodeType":"ExpressionStatement","src":"4039:226:19"}]},"functionSelector":"ede77d5d","id":7695,"implemented":true,"kind":"function","modifiers":[{"id":7681,"kind":"modifierInvocation","modifierName":{"id":7680,"name":"onlyOwner","nameLocations":["4019:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"4019:9:19"},"nodeType":"ModifierInvocation","src":"4019:9:19"}],"name":"updatePremiumFactors","nameLocation":"3805:20:19","nodeType":"FunctionDefinition","parameters":{"id":7679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7670,"mutability":"mutable","name":"_tier","nameLocation":"3867:5:19","nodeType":"VariableDeclaration","scope":7695,"src":"3835:37:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_VerificationTier_$6389","typeString":"enum IVehicleShield.VerificationTier"},"typeName":{"id":7669,"nodeType":"UserDefinedTypeName","pathNode":{"id":7668,"name":"IVehicleShield.VerificationTier","nameLocations":["3835:14:19","3850:16:19"],"nodeType":"IdentifierPath","referencedDeclaration":6389,"src":"3835:31:19"},"referencedDeclaration":6389,"src":"3835:31:19","typeDescriptions":{"typeIdentifier":"t_enum$_VerificationTier_$6389","typeString":"enum IVehicleShield.VerificationTier"}},"visibility":"internal"},{"constant":false,"id":7672,"mutability":"mutable","name":"_baseRate","nameLocation":"3890:9:19","nodeType":"VariableDeclaration","scope":7695,"src":"3882:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7671,"name":"uint256","nodeType":"ElementaryTypeName","src":"3882:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7674,"mutability":"mutable","name":"_ageMultiplier","nameLocation":"3917:14:19","nodeType":"VariableDeclaration","scope":7695,"src":"3909:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7673,"name":"uint256","nodeType":"ElementaryTypeName","src":"3909:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7676,"mutability":"mutable","name":"_conditionMultiplier","nameLocation":"3949:20:19","nodeType":"VariableDeclaration","scope":7695,"src":"3941:28:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7675,"name":"uint256","nodeType":"ElementaryTypeName","src":"3941:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7678,"mutability":"mutable","name":"_accidentPenalty","nameLocation":"3987:16:19","nodeType":"VariableDeclaration","scope":7695,"src":"3979:24:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7677,"name":"uint256","nodeType":"ElementaryTypeName","src":"3979:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3825:184:19"},"returnParameters":{"id":7682,"nodeType":"ParameterList","parameters":[],"src":"4029:0:19"},"scope":7709,"src":"3796:476:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7707,"nodeType":"Block","src":"4397:47:19","statements":[{"expression":{"baseExpression":{"id":7703,"name":"vehicleRisks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7338,"src":"4414:12:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_VehicleRisk_$7324_storage_$","typeString":"mapping(string memory => struct RiskAssessment.VehicleRisk storage ref)"}},"id":7705,"indexExpression":{"id":7704,"name":"_regPlate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7697,"src":"4427:9:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4414:23:19","typeDescriptions":{"typeIdentifier":"t_struct$_VehicleRisk_$7324_storage","typeString":"struct RiskAssessment.VehicleRisk storage ref"}},"functionReturnParameters":7702,"id":7706,"nodeType":"Return","src":"4407:30:19"}]},"functionSelector":"9b1e19a7","id":7708,"implemented":true,"kind":"function","modifiers":[],"name":"getVehicleRisk","nameLocation":"4287:14:19","nodeType":"FunctionDefinition","parameters":{"id":7698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7697,"mutability":"mutable","name":"_regPlate","nameLocation":"4316:9:19","nodeType":"VariableDeclaration","scope":7708,"src":"4302:23:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7696,"name":"string","nodeType":"ElementaryTypeName","src":"4302:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4301:25:19"},"returnParameters":{"id":7702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7701,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7708,"src":"4377:18:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_VehicleRisk_$7324_memory_ptr","typeString":"struct RiskAssessment.VehicleRisk"},"typeName":{"id":7700,"nodeType":"UserDefinedTypeName","pathNode":{"id":7699,"name":"VehicleRisk","nameLocations":["4377:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":7324,"src":"4377:11:19"},"referencedDeclaration":7324,"src":"4377:11:19","typeDescriptions":{"typeIdentifier":"t_struct$_VehicleRisk_$7324_storage_ptr","typeString":"struct RiskAssessment.VehicleRisk"}},"visibility":"internal"}],"src":"4376:20:19"},"scope":7709,"src":"4278:166:19","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":7710,"src":"142:4304:19","usedErrors":[13,18],"usedEvents":[24,7353]}],"src":"32:4414:19"},"id":19}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ERC721":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x39ed367e54765186281efcfe83e47cf0ad62cc879f10e191360712507125f29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c5ae6d85bd48cca8d6d2fcec8c63efd86f56f8a5832577a47e403ce0e65cb09\",\"dweb:/ipfs/QmUtcS8AbRSWhuc61puYet58os8FvSqm329ChoW8wwZXZk\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0x40399695922383778f9f540a620bec475a2f8e0f08d41f0005682842e28a9855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746d295e403931aeb9d6065fd5a0871f43ab5459814a60623611e4b6641a09fd\",\"dweb:/ipfs/QmWrgT8YJrQ9FfD1o3YYArwo57e7MGdpFKuM74qJ4qE34E\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC-721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC-721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"ERC721Utils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c6043237e30ca05729991fed710097937894b17d4c39837f4910edc10366336664736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC6 DIV ORIGIN CALLDATACOPY 0xE3 0xC LOG0 JUMPI 0x29 SWAP10 0x1F 0xED PUSH18 0x97937894B17D4C39837F4910EDC1036633 PUSH7 0x64736F6C634300 ADDMOD EQ STOP CALLER ","sourceMap":"431:1480:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;431:1480:6;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c6043237e30ca05729991fed710097937894b17d4c39837f4910edc10366336664736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC6 DIV ORIGIN CALLDATACOPY 0xE3 0xC LOG0 JUMPI 0x29 SWAP10 0x1F 0xED PUSH18 0x97937894B17D4C39837F4910EDC1036633 PUSH7 0x64736F6C634300 ADDMOD EQ STOP CALLER ","sourceMap":"431:1480:6:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library that provide common ERC-721 utility functions. See https://eips.ethereum.org/EIPS/eip-721[ERC-721]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":\"ERC721Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0x40399695922383778f9f540a620bec475a2f8e0f08d41f0005682842e28a9855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746d295e403931aeb9d6065fd5a0871f43ab5459814a60623611e4b6641a09fd\",\"dweb:/ipfs/QmWrgT8YJrQ9FfD1o3YYArwo57e7MGdpFKuM74qJ4qE34E\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201ae1761b6a3c5d2458c4708d3276257bae9b475b3c412a0ebb4584fd955181ef64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xE1 PUSH23 0x1B6A3C5D2458C4708D3276257BAE9B475B3C412A0EBB45 DUP5 REVERT SWAP6 MLOAD DUP2 0xEF PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"657:1315:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;657:1315:8;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201ae1761b6a3c5d2458c4708d3276257bae9b475b3c412a0ebb4584fd955181ef64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xE1 PUSH23 0x1B6A3C5D2458C4708D3276257BAE9B475B3C412A0EBB45 DUP5 REVERT SWAP6 MLOAD DUP2 0xEF PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"657:1315:8:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"inputs":[],"name":"StringsInvalidAddressFormat","type":"error"},{"inputs":[],"name":"StringsInvalidChar","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e418efcf027178c24969ef9cce14fe62f83bae952917381bb412a374c5fe008f64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 XOR 0xEF 0xCF MUL PUSH18 0x78C24969EF9CCE14FE62F83BAE952917381B 0xB4 SLT LOG3 PUSH21 0xC5FE008F64736F6C63430008140033000000000000 ","sourceMap":"297:16541:10:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;297:16541:10;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e418efcf027178c24969ef9cce14fe62f83bae952917381bb412a374c5fe008f64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 XOR 0xEF 0xCF MUL PUSH18 0x78C24969EF9CCE14FE62F83BAE952917381B 0xB4 SLT LOG3 PUSH21 0xC5FE008F64736F6C63430008140033000000000000 ","sourceMap":"297:16541:10:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209544771c102b4030bce79c3ee7998a21bfbdfbef060da8efbbf2e9592019a69764736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 PREVRANDAO PUSH24 0x1C102B4030BCE79C3EE7998A21BFBDFBEF060DA8EFBBF2E9 MSIZE KECCAK256 NOT 0xA6 SWAP8 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"281:28026:13:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;281:28026:13;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209544771c102b4030bce79c3ee7998a21bfbdfbef060da8efbbf2e9592019a69764736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 PREVRANDAO PUSH24 0x1C102B4030BCE79C3EE7998A21BFBDFBEF060DA8EFBBF2E9 MSIZE KECCAK256 NOT 0xA6 SWAP8 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"281:28026:13:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e57f6f97354ac8290db535b2e3f293653f51ec40206fa8b2bf9396c18f98af2564736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 PUSH32 0x6F97354AC8290DB535B2E3F293653F51EC40206FA8B2BF9396C18F98AF256473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"769:34173:14:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;769:34173:14;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e57f6f97354ac8290db535b2e3f293653f51ec40206fa8b2bf9396c18f98af2564736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 PUSH32 0x6F97354AC8290DB535B2E3F293653F51EC40206FA8B2BF9396C18F98AF256473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"769:34173:14:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209e65a3f6bb9e28d8169ea079d4b688370f4365b9ed0ac7dd77283f5739bebf8d64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 PUSH6 0xA3F6BB9E28D8 AND SWAP15 LOG0 PUSH26 0xD4B688370F4365B9ED0AC7DD77283F5739BEBF8D64736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"258:2354:15:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;258:2354:15;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209e65a3f6bb9e28d8169ea079d4b688370f4365b9ed0ac7dd77283f5739bebf8d64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 PUSH6 0xA3F6BB9E28D8 AND SWAP15 LOG0 PUSH26 0xD4B688370F4365B9ED0AC7DD77283F5739BEBF8D64736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"258:2354:15:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"contracts/IVehicleShield.sol":{"IPolicyNFT":{"abi":[{"inputs":[{"internalType":"uint256","name":"policyId","type":"uint256"}],"name":"burnPolicy","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"policyId","type":"uint256"}],"name":"getPolicyOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"string","name":"vehicleId","type":"string"},{"internalType":"enum IVehicleShield.VerificationTier","name":"tier","type":"uint8"},{"internalType":"uint256","name":"premium","type":"uint256"},{"internalType":"uint256","name":"coverage","type":"uint256"}],"name":"mintPolicy","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"burnPolicy(uint256)":"f457a0fe","getPolicyOwner(uint256)":"ca009021","mintPolicy(address,string,uint8,uint256,uint256)":"21a9bfe8"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"policyId\",\"type\":\"uint256\"}],\"name\":\"burnPolicy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"policyId\",\"type\":\"uint256\"}],\"name\":\"getPolicyOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"vehicleId\",\"type\":\"string\"},{\"internalType\":\"enum IVehicleShield.VerificationTier\",\"name\":\"tier\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"coverage\",\"type\":\"uint256\"}],\"name\":\"mintPolicy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IVehicleShield.sol\":\"IPolicyNFT\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IVehicleShield.sol\":{\"keccak256\":\"0x9797150cb75e8673cf23309964621d0323843e13fd0431f4b4b829f71bac3885\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5f0d54e5945cded1dc87c8f47610d1171f2755f7fb499bda738f9b45a7e3085\",\"dweb:/ipfs/Qmdv2XYtJNedoff4W4yfXRqwqfaExpu6Eb9y4WG57nEtg3\"]}},\"version\":1}"},"IRiskAssessment":{"abi":[{"inputs":[{"internalType":"string","name":"_regPlate","type":"string"},{"internalType":"uint256","name":"_baseValue","type":"uint256"},{"internalType":"uint256","name":"_age","type":"uint256"},{"internalType":"uint256","name":"_mileage","type":"uint256"},{"internalType":"uint8","name":"_condition","type":"uint8"},{"internalType":"bool","name":"_hasAccidentHistory","type":"bool"}],"name":"assessVehicle","outputs":[{"internalType":"enum IVehicleShield.VerificationTier","name":"","type":"uint8"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_regPlate","type":"string"},{"internalType":"enum IVehicleShield.VerificationTier","name":"_tier","type":"uint8"}],"name":"calculatePremium","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"assessVehicle(string,uint256,uint256,uint256,uint8,bool)":"0944a8ca","calculatePremium(string,uint8)":"69c27e14"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_regPlate\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_baseValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_age\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_mileage\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"_condition\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"_hasAccidentHistory\",\"type\":\"bool\"}],\"name\":\"assessVehicle\",\"outputs\":[{\"internalType\":\"enum IVehicleShield.VerificationTier\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_regPlate\",\"type\":\"string\"},{\"internalType\":\"enum IVehicleShield.VerificationTier\",\"name\":\"_tier\",\"type\":\"uint8\"}],\"name\":\"calculatePremium\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IVehicleShield.sol\":\"IRiskAssessment\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IVehicleShield.sol\":{\"keccak256\":\"0x9797150cb75e8673cf23309964621d0323843e13fd0431f4b4b829f71bac3885\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5f0d54e5945cded1dc87c8f47610d1171f2755f7fb499bda738f9b45a7e3085\",\"dweb:/ipfs/Qmdv2XYtJNedoff4W4yfXRqwqfaExpu6Eb9y4WG57nEtg3\"]}},\"version\":1}"},"IVehicleShield":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IVehicleShield.sol\":\"IVehicleShield\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IVehicleShield.sol\":{\"keccak256\":\"0x9797150cb75e8673cf23309964621d0323843e13fd0431f4b4b829f71bac3885\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5f0d54e5945cded1dc87c8f47610d1171f2755f7fb499bda738f9b45a7e3085\",\"dweb:/ipfs/Qmdv2XYtJNedoff4W4yfXRqwqfaExpu6Eb9y4WG57nEtg3\"]}},\"version\":1}"}},"contracts/InsuranceCore.sol":{"InsuranceCore":{"abi":[{"inputs":[{"internalType":"address","name":"_policyNFTAddress","type":"address"},{"internalType":"address","name":"_riskAssessmentAddress","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"claimId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"ClaimPaid","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"claimId","type":"uint256"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ClaimProcessed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"claimId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"policyId","type":"uint256"}],"name":"ClaimSubmitted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"regPlate","type":"string"},{"indexed":false,"internalType":"uint256","name":"uploadDate","type":"uint256"}],"name":"PhotosUploaded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"policyId","type":"uint256"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"string","name":"vehicleId","type":"string"}],"name":"PolicyCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"regPlate","type":"string"},{"indexed":false,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"enum IVehicleShield.VerificationTier","name":"tier","type":"uint8"}],"name":"VehicleRegistered","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"regPlate","type":"string"},{"indexed":false,"internalType":"enum InsuranceCore.VerificationStatus","name":"status","type":"uint8"}],"name":"VerificationStatusUpdated","type":"event"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"claims","outputs":[{"internalType":"uint256","name":"claimId","type":"uint256"},{"internalType":"uint256","name":"policyId","type":"uint256"},{"internalType":"string","name":"description","type":"string"},{"internalType":"string","name":"photoHash","type":"string"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bool","name":"isProcessed","type":"bool"},{"internalType":"bool","name":"isPaid","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"enum IVehicleShield.VerificationTier","name":"","type":"uint8"}],"name":"coverageLimits","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_regPlate","type":"string"},{"internalType":"uint256","name":"_duration","type":"uint256"},{"internalType":"uint256","name":"_coverage","type":"uint256"}],"name":"createPolicy","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"policies","outputs":[{"internalType":"uint256","name":"coverage","type":"uint256"},{"internalType":"uint256","name":"startDate","type":"uint256"},{"internalType":"uint256","name":"endDate","type":"uint256"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"enum IVehicleShield.VerificationTier","name":"tier","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"policyNFT","outputs":[{"internalType":"contract IPolicyNFT","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_claimId","type":"uint256"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"processClaim","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_regPlate","type":"string"},{"internalType":"string","name":"_make","type":"string"},{"internalType":"string","name":"_model","type":"string"},{"internalType":"uint256","name":"_year","type":"uint256"},{"internalType":"uint256","name":"_baseValue","type":"uint256"},{"internalType":"uint256","name":"_mileage","type":"uint256"},{"internalType":"uint8","name":"_condition","type":"uint8"},{"internalType":"bool","name":"_hasAccidentHistory","type":"bool"}],"name":"registerVehicle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"riskAssessment","outputs":[{"internalType":"contract IRiskAssessment","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_policyId","type":"uint256"},{"internalType":"string","name":"_description","type":"string"},{"internalType":"string","name":"_photoHash","type":"string"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"submitClaim","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_regPlate","type":"string"},{"internalType":"enum InsuranceCore.VerificationStatus","name":"_status","type":"uint8"}],"name":"updateVerificationStatus","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_regPlate","type":"string"},{"internalType":"string","name":"_frontHash","type":"string"},{"internalType":"string","name":"_backHash","type":"string"},{"internalType":"string","name":"_leftHash","type":"string"},{"internalType":"string","name":"_rightHash","type":"string"},{"internalType":"string","name":"_mirrorLeftHash","type":"string"},{"internalType":"string","name":"_mirrorRightHash","type":"string"}],"name":"uploadVehiclePhotos","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"","type":"string"}],"name":"vehiclePhotos","outputs":[{"internalType":"string","name":"frontHash","type":"string"},{"internalType":"string","name":"backHash","type":"string"},{"internalType":"string","name":"leftHash","type":"string"},{"internalType":"string","name":"rightHash","type":"string"},{"internalType":"string","name":"mirrorLeftHash","type":"string"},{"internalType":"string","name":"mirrorRightHash","type":"string"},{"internalType":"uint256","name":"uploadDate","type":"uint256"},{"internalType":"bool","name":"isComplete","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"","type":"string"}],"name":"vehicles","outputs":[{"internalType":"string","name":"regPlate","type":"string"},{"internalType":"string","name":"make","type":"string"},{"internalType":"string","name":"model","type":"string"},{"internalType":"uint256","name":"year","type":"uint256"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"enum InsuranceCore.VerificationStatus","name":"status","type":"uint8"},{"internalType":"enum IVehicleShield.VerificationTier","name":"tier","type":"uint8"},{"internalType":"uint256","name":"lastVerificationDate","type":"uint256"},{"internalType":"bool","name":"isRegistered","type":"bool"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{"@_1585":{"entryPoint":null,"id":1585,"parameterSlots":0,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_6658":{"entryPoint":null,"id":6658,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":302,"id":146,"parameterSlots":1,"returnSlots":0},"abi_decode_address_fromMemory":{"entryPoint":384,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_addresst_address_fromMemory":{"entryPoint":413,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x21":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:831:20","statements":[{"nodeType":"YulBlock","src":"6:3:20","statements":[]},{"body":{"nodeType":"YulBlock","src":"74:117:20","statements":[{"nodeType":"YulAssignment","src":"84:22:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"99:6:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"93:5:20"},"nodeType":"YulFunctionCall","src":"93:13:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"84:5:20"}]},{"body":{"nodeType":"YulBlock","src":"169:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"178:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"181:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"171:6:20"},"nodeType":"YulFunctionCall","src":"171:12:20"},"nodeType":"YulExpressionStatement","src":"171:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"128:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"139:5:20"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"154:3:20","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"159:1:20","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"150:3:20"},"nodeType":"YulFunctionCall","src":"150:11:20"},{"kind":"number","nodeType":"YulLiteral","src":"163:1:20","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"146:3:20"},"nodeType":"YulFunctionCall","src":"146:19:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"135:3:20"},"nodeType":"YulFunctionCall","src":"135:31:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"125:2:20"},"nodeType":"YulFunctionCall","src":"125:42:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"118:6:20"},"nodeType":"YulFunctionCall","src":"118:50:20"},"nodeType":"YulIf","src":"115:70:20"}]},"name":"abi_decode_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"53:6:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"64:5:20","type":""}],"src":"14:177:20"},{"body":{"nodeType":"YulBlock","src":"294:195:20","statements":[{"body":{"nodeType":"YulBlock","src":"340:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"349:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"352:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"342:6:20"},"nodeType":"YulFunctionCall","src":"342:12:20"},"nodeType":"YulExpressionStatement","src":"342:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"315:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"324:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"311:3:20"},"nodeType":"YulFunctionCall","src":"311:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"336:2:20","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"307:3:20"},"nodeType":"YulFunctionCall","src":"307:32:20"},"nodeType":"YulIf","src":"304:52:20"},{"nodeType":"YulAssignment","src":"365:50:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"405:9:20"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"375:29:20"},"nodeType":"YulFunctionCall","src":"375:40:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"365:6:20"}]},{"nodeType":"YulAssignment","src":"424:59:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"468:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"479:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"464:3:20"},"nodeType":"YulFunctionCall","src":"464:18:20"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"434:29:20"},"nodeType":"YulFunctionCall","src":"434:49:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"424:6:20"}]}]},"name":"abi_decode_tuple_t_addresst_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"252:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"263:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"275:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"283:6:20","type":""}],"src":"196:293:20"},{"body":{"nodeType":"YulBlock","src":"595:102:20","statements":[{"nodeType":"YulAssignment","src":"605:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"617:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"628:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"613:3:20"},"nodeType":"YulFunctionCall","src":"613:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"605:4:20"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"647:9:20"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"662:6:20"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"678:3:20","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"683:1:20","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"674:3:20"},"nodeType":"YulFunctionCall","src":"674:11:20"},{"kind":"number","nodeType":"YulLiteral","src":"687:1:20","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"670:3:20"},"nodeType":"YulFunctionCall","src":"670:19:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"658:3:20"},"nodeType":"YulFunctionCall","src":"658:32:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"640:6:20"},"nodeType":"YulFunctionCall","src":"640:51:20"},"nodeType":"YulExpressionStatement","src":"640:51:20"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"564:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"575:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"586:4:20","type":""}],"src":"494:203:20"},{"body":{"nodeType":"YulBlock","src":"734:95:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"751:1:20","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"758:3:20","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"763:10:20","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"754:3:20"},"nodeType":"YulFunctionCall","src":"754:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"744:6:20"},"nodeType":"YulFunctionCall","src":"744:31:20"},"nodeType":"YulExpressionStatement","src":"744:31:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"791:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"794:4:20","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"784:6:20"},"nodeType":"YulFunctionCall","src":"784:15:20"},"nodeType":"YulExpressionStatement","src":"784:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"815:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"818:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"808:6:20"},"nodeType":"YulFunctionCall","src":"808:15:20"},"nodeType":"YulExpressionStatement","src":"808:15:20"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"702:127:20"}]},"contents":"{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n}","id":20,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405260016009553480156200001657600080fd5b50604051620027f3380380620027f383398101604081905262000039916200019d565b600160005533806200006557604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b62000070816200012e565b50600280546001600160a01b039384166001600160a01b03199182161782556003805493909416921691909117909155600860205266b1a2bc2ec500007f5eff886ea0ce6ca488a3d6e336d6c0f75f46d19b42c06ce5ee98e42c96d256c75567016345785d8a00007fad67d757c34507f157cacfa2e3153e9f260a2244f30428821be7be64587ac55f556000526702c68af0bb1400007f6add646517a5b0f6793cd5891b7937d28a5b2981a5d88ebc7cd776088fea904155620001d5565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b03811681146200019857600080fd5b919050565b60008060408385031215620001b157600080fd5b620001bc8362000180565b9150620001cc6020840162000180565b90509250929050565b61260e80620001e56000396000f3fe6080604052600436106100f75760003560e01c8063976de5c51161008a578063e93b2a3411610059578063e93b2a341461031e578063f21ad98b14610331578063f2fde38b14610351578063fedda0e41461037157600080fd5b8063976de5c514610237578063a888c2cd1461026c578063af02808a1461029f578063d3e89483146102bf57600080fd5b8063744007fd116100c6578063744007fd146101975780637daaaaf3146101cb5780638da5cb5b146101eb5780638f749e151461020957600080fd5b80631ca2cf281461010357806335446def1461012557806370a1a7d514610145578063715018a61461018257600080fd5b366100fe57005b600080fd5b34801561010f57600080fd5b5061012361011e366004611c52565b61039e565b005b34801561013157600080fd5b50610123610140366004611cb9565b610529565b34801561015157600080fd5b50600354610165906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561018e57600080fd5b506101236105f3565b3480156101a357600080fd5b506101b76101b2366004611ce5565b610607565b604051610179989796959493929190611d6a565b3480156101d757600080fd5b506101236101e6366004611dff565b610986565b3480156101f757600080fd5b506001546001600160a01b0316610165565b34801561021557600080fd5b50610229610224366004611f1a565b610bab565b604051908152602001610179565b34801561024357600080fd5b50610257610252366004611ce5565b610dcc565b60405161017999989796959493929190611fc3565b34801561027857600080fd5b5061028c610287366004612054565b610fcc565b604051610179979695949392919061206d565b3480156102ab57600080fd5b50600254610165906001600160a01b031681565b3480156102cb57600080fd5b5061030d6102da366004612054565b60066020526000908152604090208054600182015460028301546003909301549192909160ff8082169161010090041685565b6040516101799594939291906120c0565b61022961032c3660046120f6565b61111e565b34801561033d57600080fd5b5061012361034c366004612155565b6115a9565b34801561035d57600080fd5b5061012361036c366004612231565b6118bb565b34801561037d57600080fd5b5061022961038c36600461224e565b60086020526000908152604090205481565b6103a66118f9565b6004826040516103b6919061226b565b9081526040519081900360200190206006015460ff166104165760405162461bcd60e51b815260206004820152601660248201527515995a1a58db19481b9bdd081c9959da5cdd195c995960521b60448201526064015b60405180910390fd5b600582604051610426919061226b565b9081526040519081900360200190206007015460ff1661047e5760405162461bcd60e51b8152602060048201526013602482015272141a1bdd1bdcc81b9bdd081d5c1b1bd8591959606a1b604482015260640161040d565b8060048360405161048f919061226b565b908152604051908190036020019020600401805460ff60a01b1916600160a01b8360028111156104c1576104c1611f8f565b0217905550426004836040516104d7919061226b565b9081526020016040518091039020600501819055507f16199dc2004744f89cfe5bc916b084fff79f2e7be10b3a6be2240e97846fb408828260405161051d929190612287565b60405180910390a15050565b6105316118f9565b6000828152600760205260409020600581015460ff16156105945760405162461bcd60e51b815260206004820152601760248201527f436c61696d20616c72656164792070726f636573736564000000000000000000604482015260640161040d565b60058101805460ff1916600117905581156105b2576105b281611926565b827fd4203892740c26c8184cfb101077c87ccf2d01beaf6aef0c250ab43bb43df202836040516105e6911515815260200190565b60405180910390a2505050565b6105fb6118f9565b6106056000611b26565b565b805160208183018101805160058252928201919093012091528054819061062d906122b2565b80601f0160208091040260200160405190810160405280929190818152602001828054610659906122b2565b80156106a65780601f1061067b576101008083540402835291602001916106a6565b820191906000526020600020905b81548152906001019060200180831161068957829003601f168201915b5050505050908060010180546106bb906122b2565b80601f01602080910402602001604051908101604052809291908181526020018280546106e7906122b2565b80156107345780601f1061070957610100808354040283529160200191610734565b820191906000526020600020905b81548152906001019060200180831161071757829003601f168201915b505050505090806002018054610749906122b2565b80601f0160208091040260200160405190810160405280929190818152602001828054610775906122b2565b80156107c25780601f10610797576101008083540402835291602001916107c2565b820191906000526020600020905b8154815290600101906020018083116107a557829003601f168201915b5050505050908060030180546107d7906122b2565b80601f0160208091040260200160405190810160405280929190818152602001828054610803906122b2565b80156108505780601f1061082557610100808354040283529160200191610850565b820191906000526020600020905b81548152906001019060200180831161083357829003601f168201915b505050505090806004018054610865906122b2565b80601f0160208091040260200160405190810160405280929190818152602001828054610891906122b2565b80156108de5780601f106108b3576101008083540402835291602001916108de565b820191906000526020600020905b8154815290600101906020018083116108c157829003601f168201915b5050505050908060050180546108f3906122b2565b80601f016020809104026020016040519081016040528092919081815260200182805461091f906122b2565b801561096c5780601f106109415761010080835404028352916020019161096c565b820191906000526020600020905b81548152906001019060200180831161094f57829003601f168201915b50505050600683015460079093015491929160ff16905088565b336001600160a01b03166004886040516109a0919061226b565b908152604051908190036020019020600401546001600160a01b0316146109fd5760405162461bcd60e51b81526020600482015260116024820152702737ba103b32b434b1b6329037bbb732b960791b604482015260640161040d565b600587604051610a0d919061226b565b9081526040519081900360200190206007015460ff1615610a705760405162461bcd60e51b815260206004820152601760248201527f50686f746f7320616c72656164792075706c6f61646564000000000000000000604482015260640161040d565b60405180610100016040528087815260200186815260200185815260200184815260200183815260200182815260200142815260200160011515815250600588604051610abd919061226b565b90815260405190819003602001902081518190610ada908261233b565b5060208201516001820190610aef908261233b565b5060408201516002820190610b04908261233b565b5060608201516003820190610b19908261233b565b5060808201516004820190610b2e908261233b565b5060a08201516005820190610b43908261233b565b5060c0820151600682015560e0909101516007909101805460ff19169115159190911790556040517f1d11784494a8ce3357eaab9e9cf4439a22dd7b03aefaea16088e21e4bb2cfeac90610b9a90899042906123fb565b60405180910390a150505050505050565b6000610bb5611b78565b60008581526006602052604090206003015460ff16610c0a5760405162461bcd60e51b8152602060048201526011602482015270506f6c696379206e6f742061637469766560781b604482015260640161040d565b60025460405163ca00902160e01b81526004810187905233916001600160a01b03169063ca00902190602401602060405180830381865afa158015610c53573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c77919061241d565b6001600160a01b031614610cc05760405162461bcd60e51b815260206004820152601060248201526f2737ba103837b634b1bc9037bbb732b960811b604482015260640161040d565b6009805460009182610cd183612450565b909155506040805160e08101825282815260208082018a81528284018a8152606084018a905260808401899052600060a0850181905260c0850181905286815260079093529390912082518155905160018201559151929350916002820190610d3a908261233b565b5060608201516003820190610d4f908261233b565b506080820151600482015560a08201516005909101805460c09093015115156101000261ff00199215159290921661ffff1990931692909217179055604051869082907f675e9cd1ef5a9bb6971c9f1099eced3c6607be0407bc871bc50a8a7b36832e7490600090a39050610dc46001600055565b949350505050565b8051602081830181018051600482529282019190930120915280548190610df2906122b2565b80601f0160208091040260200160405190810160405280929190818152602001828054610e1e906122b2565b8015610e6b5780601f10610e4057610100808354040283529160200191610e6b565b820191906000526020600020905b815481529060010190602001808311610e4e57829003601f168201915b505050505090806001018054610e80906122b2565b80601f0160208091040260200160405190810160405280929190818152602001828054610eac906122b2565b8015610ef95780601f10610ece57610100808354040283529160200191610ef9565b820191906000526020600020905b815481529060010190602001808311610edc57829003601f168201915b505050505090806002018054610f0e906122b2565b80601f0160208091040260200160405190810160405280929190818152602001828054610f3a906122b2565b8015610f875780601f10610f5c57610100808354040283529160200191610f87565b820191906000526020600020905b815481529060010190602001808311610f6a57829003601f168201915b505050600384015460048501546005860154600690960154949591946001600160a01b038216945060ff600160a01b830481169450600160a81b909204821692911689565b60076020526000908152604090208054600182015460028301805492939192610ff4906122b2565b80601f0160208091040260200160405190810160405280929190818152602001828054611020906122b2565b801561106d5780601f106110425761010080835404028352916020019161106d565b820191906000526020600020905b81548152906001019060200180831161105057829003601f168201915b505050505090806003018054611082906122b2565b80601f01602080910402602001604051908101604052809291908181526020018280546110ae906122b2565b80156110fb5780601f106110d0576101008083540402835291602001916110fb565b820191906000526020600020905b8154815290600101906020018083116110de57829003601f168201915b50505050600483015460059093015491929160ff80821692506101009091041687565b6000611128611b78565b600060048560405161113a919061226b565b908152604051908190036020019020600681015490915060ff166111995760405162461bcd60e51b815260206004820152601660248201527515995a1a58db19481b9bdd081c9959da5cdd195c995960521b604482015260640161040d565b60048101546001600160a01b031633146111e95760405162461bcd60e51b81526020600482015260116024820152702737ba103b32b434b1b6329037bbb732b960791b604482015260640161040d565b60016004820154600160a01b900460ff16600281111561120b5761120b611f8f565b1461124f5760405162461bcd60e51b815260206004820152601460248201527315995a1a58db19481b9bdd081d995c9a599a595960621b604482015260640161040d565b6004810154600890600090600160a81b900460ff16600281111561127557611275611f8f565b600281111561128657611286611f8f565b8152602001908152602001600020548311156112e45760405162461bcd60e51b815260206004820152601b60248201527f436f76657261676520657863656564732074696572206c696d69740000000000604482015260640161040d565b600354600482810154604051631a709f8560e21b81526000936001600160a01b0316926369c27e1492611325928b92600160a81b90920460ff169101612287565b602060405180830381865afa158015611342573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113669190612469565b9050803410156113b85760405162461bcd60e51b815260206004820152601c60248201527f496e73756666696369656e74207072656d69756d207061796d656e7400000000604482015260640161040d565b600085116113fb5760405162461bcd60e51b815260206004820152601060248201526f24b73b30b634b210323ab930ba34b7b760811b604482015260640161040d565b60025460048381015460405163043537fd60e31b81526000936001600160a01b0316926321a9bfe8926114419233928d92600160a81b900460ff169189918d9101612482565b6020604051808303816000875af1158015611460573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114849190612469565b90506040518060a0016040528086815260200142815260200187426114a991906124cd565b8152600160208201526004850154604090910190600160a81b900460ff1660028111156114d8576114d8611f8f565b90526000828152600660209081526040918290208351815590830151600182015590820151600280830191909155606083015160038301805491151560ff19831681178255608086015193919261ff001990911661ffff19909116179061010090849081111561154a5761154a611f8f565b0217905550905050336001600160a01b0316817f21d0178f0cde2aed24022db30651dabafb4bbe431fb787fbc92113304d8e35498960405161158c91906124e6565b60405180910390a3925050506115a26001600055565b9392505050565b6004886040516115b9919061226b565b9081526040519081900360200190206006015460ff161561161c5760405162461bcd60e51b815260206004820152601a60248201527f56656869636c6520616c72656164792072656769737465726564000000000000604482015260640161040d565b61162a6301e13380426124f9565b611636906107b26124cd565b8511156116745760405162461bcd60e51b815260206004820152600c60248201526b24b73b30b634b2103cb2b0b960a11b604482015260640161040d565b6003546000906001600160a01b0316630944a8ca8a87896116996301e13380426124f9565b6116a5906107b26124cd565b6116af919061251b565b8888886040518763ffffffff1660e01b81526004016116d39695949392919061252e565b60408051808303816000875af11580156116f1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611715919061256f565b5060408051610120810182528b8152602081018b90529081018990526060810188905233608082015290915060a081016000815260200182600281111561175e5761175e611f8f565b815242602082015260016040918201525160049061177d908c9061226b565b9081526040519081900360200190208151819061179a908261233b565b50602082015160018201906117af908261233b565b50604082015160028201906117c4908261233b565b506060820151600382015560808201516004820180546001600160a01b039092166001600160a01b031983168117825560a0850151926001600160a81b03191617600160a01b83600281111561181c5761181c611f8f565b021790555060c082015160048201805460ff60a81b1916600160a81b83600281111561184a5761184a611f8f565b021790555060e08201516005820155610100909101516006909101805460ff19169115159190911790556040517fac60a133922621409c80ab6958b2718dc64d275887639e7694b2aa0d87cbcb02906118a8908b903390859061259d565b60405180910390a1505050505050505050565b6118c36118f9565b6001600160a01b0381166118ed57604051631e4fbdf760e01b81526000600482015260240161040d565b6118f681611b26565b50565b6001546001600160a01b031633146106055760405163118cdaa760e01b815233600482015260240161040d565b6005810154610100900460ff16156119755760405162461bcd60e51b815260206004820152601260248201527110db185a5b48185b1c9958591e481c185a5960721b604482015260640161040d565b80600401544710156119c95760405162461bcd60e51b815260206004820152601d60248201527f496e73756666696369656e7420636f6e74726163742062616c616e6365000000604482015260640161040d565b600254600182015460405163ca00902160e01b815260048101919091526000916001600160a01b03169063ca00902190602401602060405180830381865afa158015611a19573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a3d919061241d565b60058301805461ff00191661010017905560048301546040519192506000916001600160a01b03841691908381818185875af1925050503d8060008114611aa0576040519150601f19603f3d011682016040523d82523d6000602084013e611aa5565b606091505b5050905080611aef5760405162461bcd60e51b815260206004820152601660248201527511985a5b1959081d1bc81cd95b99081c185e5b595b9d60521b604482015260640161040d565b825460048401546040519081527fb0727183796e52c5bb00a257c1eb36d8e94dbee5d6d87e259287e3372ae39ace906020016105e6565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600260005403611b9b57604051633ee5aeb560e01b815260040160405180910390fd5b6002600055565b634e487b7160e01b600052604160045260246000fd5b600082601f830112611bc957600080fd5b813567ffffffffffffffff80821115611be457611be4611ba2565b604051601f8301601f19908116603f01168101908282118183101715611c0c57611c0c611ba2565b81604052838152866020858801011115611c2557600080fd5b836020870160208301376000602085830101528094505050505092915050565b600381106118f657600080fd5b60008060408385031215611c6557600080fd5b823567ffffffffffffffff811115611c7c57600080fd5b611c8885828601611bb8565b9250506020830135611c9981611c45565b809150509250929050565b80358015158114611cb457600080fd5b919050565b60008060408385031215611ccc57600080fd5b82359150611cdc60208401611ca4565b90509250929050565b600060208284031215611cf757600080fd5b813567ffffffffffffffff811115611d0e57600080fd5b610dc484828501611bb8565b60005b83811015611d35578181015183820152602001611d1d565b50506000910152565b60008151808452611d56816020860160208601611d1a565b601f01601f19169290920160200192915050565b6000610100808352611d7e8184018c611d3e565b90508281036020840152611d92818b611d3e565b90508281036040840152611da6818a611d3e565b90508281036060840152611dba8189611d3e565b90508281036080840152611dce8188611d3e565b905082810360a0840152611de28187611d3e565b60c0840195909552505090151560e0909101529695505050505050565b600080600080600080600060e0888a031215611e1a57600080fd5b873567ffffffffffffffff80821115611e3257600080fd5b611e3e8b838c01611bb8565b985060208a0135915080821115611e5457600080fd5b611e608b838c01611bb8565b975060408a0135915080821115611e7657600080fd5b611e828b838c01611bb8565b965060608a0135915080821115611e9857600080fd5b611ea48b838c01611bb8565b955060808a0135915080821115611eba57600080fd5b611ec68b838c01611bb8565b945060a08a0135915080821115611edc57600080fd5b611ee88b838c01611bb8565b935060c08a0135915080821115611efe57600080fd5b50611f0b8a828b01611bb8565b91505092959891949750929550565b60008060008060808587031215611f3057600080fd5b84359350602085013567ffffffffffffffff80821115611f4f57600080fd5b611f5b88838901611bb8565b94506040870135915080821115611f7157600080fd5b50611f7e87828801611bb8565b949793965093946060013593505050565b634e487b7160e01b600052602160045260246000fd5b600381106118f657634e487b7160e01b600052602160045260246000fd5b6000610120808352611fd78184018d611d3e565b90508281036020840152611feb818c611d3e565b90508281036040840152611fff818b611d3e565b606084018a90526001600160a01b03891660808501529150612022905086611fa5565b8560a083015261203185611fa5565b8460c08301528360e08301528215156101008301529a9950505050505050505050565b60006020828403121561206657600080fd5b5035919050565b87815286602082015260e06040820152600061208c60e0830188611d3e565b828103606084015261209e8188611d3e565b6080840196909652505091151560a0830152151560c090910152949350505050565b8581526020810185905260408101849052821515606082015260a081016120e683611fa5565b8260808301529695505050505050565b60008060006060848603121561210b57600080fd5b833567ffffffffffffffff81111561212257600080fd5b61212e86828701611bb8565b9660208601359650604090950135949350505050565b803560ff81168114611cb457600080fd5b600080600080600080600080610100898b03121561217257600080fd5b883567ffffffffffffffff8082111561218a57600080fd5b6121968c838d01611bb8565b995060208b01359150808211156121ac57600080fd5b6121b88c838d01611bb8565b985060408b01359150808211156121ce57600080fd5b506121db8b828c01611bb8565b965050606089013594506080890135935060a089013592506121ff60c08a01612144565b915061220d60e08a01611ca4565b90509295985092959890939650565b6001600160a01b03811681146118f657600080fd5b60006020828403121561224357600080fd5b81356115a28161221c565b60006020828403121561226057600080fd5b81356115a281611c45565b6000825161227d818460208701611d1a565b9190910192915050565b60408152600061229a6040830185611d3e565b90506122a583611fa5565b8260208301529392505050565b600181811c908216806122c657607f821691505b6020821081036122e657634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561233657600081815260208120601f850160051c810160208610156123135750805b601f850160051c820191505b818110156123325782815560010161231f565b5050505b505050565b815167ffffffffffffffff81111561235557612355611ba2565b6123698161236384546122b2565b846122ec565b602080601f83116001811461239e57600084156123865750858301515b600019600386901b1c1916600185901b178555612332565b600085815260208120601f198616915b828110156123cd578886015182559484019460019091019084016123ae565b50858210156123eb5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60408152600061240e6040830185611d3e565b90508260208301529392505050565b60006020828403121561242f57600080fd5b81516115a28161221c565b634e487b7160e01b600052601160045260246000fd5b6000600182016124625761246261243a565b5060010190565b60006020828403121561247b57600080fd5b5051919050565b6001600160a01b038616815260a0602082018190526000906124a690830187611d3e565b90506124b185611fa5565b8460408301528360608301528260808301529695505050505050565b808201808211156124e0576124e061243a565b92915050565b6020815260006115a26020830184611d3e565b60008261251657634e487b7160e01b600052601260045260246000fd5b500490565b818103818111156124e0576124e061243a565b60c08152600061254160c0830189611d3e565b6020830197909752506040810194909452606084019290925260ff166080830152151560a090910152919050565b6000806040838503121561258257600080fd5b825161258d81611c45565b6020939093015192949293505050565b6060815260006125b06060830186611d3e565b6001600160a01b038516602084015290506125ca83611fa5565b82604083015294935050505056fea2646970667358221220a3a99baa042596d6d30896994f1298744feec4f3087b3dc33b602c9844a578a764736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x9 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x27F3 CODESIZE SUB DUP1 PUSH3 0x27F3 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x39 SWAP2 PUSH3 0x19D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SSTORE CALLER DUP1 PUSH3 0x65 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x70 DUP2 PUSH3 0x12E JUMP JUMPDEST POP PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR DUP3 SSTORE PUSH1 0x3 DUP1 SLOAD SWAP4 SWAP1 SWAP5 AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH7 0xB1A2BC2EC50000 PUSH32 0x5EFF886EA0CE6CA488A3D6E336D6C0F75F46D19B42C06CE5EE98E42C96D256C7 SSTORE PUSH8 0x16345785D8A0000 PUSH32 0xAD67D757C34507F157CACFA2E3153E9F260A2244F30428821BE7BE64587AC55F SSTORE PUSH1 0x0 MSTORE PUSH8 0x2C68AF0BB140000 PUSH32 0x6ADD646517A5B0F6793CD5891B7937D28A5B2981A5D88EBC7CD776088FEA9041 SSTORE PUSH3 0x1D5 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x198 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1BC DUP4 PUSH3 0x180 JUMP JUMPDEST SWAP2 POP PUSH3 0x1CC PUSH1 0x20 DUP5 ADD PUSH3 0x180 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x260E DUP1 PUSH3 0x1E5 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF7 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x976DE5C5 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xE93B2A34 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xE93B2A34 EQ PUSH2 0x31E JUMPI DUP1 PUSH4 0xF21AD98B EQ PUSH2 0x331 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0xFEDDA0E4 EQ PUSH2 0x371 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x976DE5C5 EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0xA888C2CD EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0xAF02808A EQ PUSH2 0x29F JUMPI DUP1 PUSH4 0xD3E89483 EQ PUSH2 0x2BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x744007FD GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x744007FD EQ PUSH2 0x197 JUMPI DUP1 PUSH4 0x7DAAAAF3 EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0x8F749E15 EQ PUSH2 0x209 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1CA2CF28 EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0x35446DEF EQ PUSH2 0x125 JUMPI DUP1 PUSH4 0x70A1A7D5 EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x182 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0xFE JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x11E CALLDATASIZE PUSH1 0x4 PUSH2 0x1C52 JUMP JUMPDEST PUSH2 0x39E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x131 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x140 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CB9 JUMP JUMPDEST PUSH2 0x529 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x151 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x165 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x5F3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B7 PUSH2 0x1B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CE5 JUMP JUMPDEST PUSH2 0x607 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x179 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D6A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x1E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DFF JUMP JUMPDEST PUSH2 0x986 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x165 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x229 PUSH2 0x224 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F1A JUMP JUMPDEST PUSH2 0xBAB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x179 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x243 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH2 0x252 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CE5 JUMP JUMPDEST PUSH2 0xDCC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x179 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1FC3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x278 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28C PUSH2 0x287 CALLDATASIZE PUSH1 0x4 PUSH2 0x2054 JUMP JUMPDEST PUSH2 0xFCC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x179 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x206D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x165 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30D PUSH2 0x2DA CALLDATASIZE PUSH1 0x4 PUSH2 0x2054 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH1 0xFF DUP1 DUP3 AND SWAP2 PUSH2 0x100 SWAP1 DIV AND DUP6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x179 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x20C0 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x32C CALLDATASIZE PUSH1 0x4 PUSH2 0x20F6 JUMP JUMPDEST PUSH2 0x111E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x34C CALLDATASIZE PUSH1 0x4 PUSH2 0x2155 JUMP JUMPDEST PUSH2 0x15A9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x36C CALLDATASIZE PUSH1 0x4 PUSH2 0x2231 JUMP JUMPDEST PUSH2 0x18BB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x229 PUSH2 0x38C CALLDATASIZE PUSH1 0x4 PUSH2 0x224E JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3A6 PUSH2 0x18F9 JUMP JUMPDEST PUSH1 0x4 DUP3 PUSH1 0x40 MLOAD PUSH2 0x3B6 SWAP2 SWAP1 PUSH2 0x226B JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH1 0xFF AND PUSH2 0x416 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x15995A1A58DB19481B9BDD081C9959DA5CDD195C9959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 DUP3 PUSH1 0x40 MLOAD PUSH2 0x426 SWAP2 SWAP1 PUSH2 0x226B JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 PUSH1 0x7 ADD SLOAD PUSH1 0xFF AND PUSH2 0x47E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x141A1BDD1BDCC81B9BDD081D5C1B1BD8591959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x40D JUMP JUMPDEST DUP1 PUSH1 0x4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x48F SWAP2 SWAP1 PUSH2 0x226B JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x4C1 JUMPI PUSH2 0x4C1 PUSH2 0x1F8F JUMP JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x4D7 SWAP2 SWAP1 PUSH2 0x226B JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP PUSH32 0x16199DC2004744F89CFE5BC916B084FFF79F2E7BE10B3A6BE2240E97846FB408 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x51D SWAP3 SWAP2 SWAP1 PUSH2 0x2287 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x531 PUSH2 0x18F9 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x594 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436C61696D20616C72656164792070726F636573736564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x40D JUMP JUMPDEST PUSH1 0x5 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP2 ISZERO PUSH2 0x5B2 JUMPI PUSH2 0x5B2 DUP2 PUSH2 0x1926 JUMP JUMPDEST DUP3 PUSH32 0xD4203892740C26C8184CFB101077C87CCF2D01BEAF6AEF0C250AB43BB43DF202 DUP4 PUSH1 0x40 MLOAD PUSH2 0x5E6 SWAP2 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH2 0x5FB PUSH2 0x18F9 JUMP JUMPDEST PUSH2 0x605 PUSH1 0x0 PUSH2 0x1B26 JUMP JUMPDEST JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD DUP1 MLOAD PUSH1 0x5 DUP3 MSTORE SWAP3 DUP3 ADD SWAP2 SWAP1 SWAP4 ADD KECCAK256 SWAP2 MSTORE DUP1 SLOAD DUP2 SWAP1 PUSH2 0x62D SWAP1 PUSH2 0x22B2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x659 SWAP1 PUSH2 0x22B2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6A6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x67B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6A6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x689 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x6BB SWAP1 PUSH2 0x22B2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6E7 SWAP1 PUSH2 0x22B2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x734 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x709 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x734 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x717 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x749 SWAP1 PUSH2 0x22B2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x775 SWAP1 PUSH2 0x22B2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7C2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x797 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7C2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7A5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x7D7 SWAP1 PUSH2 0x22B2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x803 SWAP1 PUSH2 0x22B2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x850 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x825 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x850 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x833 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x4 ADD DUP1 SLOAD PUSH2 0x865 SWAP1 PUSH2 0x22B2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x891 SWAP1 PUSH2 0x22B2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8DE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8B3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8DE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8C1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x5 ADD DUP1 SLOAD PUSH2 0x8F3 SWAP1 PUSH2 0x22B2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x91F SWAP1 PUSH2 0x22B2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x96C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x941 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x96C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x94F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x6 DUP4 ADD SLOAD PUSH1 0x7 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 SWAP2 PUSH1 0xFF AND SWAP1 POP DUP9 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP9 PUSH1 0x40 MLOAD PUSH2 0x9A0 SWAP2 SWAP1 PUSH2 0x226B JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x9FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x2737BA103B32B434B1B6329037BBB732B9 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x40D JUMP JUMPDEST PUSH1 0x5 DUP8 PUSH1 0x40 MLOAD PUSH2 0xA0D SWAP2 SWAP1 PUSH2 0x226B JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 PUSH1 0x7 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xA70 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50686F746F7320616C72656164792075706C6F61646564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x40D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x5 DUP9 PUSH1 0x40 MLOAD PUSH2 0xABD SWAP2 SWAP1 PUSH2 0x226B JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 DUP2 MLOAD DUP2 SWAP1 PUSH2 0xADA SWAP1 DUP3 PUSH2 0x233B JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SWAP1 PUSH2 0xAEF SWAP1 DUP3 PUSH2 0x233B JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 DUP3 ADD SWAP1 PUSH2 0xB04 SWAP1 DUP3 PUSH2 0x233B JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 DUP3 ADD SWAP1 PUSH2 0xB19 SWAP1 DUP3 PUSH2 0x233B JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x4 DUP3 ADD SWAP1 PUSH2 0xB2E SWAP1 DUP3 PUSH2 0x233B JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0x5 DUP3 ADD SWAP1 PUSH2 0xB43 SWAP1 DUP3 PUSH2 0x233B JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH1 0x6 DUP3 ADD SSTORE PUSH1 0xE0 SWAP1 SWAP2 ADD MLOAD PUSH1 0x7 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x1D11784494A8CE3357EAAB9E9CF4439A22DD7B03AEFAEA16088E21E4BB2CFEAC SWAP1 PUSH2 0xB9A SWAP1 DUP10 SWAP1 TIMESTAMP SWAP1 PUSH2 0x23FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBB5 PUSH2 0x1B78 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0xFF AND PUSH2 0xC0A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x506F6C696379206E6F7420616374697665 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x40D JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xCA009021 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xCA009021 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC53 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC77 SWAP2 SWAP1 PUSH2 0x241D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xCC0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x2737BA103837B634B1BC9037BBB732B9 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x40D JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x0 SWAP2 DUP3 PUSH2 0xCD1 DUP4 PUSH2 0x2450 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x40 DUP1 MLOAD PUSH1 0xE0 DUP2 ADD DUP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP11 DUP2 MSTORE DUP3 DUP5 ADD DUP11 DUP2 MSTORE PUSH1 0x60 DUP5 ADD DUP11 SWAP1 MSTORE PUSH1 0x80 DUP5 ADD DUP10 SWAP1 MSTORE PUSH1 0x0 PUSH1 0xA0 DUP6 ADD DUP2 SWAP1 MSTORE PUSH1 0xC0 DUP6 ADD DUP2 SWAP1 MSTORE DUP7 DUP2 MSTORE PUSH1 0x7 SWAP1 SWAP4 MSTORE SWAP4 SWAP1 SWAP2 KECCAK256 DUP3 MLOAD DUP2 SSTORE SWAP1 MLOAD PUSH1 0x1 DUP3 ADD SSTORE SWAP2 MLOAD SWAP3 SWAP4 POP SWAP2 PUSH1 0x2 DUP3 ADD SWAP1 PUSH2 0xD3A SWAP1 DUP3 PUSH2 0x233B JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 DUP3 ADD SWAP1 PUSH2 0xD4F SWAP1 DUP3 PUSH2 0x233B JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x4 DUP3 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0x5 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xC0 SWAP1 SWAP4 ADD MLOAD ISZERO ISZERO PUSH2 0x100 MUL PUSH2 0xFF00 NOT SWAP3 ISZERO ISZERO SWAP3 SWAP1 SWAP3 AND PUSH2 0xFFFF NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR OR SWAP1 SSTORE PUSH1 0x40 MLOAD DUP7 SWAP1 DUP3 SWAP1 PUSH32 0x675E9CD1EF5A9BB6971C9F1099ECED3C6607BE0407BC871BC50A8A7B36832E74 SWAP1 PUSH1 0x0 SWAP1 LOG3 SWAP1 POP PUSH2 0xDC4 PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD DUP1 MLOAD PUSH1 0x4 DUP3 MSTORE SWAP3 DUP3 ADD SWAP2 SWAP1 SWAP4 ADD KECCAK256 SWAP2 MSTORE DUP1 SLOAD DUP2 SWAP1 PUSH2 0xDF2 SWAP1 PUSH2 0x22B2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xE1E SWAP1 PUSH2 0x22B2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE6B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE40 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE6B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE4E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xE80 SWAP1 PUSH2 0x22B2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xEAC SWAP1 PUSH2 0x22B2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xEF9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xECE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xEF9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xEDC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0xF0E SWAP1 PUSH2 0x22B2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xF3A SWAP1 PUSH2 0x22B2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF87 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xF5C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF87 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF6A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0x6 SWAP1 SWAP7 ADD SLOAD SWAP5 SWAP6 SWAP2 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP5 POP PUSH1 0xFF PUSH1 0x1 PUSH1 0xA0 SHL DUP4 DIV DUP2 AND SWAP5 POP PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 SWAP3 DIV DUP3 AND SWAP3 SWAP2 AND DUP10 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD DUP1 SLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH2 0xFF4 SWAP1 PUSH2 0x22B2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1020 SWAP1 PUSH2 0x22B2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x106D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1042 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x106D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1050 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x1082 SWAP1 PUSH2 0x22B2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x10AE SWAP1 PUSH2 0x22B2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x10FB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x10D0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x10FB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x10DE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0x5 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 SWAP2 PUSH1 0xFF DUP1 DUP3 AND SWAP3 POP PUSH2 0x100 SWAP1 SWAP2 DIV AND DUP8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1128 PUSH2 0x1B78 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP6 PUSH1 0x40 MLOAD PUSH2 0x113A SWAP2 SWAP1 PUSH2 0x226B JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 PUSH1 0x6 DUP2 ADD SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND PUSH2 0x1199 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x15995A1A58DB19481B9BDD081C9959DA5CDD195C9959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x40D JUMP JUMPDEST PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x11E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x2737BA103B32B434B1B6329037BBB732B9 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x40D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x120B JUMPI PUSH2 0x120B PUSH2 0x1F8F JUMP JUMPDEST EQ PUSH2 0x124F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x15995A1A58DB19481B9BDD081D995C9A599A5959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x40D JUMP JUMPDEST PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x8 SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1275 JUMPI PUSH2 0x1275 PUSH2 0x1F8F JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1286 JUMPI PUSH2 0x1286 PUSH2 0x1F8F JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP4 GT ISZERO PUSH2 0x12E4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F76657261676520657863656564732074696572206C696D69740000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x40D JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x4 DUP3 DUP2 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x1A709F85 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 PUSH4 0x69C27E14 SWAP3 PUSH2 0x1325 SWAP3 DUP12 SWAP3 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 SWAP3 DIV PUSH1 0xFF AND SWAP2 ADD PUSH2 0x2287 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1342 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1366 SWAP2 SWAP1 PUSH2 0x2469 JUMP JUMPDEST SWAP1 POP DUP1 CALLVALUE LT ISZERO PUSH2 0x13B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74207072656D69756D207061796D656E7400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x40D JUMP JUMPDEST PUSH1 0x0 DUP6 GT PUSH2 0x13FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x24B73B30B634B210323AB930BA34B7B7 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x40D JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x4 DUP4 DUP2 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x43537FD PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x0 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 PUSH4 0x21A9BFE8 SWAP3 PUSH2 0x1441 SWAP3 CALLER SWAP3 DUP14 SWAP3 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND SWAP2 DUP10 SWAP2 DUP14 SWAP2 ADD PUSH2 0x2482 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1460 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1484 SWAP2 SWAP1 PUSH2 0x2469 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP8 TIMESTAMP PUSH2 0x14A9 SWAP2 SWAP1 PUSH2 0x24CD JUMP JUMPDEST DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x40 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x14D8 JUMPI PUSH2 0x14D8 PUSH2 0x1F8F JUMP JUMPDEST SWAP1 MSTORE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP4 MLOAD DUP2 SSTORE SWAP1 DUP4 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE SWAP1 DUP3 ADD MLOAD PUSH1 0x2 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x3 DUP4 ADD DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH1 0xFF NOT DUP4 AND DUP2 OR DUP3 SSTORE PUSH1 0x80 DUP7 ADD MLOAD SWAP4 SWAP2 SWAP3 PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0xFFFF NOT SWAP1 SWAP2 AND OR SWAP1 PUSH2 0x100 SWAP1 DUP5 SWAP1 DUP2 GT ISZERO PUSH2 0x154A JUMPI PUSH2 0x154A PUSH2 0x1F8F JUMP JUMPDEST MUL OR SWAP1 SSTORE POP SWAP1 POP POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH32 0x21D0178F0CDE2AED24022DB30651DABAFB4BBE431FB787FBC92113304D8E3549 DUP10 PUSH1 0x40 MLOAD PUSH2 0x158C SWAP2 SWAP1 PUSH2 0x24E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP3 POP POP POP PUSH2 0x15A2 PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x4 DUP9 PUSH1 0x40 MLOAD PUSH2 0x15B9 SWAP2 SWAP1 PUSH2 0x226B JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x161C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56656869636C6520616C72656164792072656769737465726564000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x40D JUMP JUMPDEST PUSH2 0x162A PUSH4 0x1E13380 TIMESTAMP PUSH2 0x24F9 JUMP JUMPDEST PUSH2 0x1636 SWAP1 PUSH2 0x7B2 PUSH2 0x24CD JUMP JUMPDEST DUP6 GT ISZERO PUSH2 0x1674 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x24B73B30B634B2103CB2B0B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x40D JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x944A8CA DUP11 DUP8 DUP10 PUSH2 0x1699 PUSH4 0x1E13380 TIMESTAMP PUSH2 0x24F9 JUMP JUMPDEST PUSH2 0x16A5 SWAP1 PUSH2 0x7B2 PUSH2 0x24CD JUMP JUMPDEST PUSH2 0x16AF SWAP2 SWAP1 PUSH2 0x251B JUMP JUMPDEST DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD DUP8 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16D3 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x252E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x16F1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1715 SWAP2 SWAP1 PUSH2 0x256F JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD DUP3 MSTORE DUP12 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP12 SWAP1 MSTORE SWAP1 DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP9 SWAP1 MSTORE CALLER PUSH1 0x80 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH1 0xA0 DUP2 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x175E JUMPI PUSH2 0x175E PUSH2 0x1F8F JUMP JUMPDEST DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x40 SWAP2 DUP3 ADD MSTORE MLOAD PUSH1 0x4 SWAP1 PUSH2 0x177D SWAP1 DUP13 SWAP1 PUSH2 0x226B JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 DUP2 MLOAD DUP2 SWAP1 PUSH2 0x179A SWAP1 DUP3 PUSH2 0x233B JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SWAP1 PUSH2 0x17AF SWAP1 DUP3 PUSH2 0x233B JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 DUP3 ADD SWAP1 PUSH2 0x17C4 SWAP1 DUP3 PUSH2 0x233B JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x4 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP3 SSTORE PUSH1 0xA0 DUP6 ADD MLOAD SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND OR PUSH1 0x1 PUSH1 0xA0 SHL DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x181C JUMPI PUSH2 0x181C PUSH2 0x1F8F JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH1 0x4 DUP3 ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0xA8 SHL NOT AND PUSH1 0x1 PUSH1 0xA8 SHL DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x184A JUMPI PUSH2 0x184A PUSH2 0x1F8F JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH1 0x5 DUP3 ADD SSTORE PUSH2 0x100 SWAP1 SWAP2 ADD MLOAD PUSH1 0x6 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xAC60A133922621409C80AB6958B2718DC64D275887639E7694B2AA0D87CBCB02 SWAP1 PUSH2 0x18A8 SWAP1 DUP12 SWAP1 CALLER SWAP1 DUP6 SWAP1 PUSH2 0x259D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x18C3 PUSH2 0x18F9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x18ED JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x40D JUMP JUMPDEST PUSH2 0x18F6 DUP2 PUSH2 0x1B26 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x605 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x40D JUMP JUMPDEST PUSH1 0x5 DUP2 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1975 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x10DB185A5B48185B1C9958591E481C185A59 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x40D JUMP JUMPDEST DUP1 PUSH1 0x4 ADD SLOAD SELFBALANCE LT ISZERO PUSH2 0x19C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420636F6E74726163742062616C616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x40D JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0xCA009021 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xCA009021 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A19 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A3D SWAP2 SWAP1 PUSH2 0x241D JUMP JUMPDEST PUSH1 0x5 DUP4 ADD DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0x40 MLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1AA0 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1AA5 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1AEF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x11985A5B1959081D1BC81CD95B99081C185E5B595B9D PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x40D JUMP JUMPDEST DUP3 SLOAD PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xB0727183796E52C5BB00A257C1EB36D8E94DBEE5D6D87E259287E3372AE39ACE SWAP1 PUSH1 0x20 ADD PUSH2 0x5E6 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0x1B9B JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1BC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1BE4 JUMPI PUSH2 0x1BE4 PUSH2 0x1BA2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1C0C JUMPI PUSH2 0x1C0C PUSH2 0x1BA2 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x1C25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x18F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C88 DUP6 DUP3 DUP7 ADD PUSH2 0x1BB8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1C99 DUP2 PUSH2 0x1C45 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1CB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x1CDC PUSH1 0x20 DUP5 ADD PUSH2 0x1CA4 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC4 DUP5 DUP3 DUP6 ADD PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D35 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1D1D JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1D56 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1D1A JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP1 DUP4 MSTORE PUSH2 0x1D7E DUP2 DUP5 ADD DUP13 PUSH2 0x1D3E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1D92 DUP2 DUP12 PUSH2 0x1D3E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x1DA6 DUP2 DUP11 PUSH2 0x1D3E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1DBA DUP2 DUP10 PUSH2 0x1D3E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x1DCE DUP2 DUP9 PUSH2 0x1D3E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0xA0 DUP5 ADD MSTORE PUSH2 0x1DE2 DUP2 DUP8 PUSH2 0x1D3E JUMP JUMPDEST PUSH1 0xC0 DUP5 ADD SWAP6 SWAP1 SWAP6 MSTORE POP POP SWAP1 ISZERO ISZERO PUSH1 0xE0 SWAP1 SWAP2 ADD MSTORE SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1E1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1E32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E3E DUP12 DUP4 DUP13 ADD PUSH2 0x1BB8 JUMP JUMPDEST SWAP9 POP PUSH1 0x20 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1E54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E60 DUP12 DUP4 DUP13 ADD PUSH2 0x1BB8 JUMP JUMPDEST SWAP8 POP PUSH1 0x40 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1E76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E82 DUP12 DUP4 DUP13 ADD PUSH2 0x1BB8 JUMP JUMPDEST SWAP7 POP PUSH1 0x60 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1E98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1EA4 DUP12 DUP4 DUP13 ADD PUSH2 0x1BB8 JUMP JUMPDEST SWAP6 POP PUSH1 0x80 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1EBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1EC6 DUP12 DUP4 DUP13 ADD PUSH2 0x1BB8 JUMP JUMPDEST SWAP5 POP PUSH1 0xA0 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1EDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1EE8 DUP12 DUP4 DUP13 ADD PUSH2 0x1BB8 JUMP JUMPDEST SWAP4 POP PUSH1 0xC0 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1EFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F0B DUP11 DUP3 DUP12 ADD PUSH2 0x1BB8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1F30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1F4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F5B DUP9 DUP4 DUP10 ADD PUSH2 0x1BB8 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1F71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F7E DUP8 DUP3 DUP9 ADD PUSH2 0x1BB8 JUMP JUMPDEST SWAP5 SWAP8 SWAP4 SWAP7 POP SWAP4 SWAP5 PUSH1 0x60 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x18F6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP1 DUP4 MSTORE PUSH2 0x1FD7 DUP2 DUP5 ADD DUP14 PUSH2 0x1D3E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1FEB DUP2 DUP13 PUSH2 0x1D3E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x1FFF DUP2 DUP12 PUSH2 0x1D3E JUMP JUMPDEST PUSH1 0x60 DUP5 ADD DUP11 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x80 DUP6 ADD MSTORE SWAP2 POP PUSH2 0x2022 SWAP1 POP DUP7 PUSH2 0x1FA5 JUMP JUMPDEST DUP6 PUSH1 0xA0 DUP4 ADD MSTORE PUSH2 0x2031 DUP6 PUSH2 0x1FA5 JUMP JUMPDEST DUP5 PUSH1 0xC0 DUP4 ADD MSTORE DUP4 PUSH1 0xE0 DUP4 ADD MSTORE DUP3 ISZERO ISZERO PUSH2 0x100 DUP4 ADD MSTORE SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2066 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP8 DUP2 MSTORE DUP7 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xE0 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x208C PUSH1 0xE0 DUP4 ADD DUP9 PUSH2 0x1D3E JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x209E DUP2 DUP9 PUSH2 0x1D3E JUMP JUMPDEST PUSH1 0x80 DUP5 ADD SWAP7 SWAP1 SWAP7 MSTORE POP POP SWAP2 ISZERO ISZERO PUSH1 0xA0 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0xC0 SWAP1 SWAP2 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE DUP3 ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 ADD PUSH2 0x20E6 DUP4 PUSH2 0x1FA5 JUMP JUMPDEST DUP3 PUSH1 0x80 DUP4 ADD MSTORE SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x210B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2122 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x212E DUP7 DUP3 DUP8 ADD PUSH2 0x1BB8 JUMP JUMPDEST SWAP7 PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP7 POP PUSH1 0x40 SWAP1 SWAP6 ADD CALLDATALOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x1CB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x2172 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x218A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2196 DUP13 DUP4 DUP14 ADD PUSH2 0x1BB8 JUMP JUMPDEST SWAP10 POP PUSH1 0x20 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x21AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x21B8 DUP13 DUP4 DUP14 ADD PUSH2 0x1BB8 JUMP JUMPDEST SWAP9 POP PUSH1 0x40 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x21CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21DB DUP12 DUP3 DUP13 ADD PUSH2 0x1BB8 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD SWAP4 POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD SWAP3 POP PUSH2 0x21FF PUSH1 0xC0 DUP11 ADD PUSH2 0x2144 JUMP JUMPDEST SWAP2 POP PUSH2 0x220D PUSH1 0xE0 DUP11 ADD PUSH2 0x1CA4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x18F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2243 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x15A2 DUP2 PUSH2 0x221C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2260 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x15A2 DUP2 PUSH2 0x1C45 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x227D DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1D1A JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x229A PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1D3E JUMP JUMPDEST SWAP1 POP PUSH2 0x22A5 DUP4 PUSH2 0x1FA5 JUMP JUMPDEST DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x22C6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x22E6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2336 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x2313 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2332 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x231F JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2355 JUMPI PUSH2 0x2355 PUSH2 0x1BA2 JUMP JUMPDEST PUSH2 0x2369 DUP2 PUSH2 0x2363 DUP5 SLOAD PUSH2 0x22B2 JUMP JUMPDEST DUP5 PUSH2 0x22EC JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x239E JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x2386 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x2332 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x23CD JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x23AE JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x23EB JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x240E PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1D3E JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x242F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x15A2 DUP2 PUSH2 0x221C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x2462 JUMPI PUSH2 0x2462 PUSH2 0x243A JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x247B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 MSTORE PUSH1 0xA0 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x24A6 SWAP1 DUP4 ADD DUP8 PUSH2 0x1D3E JUMP JUMPDEST SWAP1 POP PUSH2 0x24B1 DUP6 PUSH2 0x1FA5 JUMP JUMPDEST DUP5 PUSH1 0x40 DUP4 ADD MSTORE DUP4 PUSH1 0x60 DUP4 ADD MSTORE DUP3 PUSH1 0x80 DUP4 ADD MSTORE SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x24E0 JUMPI PUSH2 0x24E0 PUSH2 0x243A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x15A2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1D3E JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2516 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x24E0 JUMPI PUSH2 0x24E0 PUSH2 0x243A JUMP JUMPDEST PUSH1 0xC0 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2541 PUSH1 0xC0 DUP4 ADD DUP10 PUSH2 0x1D3E JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP8 SWAP1 SWAP8 MSTORE POP PUSH1 0x40 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x60 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xFF AND PUSH1 0x80 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0xA0 SWAP1 SWAP2 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2582 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH2 0x258D DUP2 PUSH2 0x1C45 JUMP JUMPDEST PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD MLOAD SWAP3 SWAP5 SWAP3 SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x25B0 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x1D3E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP1 POP PUSH2 0x25CA DUP4 PUSH2 0x1FA5 JUMP JUMPDEST DUP3 PUSH1 0x40 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 0xA9 SWAP12 0xAA DIV 0x25 SWAP7 0xD6 0xD3 ADDMOD SWAP7 SWAP10 0x4F SLT SWAP9 PUSH21 0x4FEEC4F3087B3DC33B602C9844A578A764736F6C63 NUMBER STOP ADDMOD EQ STOP CALLER ","sourceMap":"203:7946:17:-:0;;;1657:1;1626:32;;2210:453;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1857:1:9;2061:7;:21;2289:10:17;;1269:95:0;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;640:51:20;613:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;2311:9:17::1;:41:::0;;-1:-1:-1;;;;;2311:41:17;;::::1;-1:-1:-1::0;;;;;;2311:41:17;;::::1;;::::0;;2362:14:::1;:56:::0;;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;2437:14:::1;:53;::::0;2493:10:::1;2437:53:::0;:66;2570:9:::1;2513:54:::0;:66;-1:-1:-1;2589:55:17;2647:9:::1;2589:55:::0;:67;203:7946;;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;14:177:20:-;93:13;;-1:-1:-1;;;;;135:31:20;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;702:127::-;203:7946:17;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_7144":{"entryPoint":null,"id":7144,"parameterSlots":0,"returnSlots":0},"@_checkOwner_84":{"entryPoint":6393,"id":84,"parameterSlots":0,"returnSlots":0},"@_msgSender_1493":{"entryPoint":null,"id":1493,"parameterSlots":0,"returnSlots":1},"@_nonReentrantAfter_1620":{"entryPoint":null,"id":1620,"parameterSlots":0,"returnSlots":0},"@_nonReentrantBefore_1612":{"entryPoint":7032,"id":1612,"parameterSlots":0,"returnSlots":0},"@_processPayout_7140":{"entryPoint":6438,"id":7140,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":6950,"id":146,"parameterSlots":1,"returnSlots":0},"@claims_6554":{"entryPoint":4044,"id":6554,"parameterSlots":0,"returnSlots":0},"@coverageLimits_6559":{"entryPoint":null,"id":6559,"parameterSlots":0,"returnSlots":0},"@createPolicy_6972":{"entryPoint":4382,"id":6972,"parameterSlots":3,"returnSlots":1},"@owner_67":{"entryPoint":null,"id":67,"parameterSlots":0,"returnSlots":1},"@policies_6549":{"entryPoint":null,"id":6549,"parameterSlots":0,"returnSlots":0},"@policyNFT_6462":{"entryPoint":null,"id":6462,"parameterSlots":0,"returnSlots":0},"@processClaim_7075":{"entryPoint":1321,"id":7075,"parameterSlots":2,"returnSlots":0},"@registerVehicle_6747":{"entryPoint":5545,"id":6747,"parameterSlots":8,"returnSlots":0},"@renounceOwnership_98":{"entryPoint":1523,"id":98,"parameterSlots":0,"returnSlots":0},"@riskAssessment_6465":{"entryPoint":null,"id":6465,"parameterSlots":0,"returnSlots":0},"@submitClaim_7033":{"entryPoint":2987,"id":7033,"parameterSlots":4,"returnSlots":1},"@transferOwnership_126":{"entryPoint":6331,"id":126,"parameterSlots":1,"returnSlots":0},"@updateVerificationStatus_6854":{"entryPoint":926,"id":6854,"parameterSlots":2,"returnSlots":0},"@uploadVehiclePhotos_6807":{"entryPoint":2438,"id":6807,"parameterSlots":7,"returnSlots":0},"@vehiclePhotos_6544":{"entryPoint":1543,"id":6544,"parameterSlots":0,"returnSlots":0},"@vehicles_6539":{"entryPoint":3532,"id":6539,"parameterSlots":0,"returnSlots":0},"abi_decode_bool":{"entryPoint":7332,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_string":{"entryPoint":7096,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":8753,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":9245,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_enum$_VerificationTier_$6389":{"entryPoint":8782,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_enum$_VerificationTier_$6389t_uint256_fromMemory":{"entryPoint":9583,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_string_memory_ptr":{"entryPoint":7397,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_enum$_VerificationStatus_$6469":{"entryPoint":7250,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_string_memory_ptr":{"entryPoint":7679,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_uint256t_uint256t_uint256t_uint8t_bool":{"entryPoint":8533,"id":null,"parameterSlots":2,"returnSlots":8},"abi_decode_tuple_t_string_memory_ptrt_uint256t_uint256":{"entryPoint":8438,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256":{"entryPoint":8276,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":9321,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_bool":{"entryPoint":7353,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptrt_uint256":{"entryPoint":7962,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_uint8":{"entryPoint":8516,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_string":{"entryPoint":7486,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":8811,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_string_memory_ptr_t_enum$_VerificationTier_$6389_t_uint256_t_uint256__to_t_address_t_string_memory_ptr_t_uint8_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":9346,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IPolicyNFT_$6450__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IRiskAssessment_$6421__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9446,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr_t_address_t_enum$_VerificationTier_$6389__to_t_string_memory_ptr_t_address_t_uint8__fromStack_reversed":{"entryPoint":9629,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr_t_enum$_VerificationStatus_$6469__to_t_string_memory_ptr_t_uint8__fromStack_reversed":{"entryPoint":8839,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr_t_enum$_VerificationTier_$6389__to_t_string_memory_ptr_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_bool__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_bool__fromStack_reversed":{"entryPoint":7530,"id":null,"parameterSlots":9,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_enum$_VerificationStatus_$6469_t_enum$_VerificationTier_$6389_t_uint256_t_bool__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_uint8_t_uint8_t_uint256_t_bool__fromStack_reversed":{"entryPoint":8131,"id":null,"parameterSlots":10,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr_t_uint256__to_t_string_memory_ptr_t_uint256__fromStack_reversed":{"entryPoint":9211,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_uint8_t_bool__to_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_uint8_t_bool__fromStack_reversed":{"entryPoint":9518,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24673d1b0003a199275166474575e96e531c915eb950e021102fb167de0d7af4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_247169d39dec5a8666f09ef6f1e26495735cec7758e82ed149c983ef50cdbcf1__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3793fdef918127330e0d76c5b92b8820046031cf55bdfac2b0725a41a43ee952__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_49dea5ad47e4b4a8e741022bbde0f91413b0cb7f3d15b1515bae7c7b15a11cde__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4bc221f51c0c4bd6523cb893b47fce57185073464b1c6fa624cc7cfeaeaca718__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_645330ee036893cbc37966ce7efc404d1f8451960092bb671b4db5d0c8accd42__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6a1fe13f1cbfc4e94e476d484fdbff96a49a9eed66b275148b49e4ed57d3a6bc__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_92ad45549db9f58d19e024365f85a0c8ac795b4a8ba66a369c16933f75075f07__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_94c883244898b2ef300949156ea78e9c524ab5bc5021a4d0763c5111f4225c8f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a91c9f81e9feb710f18005dba909bf9f6dc78a9b082739b042458d7a998ca6ab__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_aeef98c871014711956d29bf45ac3fa97a84e928c584213afc461aa2c4a788c5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c1a493b215ee9743b1073772936fe1708d9ad9a54e420311fd253597e9010212__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d4641406100510d0ad93d6c220da4cef8ded35e87ec0657f527e262652d1c942__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f00b54c7845babbe8f88a73867934c8d99124bf65b43aac829e39ecb9b6e5191__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ff9ad865b57974cd8b3c520410a7fb45d1a1d122e3478b20a5b20d59fc540b67__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_bool_t_bool__to_t_uint256_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_bool_t_bool__fromStack_reversed":{"entryPoint":8301,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_bool_t_enum$_VerificationTier_$6389__to_t_uint256_t_uint256_t_uint256_t_bool_t_uint8__fromStack_reversed":{"entryPoint":8384,"id":null,"parameterSlots":6,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":9421,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":9465,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":9499,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":8940,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":9019,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":7450,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":8882,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"increment_t_uint256":{"entryPoint":9296,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":9274,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":8079,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":7074,"id":null,"parameterSlots":0,"returnSlots":0},"validator_assert_enum_VerificationStatus":{"entryPoint":8101,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_address":{"entryPoint":8732,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_enum_VerificationStatus":{"entryPoint":7237,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:25915:20","statements":[{"nodeType":"YulBlock","src":"6:3:20","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:95:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:20","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"70:3:20","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"75:10:20","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"66:3:20"},"nodeType":"YulFunctionCall","src":"66:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:20"},"nodeType":"YulFunctionCall","src":"56:31:20"},"nodeType":"YulExpressionStatement","src":"56:31:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"106:4:20","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"96:6:20"},"nodeType":"YulFunctionCall","src":"96:15:20"},"nodeType":"YulExpressionStatement","src":"96:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"127:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"130:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"120:6:20"},"nodeType":"YulFunctionCall","src":"120:15:20"},"nodeType":"YulExpressionStatement","src":"120:15:20"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14:127:20"},{"body":{"nodeType":"YulBlock","src":"199:666:20","statements":[{"body":{"nodeType":"YulBlock","src":"248:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"257:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"260:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"250:6:20"},"nodeType":"YulFunctionCall","src":"250:12:20"},"nodeType":"YulExpressionStatement","src":"250:12:20"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"227:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"235:4:20","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"223:3:20"},"nodeType":"YulFunctionCall","src":"223:17:20"},{"name":"end","nodeType":"YulIdentifier","src":"242:3:20"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"219:3:20"},"nodeType":"YulFunctionCall","src":"219:27:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"212:6:20"},"nodeType":"YulFunctionCall","src":"212:35:20"},"nodeType":"YulIf","src":"209:55:20"},{"nodeType":"YulVariableDeclaration","src":"273:30:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"296:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"283:12:20"},"nodeType":"YulFunctionCall","src":"283:20:20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"277:2:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"312:28:20","value":{"kind":"number","nodeType":"YulLiteral","src":"322:18:20","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"316:2:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"363:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"365:16:20"},"nodeType":"YulFunctionCall","src":"365:18:20"},"nodeType":"YulExpressionStatement","src":"365:18:20"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"355:2:20"},{"name":"_2","nodeType":"YulIdentifier","src":"359:2:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"352:2:20"},"nodeType":"YulFunctionCall","src":"352:10:20"},"nodeType":"YulIf","src":"349:36:20"},{"nodeType":"YulVariableDeclaration","src":"394:17:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"408:2:20","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"404:3:20"},"nodeType":"YulFunctionCall","src":"404:7:20"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"398:2:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"420:23:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:2:20","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"434:5:20"},"nodeType":"YulFunctionCall","src":"434:9:20"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"424:6:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"452:71:20","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"474:6:20"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"498:2:20"},{"kind":"number","nodeType":"YulLiteral","src":"502:4:20","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"494:3:20"},"nodeType":"YulFunctionCall","src":"494:13:20"},{"name":"_3","nodeType":"YulIdentifier","src":"509:2:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"490:3:20"},"nodeType":"YulFunctionCall","src":"490:22:20"},{"kind":"number","nodeType":"YulLiteral","src":"514:2:20","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"486:3:20"},"nodeType":"YulFunctionCall","src":"486:31:20"},{"name":"_3","nodeType":"YulIdentifier","src":"519:2:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"482:3:20"},"nodeType":"YulFunctionCall","src":"482:40:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"470:3:20"},"nodeType":"YulFunctionCall","src":"470:53:20"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"456:10:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"582:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"584:16:20"},"nodeType":"YulFunctionCall","src":"584:18:20"},"nodeType":"YulExpressionStatement","src":"584:18:20"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"541:10:20"},{"name":"_2","nodeType":"YulIdentifier","src":"553:2:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"538:2:20"},"nodeType":"YulFunctionCall","src":"538:18:20"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"561:10:20"},{"name":"memPtr","nodeType":"YulIdentifier","src":"573:6:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"558:2:20"},"nodeType":"YulFunctionCall","src":"558:22:20"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"535:2:20"},"nodeType":"YulFunctionCall","src":"535:46:20"},"nodeType":"YulIf","src":"532:72:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"620:2:20","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"624:10:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"613:6:20"},"nodeType":"YulFunctionCall","src":"613:22:20"},"nodeType":"YulExpressionStatement","src":"613:22:20"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"651:6:20"},{"name":"_1","nodeType":"YulIdentifier","src":"659:2:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"644:6:20"},"nodeType":"YulFunctionCall","src":"644:18:20"},"nodeType":"YulExpressionStatement","src":"644:18:20"},{"body":{"nodeType":"YulBlock","src":"710:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"719:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"722:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"712:6:20"},"nodeType":"YulFunctionCall","src":"712:12:20"},"nodeType":"YulExpressionStatement","src":"712:12:20"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"685:6:20"},{"name":"_1","nodeType":"YulIdentifier","src":"693:2:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"681:3:20"},"nodeType":"YulFunctionCall","src":"681:15:20"},{"kind":"number","nodeType":"YulLiteral","src":"698:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"677:3:20"},"nodeType":"YulFunctionCall","src":"677:26:20"},{"name":"end","nodeType":"YulIdentifier","src":"705:3:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"674:2:20"},"nodeType":"YulFunctionCall","src":"674:35:20"},"nodeType":"YulIf","src":"671:55:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"752:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"760:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"748:3:20"},"nodeType":"YulFunctionCall","src":"748:17:20"},{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"771:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"779:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"767:3:20"},"nodeType":"YulFunctionCall","src":"767:17:20"},{"name":"_1","nodeType":"YulIdentifier","src":"786:2:20"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"735:12:20"},"nodeType":"YulFunctionCall","src":"735:54:20"},"nodeType":"YulExpressionStatement","src":"735:54:20"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"813:6:20"},{"name":"_1","nodeType":"YulIdentifier","src":"821:2:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"809:3:20"},"nodeType":"YulFunctionCall","src":"809:15:20"},{"kind":"number","nodeType":"YulLiteral","src":"826:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"805:3:20"},"nodeType":"YulFunctionCall","src":"805:26:20"},{"kind":"number","nodeType":"YulLiteral","src":"833:1:20","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"798:6:20"},"nodeType":"YulFunctionCall","src":"798:37:20"},"nodeType":"YulExpressionStatement","src":"798:37:20"},{"nodeType":"YulAssignment","src":"844:15:20","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"853:6:20"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"844:5:20"}]}]},"name":"abi_decode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"173:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"181:3:20","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"189:5:20","type":""}],"src":"146:719:20"},{"body":{"nodeType":"YulBlock","src":"931:56:20","statements":[{"body":{"nodeType":"YulBlock","src":"965:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"974:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"977:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"967:6:20"},"nodeType":"YulFunctionCall","src":"967:12:20"},"nodeType":"YulExpressionStatement","src":"967:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"954:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"961:1:20","type":"","value":"3"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"951:2:20"},"nodeType":"YulFunctionCall","src":"951:12:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"944:6:20"},"nodeType":"YulFunctionCall","src":"944:20:20"},"nodeType":"YulIf","src":"941:40:20"}]},"name":"validator_revert_enum_VerificationStatus","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"920:5:20","type":""}],"src":"870:117:20"},{"body":{"nodeType":"YulBlock","src":"1112:376:20","statements":[{"body":{"nodeType":"YulBlock","src":"1158:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1167:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1170:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1160:6:20"},"nodeType":"YulFunctionCall","src":"1160:12:20"},"nodeType":"YulExpressionStatement","src":"1160:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1133:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"1142:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1129:3:20"},"nodeType":"YulFunctionCall","src":"1129:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"1154:2:20","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1125:3:20"},"nodeType":"YulFunctionCall","src":"1125:32:20"},"nodeType":"YulIf","src":"1122:52:20"},{"nodeType":"YulVariableDeclaration","src":"1183:37:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1210:9:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1197:12:20"},"nodeType":"YulFunctionCall","src":"1197:23:20"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1187:6:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"1263:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1272:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1275:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1265:6:20"},"nodeType":"YulFunctionCall","src":"1265:12:20"},"nodeType":"YulExpressionStatement","src":"1265:12:20"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1235:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"1243:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1232:2:20"},"nodeType":"YulFunctionCall","src":"1232:30:20"},"nodeType":"YulIf","src":"1229:50:20"},{"nodeType":"YulAssignment","src":"1288:60:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1320:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"1331:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1316:3:20"},"nodeType":"YulFunctionCall","src":"1316:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1340:7:20"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"1298:17:20"},"nodeType":"YulFunctionCall","src":"1298:50:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1288:6:20"}]},{"nodeType":"YulVariableDeclaration","src":"1357:45:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1387:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"1398:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1383:3:20"},"nodeType":"YulFunctionCall","src":"1383:18:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1370:12:20"},"nodeType":"YulFunctionCall","src":"1370:32:20"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1361:5:20","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1452:5:20"}],"functionName":{"name":"validator_revert_enum_VerificationStatus","nodeType":"YulIdentifier","src":"1411:40:20"},"nodeType":"YulFunctionCall","src":"1411:47:20"},"nodeType":"YulExpressionStatement","src":"1411:47:20"},{"nodeType":"YulAssignment","src":"1467:15:20","value":{"name":"value","nodeType":"YulIdentifier","src":"1477:5:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1467:6:20"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_enum$_VerificationStatus_$6469","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1070:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1081:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1093:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1101:6:20","type":""}],"src":"992:496:20"},{"body":{"nodeType":"YulBlock","src":"1539:114:20","statements":[{"nodeType":"YulAssignment","src":"1549:29:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1571:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1558:12:20"},"nodeType":"YulFunctionCall","src":"1558:20:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1549:5:20"}]},{"body":{"nodeType":"YulBlock","src":"1631:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1640:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1643:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1633:6:20"},"nodeType":"YulFunctionCall","src":"1633:12:20"},"nodeType":"YulExpressionStatement","src":"1633:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1600:5:20"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1621:5:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1614:6:20"},"nodeType":"YulFunctionCall","src":"1614:13:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1607:6:20"},"nodeType":"YulFunctionCall","src":"1607:21:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1597:2:20"},"nodeType":"YulFunctionCall","src":"1597:32:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1590:6:20"},"nodeType":"YulFunctionCall","src":"1590:40:20"},"nodeType":"YulIf","src":"1587:60:20"}]},"name":"abi_decode_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1518:6:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1529:5:20","type":""}],"src":"1493:160:20"},{"body":{"nodeType":"YulBlock","src":"1742:164:20","statements":[{"body":{"nodeType":"YulBlock","src":"1788:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1797:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1800:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1790:6:20"},"nodeType":"YulFunctionCall","src":"1790:12:20"},"nodeType":"YulExpressionStatement","src":"1790:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1763:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"1772:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1759:3:20"},"nodeType":"YulFunctionCall","src":"1759:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"1784:2:20","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1755:3:20"},"nodeType":"YulFunctionCall","src":"1755:32:20"},"nodeType":"YulIf","src":"1752:52:20"},{"nodeType":"YulAssignment","src":"1813:33:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1836:9:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1823:12:20"},"nodeType":"YulFunctionCall","src":"1823:23:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1813:6:20"}]},{"nodeType":"YulAssignment","src":"1855:45:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1885:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"1896:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1881:3:20"},"nodeType":"YulFunctionCall","src":"1881:18:20"}],"functionName":{"name":"abi_decode_bool","nodeType":"YulIdentifier","src":"1865:15:20"},"nodeType":"YulFunctionCall","src":"1865:35:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1855:6:20"}]}]},"name":"abi_decode_tuple_t_uint256t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1700:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1711:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1723:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1731:6:20","type":""}],"src":"1658:248:20"},{"body":{"nodeType":"YulBlock","src":"2036:102:20","statements":[{"nodeType":"YulAssignment","src":"2046:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2058:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"2069:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2054:3:20"},"nodeType":"YulFunctionCall","src":"2054:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2046:4:20"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2088:9:20"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2103:6:20"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2119:3:20","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2124:1:20","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2115:3:20"},"nodeType":"YulFunctionCall","src":"2115:11:20"},{"kind":"number","nodeType":"YulLiteral","src":"2128:1:20","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2111:3:20"},"nodeType":"YulFunctionCall","src":"2111:19:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2099:3:20"},"nodeType":"YulFunctionCall","src":"2099:32:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2081:6:20"},"nodeType":"YulFunctionCall","src":"2081:51:20"},"nodeType":"YulExpressionStatement","src":"2081:51:20"}]},"name":"abi_encode_tuple_t_contract$_IRiskAssessment_$6421__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2005:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2016:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2027:4:20","type":""}],"src":"1911:227:20"},{"body":{"nodeType":"YulBlock","src":"2223:242:20","statements":[{"body":{"nodeType":"YulBlock","src":"2269:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2278:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2281:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2271:6:20"},"nodeType":"YulFunctionCall","src":"2271:12:20"},"nodeType":"YulExpressionStatement","src":"2271:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2244:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"2253:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2240:3:20"},"nodeType":"YulFunctionCall","src":"2240:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"2265:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2236:3:20"},"nodeType":"YulFunctionCall","src":"2236:32:20"},"nodeType":"YulIf","src":"2233:52:20"},{"nodeType":"YulVariableDeclaration","src":"2294:37:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2321:9:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2308:12:20"},"nodeType":"YulFunctionCall","src":"2308:23:20"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2298:6:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"2374:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2383:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2386:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2376:6:20"},"nodeType":"YulFunctionCall","src":"2376:12:20"},"nodeType":"YulExpressionStatement","src":"2376:12:20"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2346:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"2354:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2343:2:20"},"nodeType":"YulFunctionCall","src":"2343:30:20"},"nodeType":"YulIf","src":"2340:50:20"},{"nodeType":"YulAssignment","src":"2399:60:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2431:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"2442:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2427:3:20"},"nodeType":"YulFunctionCall","src":"2427:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2451:7:20"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"2409:17:20"},"nodeType":"YulFunctionCall","src":"2409:50:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2399:6:20"}]}]},"name":"abi_decode_tuple_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2189:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2200:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2212:6:20","type":""}],"src":"2143:322:20"},{"body":{"nodeType":"YulBlock","src":"2536:184:20","statements":[{"nodeType":"YulVariableDeclaration","src":"2546:10:20","value":{"kind":"number","nodeType":"YulLiteral","src":"2555:1:20","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2550:1:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"2615:63:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2640:3:20"},{"name":"i","nodeType":"YulIdentifier","src":"2645:1:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2636:3:20"},"nodeType":"YulFunctionCall","src":"2636:11:20"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2659:3:20"},{"name":"i","nodeType":"YulIdentifier","src":"2664:1:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2655:3:20"},"nodeType":"YulFunctionCall","src":"2655:11:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2649:5:20"},"nodeType":"YulFunctionCall","src":"2649:18:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2629:6:20"},"nodeType":"YulFunctionCall","src":"2629:39:20"},"nodeType":"YulExpressionStatement","src":"2629:39:20"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2576:1:20"},{"name":"length","nodeType":"YulIdentifier","src":"2579:6:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2573:2:20"},"nodeType":"YulFunctionCall","src":"2573:13:20"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2587:19:20","statements":[{"nodeType":"YulAssignment","src":"2589:15:20","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2598:1:20"},{"kind":"number","nodeType":"YulLiteral","src":"2601:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2594:3:20"},"nodeType":"YulFunctionCall","src":"2594:10:20"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2589:1:20"}]}]},"pre":{"nodeType":"YulBlock","src":"2569:3:20","statements":[]},"src":"2565:113:20"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2698:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"2703:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2694:3:20"},"nodeType":"YulFunctionCall","src":"2694:16:20"},{"kind":"number","nodeType":"YulLiteral","src":"2712:1:20","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2687:6:20"},"nodeType":"YulFunctionCall","src":"2687:27:20"},"nodeType":"YulExpressionStatement","src":"2687:27:20"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2514:3:20","type":""},{"name":"dst","nodeType":"YulTypedName","src":"2519:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"2524:6:20","type":""}],"src":"2470:250:20"},{"body":{"nodeType":"YulBlock","src":"2775:221:20","statements":[{"nodeType":"YulVariableDeclaration","src":"2785:26:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2805:5:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2799:5:20"},"nodeType":"YulFunctionCall","src":"2799:12:20"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2789:6:20","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2827:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"2832:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2820:6:20"},"nodeType":"YulFunctionCall","src":"2820:19:20"},"nodeType":"YulExpressionStatement","src":"2820:19:20"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2887:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"2894:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2883:3:20"},"nodeType":"YulFunctionCall","src":"2883:16:20"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2905:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"2910:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2901:3:20"},"nodeType":"YulFunctionCall","src":"2901:14:20"},{"name":"length","nodeType":"YulIdentifier","src":"2917:6:20"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2848:34:20"},"nodeType":"YulFunctionCall","src":"2848:76:20"},"nodeType":"YulExpressionStatement","src":"2848:76:20"},{"nodeType":"YulAssignment","src":"2933:57:20","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2948:3:20"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2961:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"2969:2:20","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2957:3:20"},"nodeType":"YulFunctionCall","src":"2957:15:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2978:2:20","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2974:3:20"},"nodeType":"YulFunctionCall","src":"2974:7:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2953:3:20"},"nodeType":"YulFunctionCall","src":"2953:29:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2944:3:20"},"nodeType":"YulFunctionCall","src":"2944:39:20"},{"kind":"number","nodeType":"YulLiteral","src":"2985:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2940:3:20"},"nodeType":"YulFunctionCall","src":"2940:50:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2933:3:20"}]}]},"name":"abi_encode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2752:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2759:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2767:3:20","type":""}],"src":"2725:271:20"},{"body":{"nodeType":"YulBlock","src":"3412:802:20","statements":[{"nodeType":"YulVariableDeclaration","src":"3422:13:20","value":{"kind":"number","nodeType":"YulLiteral","src":"3432:3:20","type":"","value":"256"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3426:2:20","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3451:9:20"},{"name":"_1","nodeType":"YulIdentifier","src":"3462:2:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3444:6:20"},"nodeType":"YulFunctionCall","src":"3444:21:20"},"nodeType":"YulExpressionStatement","src":"3444:21:20"},{"nodeType":"YulVariableDeclaration","src":"3474:59:20","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3506:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3518:9:20"},{"name":"_1","nodeType":"YulIdentifier","src":"3529:2:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3514:3:20"},"nodeType":"YulFunctionCall","src":"3514:18:20"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"3488:17:20"},"nodeType":"YulFunctionCall","src":"3488:45:20"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"3478:6:20","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3553:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"3564:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3549:3:20"},"nodeType":"YulFunctionCall","src":"3549:18:20"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"3573:6:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"3581:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3569:3:20"},"nodeType":"YulFunctionCall","src":"3569:22:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3542:6:20"},"nodeType":"YulFunctionCall","src":"3542:50:20"},"nodeType":"YulExpressionStatement","src":"3542:50:20"},{"nodeType":"YulVariableDeclaration","src":"3601:47:20","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"3633:6:20"},{"name":"tail_1","nodeType":"YulIdentifier","src":"3641:6:20"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"3615:17:20"},"nodeType":"YulFunctionCall","src":"3615:33:20"},"variables":[{"name":"tail_2","nodeType":"YulTypedName","src":"3605:6:20","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3668:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"3679:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3664:3:20"},"nodeType":"YulFunctionCall","src":"3664:18:20"},{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"3688:6:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"3696:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3684:3:20"},"nodeType":"YulFunctionCall","src":"3684:22:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3657:6:20"},"nodeType":"YulFunctionCall","src":"3657:50:20"},"nodeType":"YulExpressionStatement","src":"3657:50:20"},{"nodeType":"YulVariableDeclaration","src":"3716:47:20","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"3748:6:20"},{"name":"tail_2","nodeType":"YulIdentifier","src":"3756:6:20"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"3730:17:20"},"nodeType":"YulFunctionCall","src":"3730:33:20"},"variables":[{"name":"tail_3","nodeType":"YulTypedName","src":"3720:6:20","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3783:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"3794:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3779:3:20"},"nodeType":"YulFunctionCall","src":"3779:18:20"},{"arguments":[{"name":"tail_3","nodeType":"YulIdentifier","src":"3803:6:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"3811:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3799:3:20"},"nodeType":"YulFunctionCall","src":"3799:22:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3772:6:20"},"nodeType":"YulFunctionCall","src":"3772:50:20"},"nodeType":"YulExpressionStatement","src":"3772:50:20"},{"nodeType":"YulVariableDeclaration","src":"3831:47:20","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"3863:6:20"},{"name":"tail_3","nodeType":"YulIdentifier","src":"3871:6:20"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"3845:17:20"},"nodeType":"YulFunctionCall","src":"3845:33:20"},"variables":[{"name":"tail_4","nodeType":"YulTypedName","src":"3835:6:20","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3898:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"3909:3:20","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3894:3:20"},"nodeType":"YulFunctionCall","src":"3894:19:20"},{"arguments":[{"name":"tail_4","nodeType":"YulIdentifier","src":"3919:6:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"3927:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3915:3:20"},"nodeType":"YulFunctionCall","src":"3915:22:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3887:6:20"},"nodeType":"YulFunctionCall","src":"3887:51:20"},"nodeType":"YulExpressionStatement","src":"3887:51:20"},{"nodeType":"YulVariableDeclaration","src":"3947:47:20","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"3979:6:20"},{"name":"tail_4","nodeType":"YulIdentifier","src":"3987:6:20"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"3961:17:20"},"nodeType":"YulFunctionCall","src":"3961:33:20"},"variables":[{"name":"tail_5","nodeType":"YulTypedName","src":"3951:6:20","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4014:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"4025:3:20","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4010:3:20"},"nodeType":"YulFunctionCall","src":"4010:19:20"},{"arguments":[{"name":"tail_5","nodeType":"YulIdentifier","src":"4035:6:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"4043:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4031:3:20"},"nodeType":"YulFunctionCall","src":"4031:22:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4003:6:20"},"nodeType":"YulFunctionCall","src":"4003:51:20"},"nodeType":"YulExpressionStatement","src":"4003:51:20"},{"nodeType":"YulAssignment","src":"4063:41:20","value":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"4089:6:20"},{"name":"tail_5","nodeType":"YulIdentifier","src":"4097:6:20"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"4071:17:20"},"nodeType":"YulFunctionCall","src":"4071:33:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4063:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4124:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"4135:3:20","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4120:3:20"},"nodeType":"YulFunctionCall","src":"4120:19:20"},{"name":"value6","nodeType":"YulIdentifier","src":"4141:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4113:6:20"},"nodeType":"YulFunctionCall","src":"4113:35:20"},"nodeType":"YulExpressionStatement","src":"4113:35:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4168:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"4179:3:20","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4164:3:20"},"nodeType":"YulFunctionCall","src":"4164:19:20"},{"arguments":[{"arguments":[{"name":"value7","nodeType":"YulIdentifier","src":"4199:6:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4192:6:20"},"nodeType":"YulFunctionCall","src":"4192:14:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4185:6:20"},"nodeType":"YulFunctionCall","src":"4185:22:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4157:6:20"},"nodeType":"YulFunctionCall","src":"4157:51:20"},"nodeType":"YulExpressionStatement","src":"4157:51:20"}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_bool__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3325:9:20","type":""},{"name":"value7","nodeType":"YulTypedName","src":"3336:6:20","type":""},{"name":"value6","nodeType":"YulTypedName","src":"3344:6:20","type":""},{"name":"value5","nodeType":"YulTypedName","src":"3352:6:20","type":""},{"name":"value4","nodeType":"YulTypedName","src":"3360:6:20","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3368:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3376:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3384:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3392:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3403:4:20","type":""}],"src":"3001:1213:20"},{"body":{"nodeType":"YulBlock","src":"4461:1305:20","statements":[{"body":{"nodeType":"YulBlock","src":"4508:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4517:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4520:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4510:6:20"},"nodeType":"YulFunctionCall","src":"4510:12:20"},"nodeType":"YulExpressionStatement","src":"4510:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4482:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"4491:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4478:3:20"},"nodeType":"YulFunctionCall","src":"4478:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"4503:3:20","type":"","value":"224"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4474:3:20"},"nodeType":"YulFunctionCall","src":"4474:33:20"},"nodeType":"YulIf","src":"4471:53:20"},{"nodeType":"YulVariableDeclaration","src":"4533:37:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4560:9:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4547:12:20"},"nodeType":"YulFunctionCall","src":"4547:23:20"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4537:6:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4579:28:20","value":{"kind":"number","nodeType":"YulLiteral","src":"4589:18:20","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4583:2:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"4634:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4643:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4646:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4636:6:20"},"nodeType":"YulFunctionCall","src":"4636:12:20"},"nodeType":"YulExpressionStatement","src":"4636:12:20"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4622:6:20"},{"name":"_1","nodeType":"YulIdentifier","src":"4630:2:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4619:2:20"},"nodeType":"YulFunctionCall","src":"4619:14:20"},"nodeType":"YulIf","src":"4616:34:20"},{"nodeType":"YulAssignment","src":"4659:60:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4691:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"4702:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4687:3:20"},"nodeType":"YulFunctionCall","src":"4687:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4711:7:20"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"4669:17:20"},"nodeType":"YulFunctionCall","src":"4669:50:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4659:6:20"}]},{"nodeType":"YulVariableDeclaration","src":"4728:48:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4761:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"4772:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4757:3:20"},"nodeType":"YulFunctionCall","src":"4757:18:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4744:12:20"},"nodeType":"YulFunctionCall","src":"4744:32:20"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"4732:8:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"4805:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4814:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4817:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4807:6:20"},"nodeType":"YulFunctionCall","src":"4807:12:20"},"nodeType":"YulExpressionStatement","src":"4807:12:20"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"4791:8:20"},{"name":"_1","nodeType":"YulIdentifier","src":"4801:2:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4788:2:20"},"nodeType":"YulFunctionCall","src":"4788:16:20"},"nodeType":"YulIf","src":"4785:36:20"},{"nodeType":"YulAssignment","src":"4830:62:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4862:9:20"},{"name":"offset_1","nodeType":"YulIdentifier","src":"4873:8:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4858:3:20"},"nodeType":"YulFunctionCall","src":"4858:24:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4884:7:20"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"4840:17:20"},"nodeType":"YulFunctionCall","src":"4840:52:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4830:6:20"}]},{"nodeType":"YulVariableDeclaration","src":"4901:48:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4934:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"4945:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4930:3:20"},"nodeType":"YulFunctionCall","src":"4930:18:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4917:12:20"},"nodeType":"YulFunctionCall","src":"4917:32:20"},"variables":[{"name":"offset_2","nodeType":"YulTypedName","src":"4905:8:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"4978:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4987:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4990:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4980:6:20"},"nodeType":"YulFunctionCall","src":"4980:12:20"},"nodeType":"YulExpressionStatement","src":"4980:12:20"}]},"condition":{"arguments":[{"name":"offset_2","nodeType":"YulIdentifier","src":"4964:8:20"},{"name":"_1","nodeType":"YulIdentifier","src":"4974:2:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4961:2:20"},"nodeType":"YulFunctionCall","src":"4961:16:20"},"nodeType":"YulIf","src":"4958:36:20"},{"nodeType":"YulAssignment","src":"5003:62:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5035:9:20"},{"name":"offset_2","nodeType":"YulIdentifier","src":"5046:8:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5031:3:20"},"nodeType":"YulFunctionCall","src":"5031:24:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5057:7:20"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"5013:17:20"},"nodeType":"YulFunctionCall","src":"5013:52:20"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5003:6:20"}]},{"nodeType":"YulVariableDeclaration","src":"5074:48:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5107:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"5118:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5103:3:20"},"nodeType":"YulFunctionCall","src":"5103:18:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5090:12:20"},"nodeType":"YulFunctionCall","src":"5090:32:20"},"variables":[{"name":"offset_3","nodeType":"YulTypedName","src":"5078:8:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"5151:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5160:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5163:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5153:6:20"},"nodeType":"YulFunctionCall","src":"5153:12:20"},"nodeType":"YulExpressionStatement","src":"5153:12:20"}]},"condition":{"arguments":[{"name":"offset_3","nodeType":"YulIdentifier","src":"5137:8:20"},{"name":"_1","nodeType":"YulIdentifier","src":"5147:2:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5134:2:20"},"nodeType":"YulFunctionCall","src":"5134:16:20"},"nodeType":"YulIf","src":"5131:36:20"},{"nodeType":"YulAssignment","src":"5176:62:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5208:9:20"},{"name":"offset_3","nodeType":"YulIdentifier","src":"5219:8:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5204:3:20"},"nodeType":"YulFunctionCall","src":"5204:24:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5230:7:20"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"5186:17:20"},"nodeType":"YulFunctionCall","src":"5186:52:20"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"5176:6:20"}]},{"nodeType":"YulVariableDeclaration","src":"5247:49:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5280:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"5291:3:20","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5276:3:20"},"nodeType":"YulFunctionCall","src":"5276:19:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5263:12:20"},"nodeType":"YulFunctionCall","src":"5263:33:20"},"variables":[{"name":"offset_4","nodeType":"YulTypedName","src":"5251:8:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"5325:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5334:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5337:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5327:6:20"},"nodeType":"YulFunctionCall","src":"5327:12:20"},"nodeType":"YulExpressionStatement","src":"5327:12:20"}]},"condition":{"arguments":[{"name":"offset_4","nodeType":"YulIdentifier","src":"5311:8:20"},{"name":"_1","nodeType":"YulIdentifier","src":"5321:2:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5308:2:20"},"nodeType":"YulFunctionCall","src":"5308:16:20"},"nodeType":"YulIf","src":"5305:36:20"},{"nodeType":"YulAssignment","src":"5350:62:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5382:9:20"},{"name":"offset_4","nodeType":"YulIdentifier","src":"5393:8:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5378:3:20"},"nodeType":"YulFunctionCall","src":"5378:24:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5404:7:20"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"5360:17:20"},"nodeType":"YulFunctionCall","src":"5360:52:20"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"5350:6:20"}]},{"nodeType":"YulVariableDeclaration","src":"5421:49:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5454:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"5465:3:20","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5450:3:20"},"nodeType":"YulFunctionCall","src":"5450:19:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5437:12:20"},"nodeType":"YulFunctionCall","src":"5437:33:20"},"variables":[{"name":"offset_5","nodeType":"YulTypedName","src":"5425:8:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"5499:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5508:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5511:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5501:6:20"},"nodeType":"YulFunctionCall","src":"5501:12:20"},"nodeType":"YulExpressionStatement","src":"5501:12:20"}]},"condition":{"arguments":[{"name":"offset_5","nodeType":"YulIdentifier","src":"5485:8:20"},{"name":"_1","nodeType":"YulIdentifier","src":"5495:2:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5482:2:20"},"nodeType":"YulFunctionCall","src":"5482:16:20"},"nodeType":"YulIf","src":"5479:36:20"},{"nodeType":"YulAssignment","src":"5524:62:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5556:9:20"},{"name":"offset_5","nodeType":"YulIdentifier","src":"5567:8:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5552:3:20"},"nodeType":"YulFunctionCall","src":"5552:24:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5578:7:20"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"5534:17:20"},"nodeType":"YulFunctionCall","src":"5534:52:20"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"5524:6:20"}]},{"nodeType":"YulVariableDeclaration","src":"5595:49:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5628:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"5639:3:20","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5624:3:20"},"nodeType":"YulFunctionCall","src":"5624:19:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5611:12:20"},"nodeType":"YulFunctionCall","src":"5611:33:20"},"variables":[{"name":"offset_6","nodeType":"YulTypedName","src":"5599:8:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"5673:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5682:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5685:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5675:6:20"},"nodeType":"YulFunctionCall","src":"5675:12:20"},"nodeType":"YulExpressionStatement","src":"5675:12:20"}]},"condition":{"arguments":[{"name":"offset_6","nodeType":"YulIdentifier","src":"5659:8:20"},{"name":"_1","nodeType":"YulIdentifier","src":"5669:2:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5656:2:20"},"nodeType":"YulFunctionCall","src":"5656:16:20"},"nodeType":"YulIf","src":"5653:36:20"},{"nodeType":"YulAssignment","src":"5698:62:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5730:9:20"},{"name":"offset_6","nodeType":"YulIdentifier","src":"5741:8:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5726:3:20"},"nodeType":"YulFunctionCall","src":"5726:24:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5752:7:20"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"5708:17:20"},"nodeType":"YulFunctionCall","src":"5708:52:20"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"5698:6:20"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4379:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4390:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4402:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4410:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4418:6:20","type":""},{"name":"value3","nodeType":"YulTypedName","src":"4426:6:20","type":""},{"name":"value4","nodeType":"YulTypedName","src":"4434:6:20","type":""},{"name":"value5","nodeType":"YulTypedName","src":"4442:6:20","type":""},{"name":"value6","nodeType":"YulTypedName","src":"4450:6:20","type":""}],"src":"4219:1547:20"},{"body":{"nodeType":"YulBlock","src":"5872:102:20","statements":[{"nodeType":"YulAssignment","src":"5882:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5894:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"5905:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5890:3:20"},"nodeType":"YulFunctionCall","src":"5890:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5882:4:20"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5924:9:20"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5939:6:20"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5955:3:20","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"5960:1:20","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5951:3:20"},"nodeType":"YulFunctionCall","src":"5951:11:20"},{"kind":"number","nodeType":"YulLiteral","src":"5964:1:20","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5947:3:20"},"nodeType":"YulFunctionCall","src":"5947:19:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5935:3:20"},"nodeType":"YulFunctionCall","src":"5935:32:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5917:6:20"},"nodeType":"YulFunctionCall","src":"5917:51:20"},"nodeType":"YulExpressionStatement","src":"5917:51:20"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5841:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5852:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5863:4:20","type":""}],"src":"5771:203:20"},{"body":{"nodeType":"YulBlock","src":"6120:539:20","statements":[{"body":{"nodeType":"YulBlock","src":"6167:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6176:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6179:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6169:6:20"},"nodeType":"YulFunctionCall","src":"6169:12:20"},"nodeType":"YulExpressionStatement","src":"6169:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6141:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"6150:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6137:3:20"},"nodeType":"YulFunctionCall","src":"6137:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"6162:3:20","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6133:3:20"},"nodeType":"YulFunctionCall","src":"6133:33:20"},"nodeType":"YulIf","src":"6130:53:20"},{"nodeType":"YulAssignment","src":"6192:33:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6215:9:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6202:12:20"},"nodeType":"YulFunctionCall","src":"6202:23:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6192:6:20"}]},{"nodeType":"YulVariableDeclaration","src":"6234:46:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6265:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"6276:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6261:3:20"},"nodeType":"YulFunctionCall","src":"6261:18:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6248:12:20"},"nodeType":"YulFunctionCall","src":"6248:32:20"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6238:6:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6289:28:20","value":{"kind":"number","nodeType":"YulLiteral","src":"6299:18:20","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"6293:2:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"6344:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6353:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6356:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6346:6:20"},"nodeType":"YulFunctionCall","src":"6346:12:20"},"nodeType":"YulExpressionStatement","src":"6346:12:20"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6332:6:20"},{"name":"_1","nodeType":"YulIdentifier","src":"6340:2:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6329:2:20"},"nodeType":"YulFunctionCall","src":"6329:14:20"},"nodeType":"YulIf","src":"6326:34:20"},{"nodeType":"YulAssignment","src":"6369:60:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6401:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"6412:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6397:3:20"},"nodeType":"YulFunctionCall","src":"6397:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6421:7:20"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"6379:17:20"},"nodeType":"YulFunctionCall","src":"6379:50:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6369:6:20"}]},{"nodeType":"YulVariableDeclaration","src":"6438:48:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6471:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"6482:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6467:3:20"},"nodeType":"YulFunctionCall","src":"6467:18:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6454:12:20"},"nodeType":"YulFunctionCall","src":"6454:32:20"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"6442:8:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"6515:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6524:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6527:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6517:6:20"},"nodeType":"YulFunctionCall","src":"6517:12:20"},"nodeType":"YulExpressionStatement","src":"6517:12:20"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"6501:8:20"},{"name":"_1","nodeType":"YulIdentifier","src":"6511:2:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6498:2:20"},"nodeType":"YulFunctionCall","src":"6498:16:20"},"nodeType":"YulIf","src":"6495:36:20"},{"nodeType":"YulAssignment","src":"6540:62:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6572:9:20"},{"name":"offset_1","nodeType":"YulIdentifier","src":"6583:8:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6568:3:20"},"nodeType":"YulFunctionCall","src":"6568:24:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6594:7:20"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"6550:17:20"},"nodeType":"YulFunctionCall","src":"6550:52:20"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"6540:6:20"}]},{"nodeType":"YulAssignment","src":"6611:42:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6638:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"6649:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6634:3:20"},"nodeType":"YulFunctionCall","src":"6634:18:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6621:12:20"},"nodeType":"YulFunctionCall","src":"6621:32:20"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"6611:6:20"}]}]},"name":"abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptrt_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6062:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6073:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6085:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6093:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6101:6:20","type":""},{"name":"value3","nodeType":"YulTypedName","src":"6109:6:20","type":""}],"src":"5979:680:20"},{"body":{"nodeType":"YulBlock","src":"6765:76:20","statements":[{"nodeType":"YulAssignment","src":"6775:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6787:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"6798:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6783:3:20"},"nodeType":"YulFunctionCall","src":"6783:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6775:4:20"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6817:9:20"},{"name":"value0","nodeType":"YulIdentifier","src":"6828:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6810:6:20"},"nodeType":"YulFunctionCall","src":"6810:25:20"},"nodeType":"YulExpressionStatement","src":"6810:25:20"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6734:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6745:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6756:4:20","type":""}],"src":"6664:177:20"},{"body":{"nodeType":"YulBlock","src":"6878:95:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6895:1:20","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6902:3:20","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"6907:10:20","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6898:3:20"},"nodeType":"YulFunctionCall","src":"6898:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6888:6:20"},"nodeType":"YulFunctionCall","src":"6888:31:20"},"nodeType":"YulExpressionStatement","src":"6888:31:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6935:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6938:4:20","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6928:6:20"},"nodeType":"YulFunctionCall","src":"6928:15:20"},"nodeType":"YulExpressionStatement","src":"6928:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6959:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6962:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6952:6:20"},"nodeType":"YulFunctionCall","src":"6952:15:20"},"nodeType":"YulExpressionStatement","src":"6952:15:20"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"6846:127:20"},{"body":{"nodeType":"YulBlock","src":"7039:159:20","statements":[{"body":{"nodeType":"YulBlock","src":"7081:111:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7102:1:20","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7109:3:20","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"7114:10:20","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7105:3:20"},"nodeType":"YulFunctionCall","src":"7105:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7095:6:20"},"nodeType":"YulFunctionCall","src":"7095:31:20"},"nodeType":"YulExpressionStatement","src":"7095:31:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7146:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7149:4:20","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7139:6:20"},"nodeType":"YulFunctionCall","src":"7139:15:20"},"nodeType":"YulExpressionStatement","src":"7139:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7174:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7177:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7167:6:20"},"nodeType":"YulFunctionCall","src":"7167:15:20"},"nodeType":"YulExpressionStatement","src":"7167:15:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7062:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"7069:1:20","type":"","value":"3"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7059:2:20"},"nodeType":"YulFunctionCall","src":"7059:12:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7052:6:20"},"nodeType":"YulFunctionCall","src":"7052:20:20"},"nodeType":"YulIf","src":"7049:143:20"}]},"name":"validator_assert_enum_VerificationStatus","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7028:5:20","type":""}],"src":"6978:220:20"},{"body":{"nodeType":"YulBlock","src":"7622:770:20","statements":[{"nodeType":"YulVariableDeclaration","src":"7632:13:20","value":{"kind":"number","nodeType":"YulLiteral","src":"7642:3:20","type":"","value":"288"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"7636:2:20","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7661:9:20"},{"name":"_1","nodeType":"YulIdentifier","src":"7672:2:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7654:6:20"},"nodeType":"YulFunctionCall","src":"7654:21:20"},"nodeType":"YulExpressionStatement","src":"7654:21:20"},{"nodeType":"YulVariableDeclaration","src":"7684:59:20","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7716:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7728:9:20"},{"name":"_1","nodeType":"YulIdentifier","src":"7739:2:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7724:3:20"},"nodeType":"YulFunctionCall","src":"7724:18:20"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"7698:17:20"},"nodeType":"YulFunctionCall","src":"7698:45:20"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"7688:6:20","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7763:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"7774:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7759:3:20"},"nodeType":"YulFunctionCall","src":"7759:18:20"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"7783:6:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"7791:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7779:3:20"},"nodeType":"YulFunctionCall","src":"7779:22:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7752:6:20"},"nodeType":"YulFunctionCall","src":"7752:50:20"},"nodeType":"YulExpressionStatement","src":"7752:50:20"},{"nodeType":"YulVariableDeclaration","src":"7811:47:20","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"7843:6:20"},{"name":"tail_1","nodeType":"YulIdentifier","src":"7851:6:20"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"7825:17:20"},"nodeType":"YulFunctionCall","src":"7825:33:20"},"variables":[{"name":"tail_2","nodeType":"YulTypedName","src":"7815:6:20","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7878:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"7889:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7874:3:20"},"nodeType":"YulFunctionCall","src":"7874:18:20"},{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"7898:6:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"7906:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7894:3:20"},"nodeType":"YulFunctionCall","src":"7894:22:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7867:6:20"},"nodeType":"YulFunctionCall","src":"7867:50:20"},"nodeType":"YulExpressionStatement","src":"7867:50:20"},{"nodeType":"YulAssignment","src":"7926:41:20","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"7952:6:20"},{"name":"tail_2","nodeType":"YulIdentifier","src":"7960:6:20"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"7934:17:20"},"nodeType":"YulFunctionCall","src":"7934:33:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7926:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7987:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"7998:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7983:3:20"},"nodeType":"YulFunctionCall","src":"7983:18:20"},{"name":"value3","nodeType":"YulIdentifier","src":"8003:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7976:6:20"},"nodeType":"YulFunctionCall","src":"7976:34:20"},"nodeType":"YulExpressionStatement","src":"7976:34:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8030:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"8041:3:20","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8026:3:20"},"nodeType":"YulFunctionCall","src":"8026:19:20"},{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"8051:6:20"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8067:3:20","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"8072:1:20","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8063:3:20"},"nodeType":"YulFunctionCall","src":"8063:11:20"},{"kind":"number","nodeType":"YulLiteral","src":"8076:1:20","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8059:3:20"},"nodeType":"YulFunctionCall","src":"8059:19:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8047:3:20"},"nodeType":"YulFunctionCall","src":"8047:32:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8019:6:20"},"nodeType":"YulFunctionCall","src":"8019:61:20"},"nodeType":"YulExpressionStatement","src":"8019:61:20"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"8130:6:20"}],"functionName":{"name":"validator_assert_enum_VerificationStatus","nodeType":"YulIdentifier","src":"8089:40:20"},"nodeType":"YulFunctionCall","src":"8089:48:20"},"nodeType":"YulExpressionStatement","src":"8089:48:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8157:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"8168:3:20","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8153:3:20"},"nodeType":"YulFunctionCall","src":"8153:19:20"},{"name":"value5","nodeType":"YulIdentifier","src":"8174:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8146:6:20"},"nodeType":"YulFunctionCall","src":"8146:35:20"},"nodeType":"YulExpressionStatement","src":"8146:35:20"},{"expression":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"8231:6:20"}],"functionName":{"name":"validator_assert_enum_VerificationStatus","nodeType":"YulIdentifier","src":"8190:40:20"},"nodeType":"YulFunctionCall","src":"8190:48:20"},"nodeType":"YulExpressionStatement","src":"8190:48:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8258:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"8269:3:20","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8254:3:20"},"nodeType":"YulFunctionCall","src":"8254:19:20"},{"name":"value6","nodeType":"YulIdentifier","src":"8275:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8247:6:20"},"nodeType":"YulFunctionCall","src":"8247:35:20"},"nodeType":"YulExpressionStatement","src":"8247:35:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8302:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"8313:3:20","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8298:3:20"},"nodeType":"YulFunctionCall","src":"8298:19:20"},{"name":"value7","nodeType":"YulIdentifier","src":"8319:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8291:6:20"},"nodeType":"YulFunctionCall","src":"8291:35:20"},"nodeType":"YulExpressionStatement","src":"8291:35:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8346:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"8357:3:20","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8342:3:20"},"nodeType":"YulFunctionCall","src":"8342:19:20"},{"arguments":[{"arguments":[{"name":"value8","nodeType":"YulIdentifier","src":"8377:6:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8370:6:20"},"nodeType":"YulFunctionCall","src":"8370:14:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8363:6:20"},"nodeType":"YulFunctionCall","src":"8363:22:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8335:6:20"},"nodeType":"YulFunctionCall","src":"8335:51:20"},"nodeType":"YulExpressionStatement","src":"8335:51:20"}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_enum$_VerificationStatus_$6469_t_enum$_VerificationTier_$6389_t_uint256_t_bool__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_uint8_t_uint8_t_uint256_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7527:9:20","type":""},{"name":"value8","nodeType":"YulTypedName","src":"7538:6:20","type":""},{"name":"value7","nodeType":"YulTypedName","src":"7546:6:20","type":""},{"name":"value6","nodeType":"YulTypedName","src":"7554:6:20","type":""},{"name":"value5","nodeType":"YulTypedName","src":"7562:6:20","type":""},{"name":"value4","nodeType":"YulTypedName","src":"7570:6:20","type":""},{"name":"value3","nodeType":"YulTypedName","src":"7578:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7586:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7594:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7602:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7613:4:20","type":""}],"src":"7203:1189:20"},{"body":{"nodeType":"YulBlock","src":"8467:110:20","statements":[{"body":{"nodeType":"YulBlock","src":"8513:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8522:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8525:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8515:6:20"},"nodeType":"YulFunctionCall","src":"8515:12:20"},"nodeType":"YulExpressionStatement","src":"8515:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8488:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"8497:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8484:3:20"},"nodeType":"YulFunctionCall","src":"8484:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"8509:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8480:3:20"},"nodeType":"YulFunctionCall","src":"8480:32:20"},"nodeType":"YulIf","src":"8477:52:20"},{"nodeType":"YulAssignment","src":"8538:33:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8561:9:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8548:12:20"},"nodeType":"YulFunctionCall","src":"8548:23:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8538:6:20"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8433:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8444:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8456:6:20","type":""}],"src":"8397:180:20"},{"body":{"nodeType":"YulBlock","src":"8879:466:20","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8896:9:20"},{"name":"value0","nodeType":"YulIdentifier","src":"8907:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8889:6:20"},"nodeType":"YulFunctionCall","src":"8889:25:20"},"nodeType":"YulExpressionStatement","src":"8889:25:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8934:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"8945:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8930:3:20"},"nodeType":"YulFunctionCall","src":"8930:18:20"},{"name":"value1","nodeType":"YulIdentifier","src":"8950:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8923:6:20"},"nodeType":"YulFunctionCall","src":"8923:34:20"},"nodeType":"YulExpressionStatement","src":"8923:34:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8977:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"8988:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8973:3:20"},"nodeType":"YulFunctionCall","src":"8973:18:20"},{"kind":"number","nodeType":"YulLiteral","src":"8993:3:20","type":"","value":"224"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8966:6:20"},"nodeType":"YulFunctionCall","src":"8966:31:20"},"nodeType":"YulExpressionStatement","src":"8966:31:20"},{"nodeType":"YulVariableDeclaration","src":"9006:60:20","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"9038:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9050:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"9061:3:20","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9046:3:20"},"nodeType":"YulFunctionCall","src":"9046:19:20"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"9020:17:20"},"nodeType":"YulFunctionCall","src":"9020:46:20"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"9010:6:20","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9086:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"9097:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9082:3:20"},"nodeType":"YulFunctionCall","src":"9082:18:20"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"9106:6:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"9114:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9102:3:20"},"nodeType":"YulFunctionCall","src":"9102:22:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9075:6:20"},"nodeType":"YulFunctionCall","src":"9075:50:20"},"nodeType":"YulExpressionStatement","src":"9075:50:20"},{"nodeType":"YulAssignment","src":"9134:41:20","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"9160:6:20"},{"name":"tail_1","nodeType":"YulIdentifier","src":"9168:6:20"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"9142:17:20"},"nodeType":"YulFunctionCall","src":"9142:33:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9134:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9195:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"9206:3:20","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9191:3:20"},"nodeType":"YulFunctionCall","src":"9191:19:20"},{"name":"value4","nodeType":"YulIdentifier","src":"9212:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9184:6:20"},"nodeType":"YulFunctionCall","src":"9184:35:20"},"nodeType":"YulExpressionStatement","src":"9184:35:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9239:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"9250:3:20","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9235:3:20"},"nodeType":"YulFunctionCall","src":"9235:19:20"},{"arguments":[{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"9270:6:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9263:6:20"},"nodeType":"YulFunctionCall","src":"9263:14:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9256:6:20"},"nodeType":"YulFunctionCall","src":"9256:22:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9228:6:20"},"nodeType":"YulFunctionCall","src":"9228:51:20"},"nodeType":"YulExpressionStatement","src":"9228:51:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9299:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"9310:3:20","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9295:3:20"},"nodeType":"YulFunctionCall","src":"9295:19:20"},{"arguments":[{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"9330:6:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9323:6:20"},"nodeType":"YulFunctionCall","src":"9323:14:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9316:6:20"},"nodeType":"YulFunctionCall","src":"9316:22:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9288:6:20"},"nodeType":"YulFunctionCall","src":"9288:51:20"},"nodeType":"YulExpressionStatement","src":"9288:51:20"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_bool_t_bool__to_t_uint256_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_bool_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8800:9:20","type":""},{"name":"value6","nodeType":"YulTypedName","src":"8811:6:20","type":""},{"name":"value5","nodeType":"YulTypedName","src":"8819:6:20","type":""},{"name":"value4","nodeType":"YulTypedName","src":"8827:6:20","type":""},{"name":"value3","nodeType":"YulTypedName","src":"8835:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8843:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8851:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8859:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8870:4:20","type":""}],"src":"8582:763:20"},{"body":{"nodeType":"YulBlock","src":"9470:102:20","statements":[{"nodeType":"YulAssignment","src":"9480:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9492:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"9503:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9488:3:20"},"nodeType":"YulFunctionCall","src":"9488:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9480:4:20"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9522:9:20"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9537:6:20"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9553:3:20","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"9558:1:20","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9549:3:20"},"nodeType":"YulFunctionCall","src":"9549:11:20"},{"kind":"number","nodeType":"YulLiteral","src":"9562:1:20","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9545:3:20"},"nodeType":"YulFunctionCall","src":"9545:19:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9533:3:20"},"nodeType":"YulFunctionCall","src":"9533:32:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9515:6:20"},"nodeType":"YulFunctionCall","src":"9515:51:20"},"nodeType":"YulExpressionStatement","src":"9515:51:20"}]},"name":"abi_encode_tuple_t_contract$_IPolicyNFT_$6450__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9439:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9450:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9461:4:20","type":""}],"src":"9350:222:20"},{"body":{"nodeType":"YulBlock","src":"9803:323:20","statements":[{"nodeType":"YulAssignment","src":"9813:27:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9825:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"9836:3:20","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9821:3:20"},"nodeType":"YulFunctionCall","src":"9821:19:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9813:4:20"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9856:9:20"},{"name":"value0","nodeType":"YulIdentifier","src":"9867:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9849:6:20"},"nodeType":"YulFunctionCall","src":"9849:25:20"},"nodeType":"YulExpressionStatement","src":"9849:25:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9894:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"9905:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9890:3:20"},"nodeType":"YulFunctionCall","src":"9890:18:20"},{"name":"value1","nodeType":"YulIdentifier","src":"9910:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9883:6:20"},"nodeType":"YulFunctionCall","src":"9883:34:20"},"nodeType":"YulExpressionStatement","src":"9883:34:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9937:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"9948:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9933:3:20"},"nodeType":"YulFunctionCall","src":"9933:18:20"},{"name":"value2","nodeType":"YulIdentifier","src":"9953:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9926:6:20"},"nodeType":"YulFunctionCall","src":"9926:34:20"},"nodeType":"YulExpressionStatement","src":"9926:34:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9980:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"9991:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9976:3:20"},"nodeType":"YulFunctionCall","src":"9976:18:20"},{"arguments":[{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"10010:6:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10003:6:20"},"nodeType":"YulFunctionCall","src":"10003:14:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9996:6:20"},"nodeType":"YulFunctionCall","src":"9996:22:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9969:6:20"},"nodeType":"YulFunctionCall","src":"9969:50:20"},"nodeType":"YulExpressionStatement","src":"9969:50:20"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"10069:6:20"}],"functionName":{"name":"validator_assert_enum_VerificationStatus","nodeType":"YulIdentifier","src":"10028:40:20"},"nodeType":"YulFunctionCall","src":"10028:48:20"},"nodeType":"YulExpressionStatement","src":"10028:48:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10096:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"10107:3:20","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10092:3:20"},"nodeType":"YulFunctionCall","src":"10092:19:20"},{"name":"value4","nodeType":"YulIdentifier","src":"10113:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10085:6:20"},"nodeType":"YulFunctionCall","src":"10085:35:20"},"nodeType":"YulExpressionStatement","src":"10085:35:20"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_bool_t_enum$_VerificationTier_$6389__to_t_uint256_t_uint256_t_uint256_t_bool_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9740:9:20","type":""},{"name":"value4","nodeType":"YulTypedName","src":"9751:6:20","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9759:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9767:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9775:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9783:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9794:4:20","type":""}],"src":"9577:549:20"},{"body":{"nodeType":"YulBlock","src":"10245:344:20","statements":[{"body":{"nodeType":"YulBlock","src":"10291:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10300:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10303:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10293:6:20"},"nodeType":"YulFunctionCall","src":"10293:12:20"},"nodeType":"YulExpressionStatement","src":"10293:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10266:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"10275:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10262:3:20"},"nodeType":"YulFunctionCall","src":"10262:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"10287:2:20","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10258:3:20"},"nodeType":"YulFunctionCall","src":"10258:32:20"},"nodeType":"YulIf","src":"10255:52:20"},{"nodeType":"YulVariableDeclaration","src":"10316:37:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10343:9:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10330:12:20"},"nodeType":"YulFunctionCall","src":"10330:23:20"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10320:6:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"10396:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10405:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10408:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10398:6:20"},"nodeType":"YulFunctionCall","src":"10398:12:20"},"nodeType":"YulExpressionStatement","src":"10398:12:20"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10368:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"10376:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10365:2:20"},"nodeType":"YulFunctionCall","src":"10365:30:20"},"nodeType":"YulIf","src":"10362:50:20"},{"nodeType":"YulAssignment","src":"10421:60:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10453:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"10464:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10449:3:20"},"nodeType":"YulFunctionCall","src":"10449:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10473:7:20"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"10431:17:20"},"nodeType":"YulFunctionCall","src":"10431:50:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10421:6:20"}]},{"nodeType":"YulAssignment","src":"10490:42:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10517:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"10528:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10513:3:20"},"nodeType":"YulFunctionCall","src":"10513:18:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10500:12:20"},"nodeType":"YulFunctionCall","src":"10500:32:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10490:6:20"}]},{"nodeType":"YulAssignment","src":"10541:42:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10568:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"10579:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10564:3:20"},"nodeType":"YulFunctionCall","src":"10564:18:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10551:12:20"},"nodeType":"YulFunctionCall","src":"10551:32:20"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"10541:6:20"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10195:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10206:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10218:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10226:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10234:6:20","type":""}],"src":"10131:458:20"},{"body":{"nodeType":"YulBlock","src":"10641:109:20","statements":[{"nodeType":"YulAssignment","src":"10651:29:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10673:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10660:12:20"},"nodeType":"YulFunctionCall","src":"10660:20:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"10651:5:20"}]},{"body":{"nodeType":"YulBlock","src":"10728:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10737:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10740:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10730:6:20"},"nodeType":"YulFunctionCall","src":"10730:12:20"},"nodeType":"YulExpressionStatement","src":"10730:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10702:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10713:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"10720:4:20","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10709:3:20"},"nodeType":"YulFunctionCall","src":"10709:16:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10699:2:20"},"nodeType":"YulFunctionCall","src":"10699:27:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10692:6:20"},"nodeType":"YulFunctionCall","src":"10692:35:20"},"nodeType":"YulIf","src":"10689:55:20"}]},"name":"abi_decode_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"10620:6:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"10631:5:20","type":""}],"src":"10594:156:20"},{"body":{"nodeType":"YulBlock","src":"10969:876:20","statements":[{"body":{"nodeType":"YulBlock","src":"11016:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11025:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11028:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11018:6:20"},"nodeType":"YulFunctionCall","src":"11018:12:20"},"nodeType":"YulExpressionStatement","src":"11018:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10990:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"10999:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10986:3:20"},"nodeType":"YulFunctionCall","src":"10986:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"11011:3:20","type":"","value":"256"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10982:3:20"},"nodeType":"YulFunctionCall","src":"10982:33:20"},"nodeType":"YulIf","src":"10979:53:20"},{"nodeType":"YulVariableDeclaration","src":"11041:37:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11068:9:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11055:12:20"},"nodeType":"YulFunctionCall","src":"11055:23:20"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11045:6:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11087:28:20","value":{"kind":"number","nodeType":"YulLiteral","src":"11097:18:20","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"11091:2:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"11142:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11151:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11154:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11144:6:20"},"nodeType":"YulFunctionCall","src":"11144:12:20"},"nodeType":"YulExpressionStatement","src":"11144:12:20"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11130:6:20"},{"name":"_1","nodeType":"YulIdentifier","src":"11138:2:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11127:2:20"},"nodeType":"YulFunctionCall","src":"11127:14:20"},"nodeType":"YulIf","src":"11124:34:20"},{"nodeType":"YulAssignment","src":"11167:60:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11199:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"11210:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11195:3:20"},"nodeType":"YulFunctionCall","src":"11195:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11219:7:20"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"11177:17:20"},"nodeType":"YulFunctionCall","src":"11177:50:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11167:6:20"}]},{"nodeType":"YulVariableDeclaration","src":"11236:48:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11269:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"11280:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11265:3:20"},"nodeType":"YulFunctionCall","src":"11265:18:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11252:12:20"},"nodeType":"YulFunctionCall","src":"11252:32:20"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"11240:8:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"11313:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11322:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11325:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11315:6:20"},"nodeType":"YulFunctionCall","src":"11315:12:20"},"nodeType":"YulExpressionStatement","src":"11315:12:20"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"11299:8:20"},{"name":"_1","nodeType":"YulIdentifier","src":"11309:2:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11296:2:20"},"nodeType":"YulFunctionCall","src":"11296:16:20"},"nodeType":"YulIf","src":"11293:36:20"},{"nodeType":"YulAssignment","src":"11338:62:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11370:9:20"},{"name":"offset_1","nodeType":"YulIdentifier","src":"11381:8:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11366:3:20"},"nodeType":"YulFunctionCall","src":"11366:24:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11392:7:20"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"11348:17:20"},"nodeType":"YulFunctionCall","src":"11348:52:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"11338:6:20"}]},{"nodeType":"YulVariableDeclaration","src":"11409:48:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11442:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"11453:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11438:3:20"},"nodeType":"YulFunctionCall","src":"11438:18:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11425:12:20"},"nodeType":"YulFunctionCall","src":"11425:32:20"},"variables":[{"name":"offset_2","nodeType":"YulTypedName","src":"11413:8:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"11486:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11495:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11498:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11488:6:20"},"nodeType":"YulFunctionCall","src":"11488:12:20"},"nodeType":"YulExpressionStatement","src":"11488:12:20"}]},"condition":{"arguments":[{"name":"offset_2","nodeType":"YulIdentifier","src":"11472:8:20"},{"name":"_1","nodeType":"YulIdentifier","src":"11482:2:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11469:2:20"},"nodeType":"YulFunctionCall","src":"11469:16:20"},"nodeType":"YulIf","src":"11466:36:20"},{"nodeType":"YulAssignment","src":"11511:62:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11543:9:20"},{"name":"offset_2","nodeType":"YulIdentifier","src":"11554:8:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11539:3:20"},"nodeType":"YulFunctionCall","src":"11539:24:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11565:7:20"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"11521:17:20"},"nodeType":"YulFunctionCall","src":"11521:52:20"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"11511:6:20"}]},{"nodeType":"YulAssignment","src":"11582:42:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11609:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"11620:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11605:3:20"},"nodeType":"YulFunctionCall","src":"11605:18:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11592:12:20"},"nodeType":"YulFunctionCall","src":"11592:32:20"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"11582:6:20"}]},{"nodeType":"YulAssignment","src":"11633:43:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11660:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"11671:3:20","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11656:3:20"},"nodeType":"YulFunctionCall","src":"11656:19:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11643:12:20"},"nodeType":"YulFunctionCall","src":"11643:33:20"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"11633:6:20"}]},{"nodeType":"YulAssignment","src":"11685:43:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11712:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"11723:3:20","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11708:3:20"},"nodeType":"YulFunctionCall","src":"11708:19:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11695:12:20"},"nodeType":"YulFunctionCall","src":"11695:33:20"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"11685:6:20"}]},{"nodeType":"YulAssignment","src":"11737:47:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11768:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"11779:3:20","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11764:3:20"},"nodeType":"YulFunctionCall","src":"11764:19:20"}],"functionName":{"name":"abi_decode_uint8","nodeType":"YulIdentifier","src":"11747:16:20"},"nodeType":"YulFunctionCall","src":"11747:37:20"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"11737:6:20"}]},{"nodeType":"YulAssignment","src":"11793:46:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11823:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"11834:3:20","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11819:3:20"},"nodeType":"YulFunctionCall","src":"11819:19:20"}],"functionName":{"name":"abi_decode_bool","nodeType":"YulIdentifier","src":"11803:15:20"},"nodeType":"YulFunctionCall","src":"11803:36:20"},"variableNames":[{"name":"value7","nodeType":"YulIdentifier","src":"11793:6:20"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_uint256t_uint256t_uint256t_uint8t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10879:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10890:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10902:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10910:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10918:6:20","type":""},{"name":"value3","nodeType":"YulTypedName","src":"10926:6:20","type":""},{"name":"value4","nodeType":"YulTypedName","src":"10934:6:20","type":""},{"name":"value5","nodeType":"YulTypedName","src":"10942:6:20","type":""},{"name":"value6","nodeType":"YulTypedName","src":"10950:6:20","type":""},{"name":"value7","nodeType":"YulTypedName","src":"10958:6:20","type":""}],"src":"10755:1090:20"},{"body":{"nodeType":"YulBlock","src":"11895:86:20","statements":[{"body":{"nodeType":"YulBlock","src":"11959:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11968:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11971:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11961:6:20"},"nodeType":"YulFunctionCall","src":"11961:12:20"},"nodeType":"YulExpressionStatement","src":"11961:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11918:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11929:5:20"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11944:3:20","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"11949:1:20","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11940:3:20"},"nodeType":"YulFunctionCall","src":"11940:11:20"},{"kind":"number","nodeType":"YulLiteral","src":"11953:1:20","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11936:3:20"},"nodeType":"YulFunctionCall","src":"11936:19:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11925:3:20"},"nodeType":"YulFunctionCall","src":"11925:31:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11915:2:20"},"nodeType":"YulFunctionCall","src":"11915:42:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11908:6:20"},"nodeType":"YulFunctionCall","src":"11908:50:20"},"nodeType":"YulIf","src":"11905:70:20"}]},"name":"validator_revert_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11884:5:20","type":""}],"src":"11850:131:20"},{"body":{"nodeType":"YulBlock","src":"12056:177:20","statements":[{"body":{"nodeType":"YulBlock","src":"12102:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12111:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12114:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12104:6:20"},"nodeType":"YulFunctionCall","src":"12104:12:20"},"nodeType":"YulExpressionStatement","src":"12104:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12077:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"12086:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12073:3:20"},"nodeType":"YulFunctionCall","src":"12073:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"12098:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12069:3:20"},"nodeType":"YulFunctionCall","src":"12069:32:20"},"nodeType":"YulIf","src":"12066:52:20"},{"nodeType":"YulVariableDeclaration","src":"12127:36:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12153:9:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12140:12:20"},"nodeType":"YulFunctionCall","src":"12140:23:20"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"12131:5:20","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12197:5:20"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"12172:24:20"},"nodeType":"YulFunctionCall","src":"12172:31:20"},"nodeType":"YulExpressionStatement","src":"12172:31:20"},{"nodeType":"YulAssignment","src":"12212:15:20","value":{"name":"value","nodeType":"YulIdentifier","src":"12222:5:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12212:6:20"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12022:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12033:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12045:6:20","type":""}],"src":"11986:247:20"},{"body":{"nodeType":"YulBlock","src":"12329:193:20","statements":[{"body":{"nodeType":"YulBlock","src":"12375:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12384:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12387:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12377:6:20"},"nodeType":"YulFunctionCall","src":"12377:12:20"},"nodeType":"YulExpressionStatement","src":"12377:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12350:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"12359:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12346:3:20"},"nodeType":"YulFunctionCall","src":"12346:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"12371:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12342:3:20"},"nodeType":"YulFunctionCall","src":"12342:32:20"},"nodeType":"YulIf","src":"12339:52:20"},{"nodeType":"YulVariableDeclaration","src":"12400:36:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12426:9:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12413:12:20"},"nodeType":"YulFunctionCall","src":"12413:23:20"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"12404:5:20","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12486:5:20"}],"functionName":{"name":"validator_revert_enum_VerificationStatus","nodeType":"YulIdentifier","src":"12445:40:20"},"nodeType":"YulFunctionCall","src":"12445:47:20"},"nodeType":"YulExpressionStatement","src":"12445:47:20"},{"nodeType":"YulAssignment","src":"12501:15:20","value":{"name":"value","nodeType":"YulIdentifier","src":"12511:5:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12501:6:20"}]}]},"name":"abi_decode_tuple_t_enum$_VerificationTier_$6389","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12295:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12306:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12318:6:20","type":""}],"src":"12238:284:20"},{"body":{"nodeType":"YulBlock","src":"12666:150:20","statements":[{"nodeType":"YulVariableDeclaration","src":"12676:27:20","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12696:6:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12690:5:20"},"nodeType":"YulFunctionCall","src":"12690:13:20"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"12680:6:20","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12751:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"12759:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12747:3:20"},"nodeType":"YulFunctionCall","src":"12747:17:20"},{"name":"pos","nodeType":"YulIdentifier","src":"12766:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"12771:6:20"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"12712:34:20"},"nodeType":"YulFunctionCall","src":"12712:66:20"},"nodeType":"YulExpressionStatement","src":"12712:66:20"},{"nodeType":"YulAssignment","src":"12787:23:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12798:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"12803:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12794:3:20"},"nodeType":"YulFunctionCall","src":"12794:16:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12787:3:20"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12642:3:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12647:6:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12658:3:20","type":""}],"src":"12527:289:20"},{"body":{"nodeType":"YulBlock","src":"12995:172:20","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13012:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"13023:2:20","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13005:6:20"},"nodeType":"YulFunctionCall","src":"13005:21:20"},"nodeType":"YulExpressionStatement","src":"13005:21:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13046:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"13057:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13042:3:20"},"nodeType":"YulFunctionCall","src":"13042:18:20"},{"kind":"number","nodeType":"YulLiteral","src":"13062:2:20","type":"","value":"22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13035:6:20"},"nodeType":"YulFunctionCall","src":"13035:30:20"},"nodeType":"YulExpressionStatement","src":"13035:30:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13085:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"13096:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13081:3:20"},"nodeType":"YulFunctionCall","src":"13081:18:20"},{"hexValue":"56656869636c65206e6f742072656769737465726564","kind":"string","nodeType":"YulLiteral","src":"13101:24:20","type":"","value":"Vehicle not registered"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13074:6:20"},"nodeType":"YulFunctionCall","src":"13074:52:20"},"nodeType":"YulExpressionStatement","src":"13074:52:20"},{"nodeType":"YulAssignment","src":"13135:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13147:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"13158:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13143:3:20"},"nodeType":"YulFunctionCall","src":"13143:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13135:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_a91c9f81e9feb710f18005dba909bf9f6dc78a9b082739b042458d7a998ca6ab__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12972:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12986:4:20","type":""}],"src":"12821:346:20"},{"body":{"nodeType":"YulBlock","src":"13346:169:20","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13363:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"13374:2:20","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13356:6:20"},"nodeType":"YulFunctionCall","src":"13356:21:20"},"nodeType":"YulExpressionStatement","src":"13356:21:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13397:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"13408:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13393:3:20"},"nodeType":"YulFunctionCall","src":"13393:18:20"},{"kind":"number","nodeType":"YulLiteral","src":"13413:2:20","type":"","value":"19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13386:6:20"},"nodeType":"YulFunctionCall","src":"13386:30:20"},"nodeType":"YulExpressionStatement","src":"13386:30:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13436:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"13447:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13432:3:20"},"nodeType":"YulFunctionCall","src":"13432:18:20"},{"hexValue":"50686f746f73206e6f742075706c6f61646564","kind":"string","nodeType":"YulLiteral","src":"13452:21:20","type":"","value":"Photos not uploaded"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13425:6:20"},"nodeType":"YulFunctionCall","src":"13425:49:20"},"nodeType":"YulExpressionStatement","src":"13425:49:20"},{"nodeType":"YulAssignment","src":"13483:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13495:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"13506:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13491:3:20"},"nodeType":"YulFunctionCall","src":"13491:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13483:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_ff9ad865b57974cd8b3c520410a7fb45d1a1d122e3478b20a5b20d59fc540b67__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13323:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13337:4:20","type":""}],"src":"13172:343:20"},{"body":{"nodeType":"YulBlock","src":"13690:199:20","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13707:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"13718:2:20","type":"","value":"64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13700:6:20"},"nodeType":"YulFunctionCall","src":"13700:21:20"},"nodeType":"YulExpressionStatement","src":"13700:21:20"},{"nodeType":"YulAssignment","src":"13730:53:20","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13756:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13768:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"13779:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13764:3:20"},"nodeType":"YulFunctionCall","src":"13764:18:20"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"13738:17:20"},"nodeType":"YulFunctionCall","src":"13738:45:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13730:4:20"}]},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"13833:6:20"}],"functionName":{"name":"validator_assert_enum_VerificationStatus","nodeType":"YulIdentifier","src":"13792:40:20"},"nodeType":"YulFunctionCall","src":"13792:48:20"},"nodeType":"YulExpressionStatement","src":"13792:48:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13860:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"13871:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13856:3:20"},"nodeType":"YulFunctionCall","src":"13856:18:20"},{"name":"value1","nodeType":"YulIdentifier","src":"13876:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13849:6:20"},"nodeType":"YulFunctionCall","src":"13849:34:20"},"nodeType":"YulExpressionStatement","src":"13849:34:20"}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_enum$_VerificationStatus_$6469__to_t_string_memory_ptr_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13651:9:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13662:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13670:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13681:4:20","type":""}],"src":"13520:369:20"},{"body":{"nodeType":"YulBlock","src":"14068:173:20","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14085:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"14096:2:20","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14078:6:20"},"nodeType":"YulFunctionCall","src":"14078:21:20"},"nodeType":"YulExpressionStatement","src":"14078:21:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14119:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"14130:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14115:3:20"},"nodeType":"YulFunctionCall","src":"14115:18:20"},{"kind":"number","nodeType":"YulLiteral","src":"14135:2:20","type":"","value":"23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14108:6:20"},"nodeType":"YulFunctionCall","src":"14108:30:20"},"nodeType":"YulExpressionStatement","src":"14108:30:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14158:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"14169:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14154:3:20"},"nodeType":"YulFunctionCall","src":"14154:18:20"},{"hexValue":"436c61696d20616c72656164792070726f636573736564","kind":"string","nodeType":"YulLiteral","src":"14174:25:20","type":"","value":"Claim already processed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14147:6:20"},"nodeType":"YulFunctionCall","src":"14147:53:20"},"nodeType":"YulExpressionStatement","src":"14147:53:20"},{"nodeType":"YulAssignment","src":"14209:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14221:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"14232:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14217:3:20"},"nodeType":"YulFunctionCall","src":"14217:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14209:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_49dea5ad47e4b4a8e741022bbde0f91413b0cb7f3d15b1515bae7c7b15a11cde__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14045:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14059:4:20","type":""}],"src":"13894:347:20"},{"body":{"nodeType":"YulBlock","src":"14341:92:20","statements":[{"nodeType":"YulAssignment","src":"14351:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14363:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"14374:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14359:3:20"},"nodeType":"YulFunctionCall","src":"14359:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14351:4:20"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14393:9:20"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14418:6:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14411:6:20"},"nodeType":"YulFunctionCall","src":"14411:14:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14404:6:20"},"nodeType":"YulFunctionCall","src":"14404:22:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14386:6:20"},"nodeType":"YulFunctionCall","src":"14386:41:20"},"nodeType":"YulExpressionStatement","src":"14386:41:20"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14310:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14321:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14332:4:20","type":""}],"src":"14246:187:20"},{"body":{"nodeType":"YulBlock","src":"14493:325:20","statements":[{"nodeType":"YulAssignment","src":"14503:22:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14517:1:20","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"14520:4:20"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"14513:3:20"},"nodeType":"YulFunctionCall","src":"14513:12:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"14503:6:20"}]},{"nodeType":"YulVariableDeclaration","src":"14534:38:20","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"14564:4:20"},{"kind":"number","nodeType":"YulLiteral","src":"14570:1:20","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14560:3:20"},"nodeType":"YulFunctionCall","src":"14560:12:20"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"14538:18:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"14611:31:20","statements":[{"nodeType":"YulAssignment","src":"14613:27:20","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14627:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"14635:4:20","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14623:3:20"},"nodeType":"YulFunctionCall","src":"14623:17:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"14613:6:20"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"14591:18:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14584:6:20"},"nodeType":"YulFunctionCall","src":"14584:26:20"},"nodeType":"YulIf","src":"14581:61:20"},{"body":{"nodeType":"YulBlock","src":"14701:111:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14722:1:20","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14729:3:20","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"14734:10:20","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"14725:3:20"},"nodeType":"YulFunctionCall","src":"14725:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14715:6:20"},"nodeType":"YulFunctionCall","src":"14715:31:20"},"nodeType":"YulExpressionStatement","src":"14715:31:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14766:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"14769:4:20","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14759:6:20"},"nodeType":"YulFunctionCall","src":"14759:15:20"},"nodeType":"YulExpressionStatement","src":"14759:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14794:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14797:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14787:6:20"},"nodeType":"YulFunctionCall","src":"14787:15:20"},"nodeType":"YulExpressionStatement","src":"14787:15:20"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"14657:18:20"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14680:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"14688:2:20","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"14677:2:20"},"nodeType":"YulFunctionCall","src":"14677:14:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"14654:2:20"},"nodeType":"YulFunctionCall","src":"14654:38:20"},"nodeType":"YulIf","src":"14651:161:20"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"14473:4:20","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"14482:6:20","type":""}],"src":"14438:380:20"},{"body":{"nodeType":"YulBlock","src":"14997:167:20","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15014:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"15025:2:20","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15007:6:20"},"nodeType":"YulFunctionCall","src":"15007:21:20"},"nodeType":"YulExpressionStatement","src":"15007:21:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15048:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"15059:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15044:3:20"},"nodeType":"YulFunctionCall","src":"15044:18:20"},{"kind":"number","nodeType":"YulLiteral","src":"15064:2:20","type":"","value":"17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15037:6:20"},"nodeType":"YulFunctionCall","src":"15037:30:20"},"nodeType":"YulExpressionStatement","src":"15037:30:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15087:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"15098:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15083:3:20"},"nodeType":"YulFunctionCall","src":"15083:18:20"},{"hexValue":"4e6f742076656869636c65206f776e6572","kind":"string","nodeType":"YulLiteral","src":"15103:19:20","type":"","value":"Not vehicle owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15076:6:20"},"nodeType":"YulFunctionCall","src":"15076:47:20"},"nodeType":"YulExpressionStatement","src":"15076:47:20"},{"nodeType":"YulAssignment","src":"15132:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15144:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"15155:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15140:3:20"},"nodeType":"YulFunctionCall","src":"15140:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15132:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_c1a493b215ee9743b1073772936fe1708d9ad9a54e420311fd253597e9010212__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14974:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14988:4:20","type":""}],"src":"14823:341:20"},{"body":{"nodeType":"YulBlock","src":"15343:173:20","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15360:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"15371:2:20","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15353:6:20"},"nodeType":"YulFunctionCall","src":"15353:21:20"},"nodeType":"YulExpressionStatement","src":"15353:21:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15394:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"15405:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15390:3:20"},"nodeType":"YulFunctionCall","src":"15390:18:20"},{"kind":"number","nodeType":"YulLiteral","src":"15410:2:20","type":"","value":"23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15383:6:20"},"nodeType":"YulFunctionCall","src":"15383:30:20"},"nodeType":"YulExpressionStatement","src":"15383:30:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15433:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"15444:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15429:3:20"},"nodeType":"YulFunctionCall","src":"15429:18:20"},{"hexValue":"50686f746f7320616c72656164792075706c6f61646564","kind":"string","nodeType":"YulLiteral","src":"15449:25:20","type":"","value":"Photos already uploaded"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15422:6:20"},"nodeType":"YulFunctionCall","src":"15422:53:20"},"nodeType":"YulExpressionStatement","src":"15422:53:20"},{"nodeType":"YulAssignment","src":"15484:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15496:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"15507:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15492:3:20"},"nodeType":"YulFunctionCall","src":"15492:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15484:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_d4641406100510d0ad93d6c220da4cef8ded35e87ec0657f527e262652d1c942__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15320:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15334:4:20","type":""}],"src":"15169:347:20"},{"body":{"nodeType":"YulBlock","src":"15577:65:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15594:1:20","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"15597:3:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15587:6:20"},"nodeType":"YulFunctionCall","src":"15587:14:20"},"nodeType":"YulExpressionStatement","src":"15587:14:20"},{"nodeType":"YulAssignment","src":"15610:26:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15628:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15631:4:20","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"15618:9:20"},"nodeType":"YulFunctionCall","src":"15618:18:20"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"15610:4:20"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"15560:3:20","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"15568:4:20","type":""}],"src":"15521:121:20"},{"body":{"nodeType":"YulBlock","src":"15728:464:20","statements":[{"body":{"nodeType":"YulBlock","src":"15761:425:20","statements":[{"nodeType":"YulVariableDeclaration","src":"15775:11:20","value":{"kind":"number","nodeType":"YulLiteral","src":"15785:1:20","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"15779:2:20","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"15806:2:20"},{"name":"array","nodeType":"YulIdentifier","src":"15810:5:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15799:6:20"},"nodeType":"YulFunctionCall","src":"15799:17:20"},"nodeType":"YulExpressionStatement","src":"15799:17:20"},{"nodeType":"YulVariableDeclaration","src":"15829:31:20","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"15851:2:20"},{"kind":"number","nodeType":"YulLiteral","src":"15855:4:20","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"15841:9:20"},"nodeType":"YulFunctionCall","src":"15841:19:20"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"15833:4:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"15873:57:20","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"15896:4:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15906:1:20","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"15913:10:20"},{"kind":"number","nodeType":"YulLiteral","src":"15925:2:20","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15909:3:20"},"nodeType":"YulFunctionCall","src":"15909:19:20"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"15902:3:20"},"nodeType":"YulFunctionCall","src":"15902:27:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15892:3:20"},"nodeType":"YulFunctionCall","src":"15892:38:20"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"15877:11:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"15967:23:20","statements":[{"nodeType":"YulAssignment","src":"15969:19:20","value":{"name":"data","nodeType":"YulIdentifier","src":"15984:4:20"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"15969:11:20"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"15949:10:20"},{"kind":"number","nodeType":"YulLiteral","src":"15961:4:20","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"15946:2:20"},"nodeType":"YulFunctionCall","src":"15946:20:20"},"nodeType":"YulIf","src":"15943:47:20"},{"nodeType":"YulVariableDeclaration","src":"16003:41:20","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"16017:4:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16027:1:20","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"16034:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"16039:2:20","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16030:3:20"},"nodeType":"YulFunctionCall","src":"16030:12:20"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"16023:3:20"},"nodeType":"YulFunctionCall","src":"16023:20:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16013:3:20"},"nodeType":"YulFunctionCall","src":"16013:31:20"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"16007:2:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"16057:24:20","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"16070:11:20"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"16061:5:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"16155:21:20","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"16164:5:20"},{"name":"_1","nodeType":"YulIdentifier","src":"16171:2:20"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"16157:6:20"},"nodeType":"YulFunctionCall","src":"16157:17:20"},"nodeType":"YulExpressionStatement","src":"16157:17:20"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"16105:5:20"},{"name":"_2","nodeType":"YulIdentifier","src":"16112:2:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"16102:2:20"},"nodeType":"YulFunctionCall","src":"16102:13:20"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"16116:26:20","statements":[{"nodeType":"YulAssignment","src":"16118:22:20","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"16131:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"16138:1:20","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16127:3:20"},"nodeType":"YulFunctionCall","src":"16127:13:20"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"16118:5:20"}]}]},"pre":{"nodeType":"YulBlock","src":"16098:3:20","statements":[]},"src":"16094:82:20"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"15744:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"15749:2:20","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"15741:2:20"},"nodeType":"YulFunctionCall","src":"15741:11:20"},"nodeType":"YulIf","src":"15738:448:20"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"15700:5:20","type":""},{"name":"len","nodeType":"YulTypedName","src":"15707:3:20","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"15712:10:20","type":""}],"src":"15647:545:20"},{"body":{"nodeType":"YulBlock","src":"16282:81:20","statements":[{"nodeType":"YulAssignment","src":"16292:65:20","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"16307:4:20"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16325:1:20","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"16328:3:20"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"16321:3:20"},"nodeType":"YulFunctionCall","src":"16321:11:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16338:1:20","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"16334:3:20"},"nodeType":"YulFunctionCall","src":"16334:6:20"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"16317:3:20"},"nodeType":"YulFunctionCall","src":"16317:24:20"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"16313:3:20"},"nodeType":"YulFunctionCall","src":"16313:29:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16303:3:20"},"nodeType":"YulFunctionCall","src":"16303:40:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16349:1:20","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"16352:3:20"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"16345:3:20"},"nodeType":"YulFunctionCall","src":"16345:11:20"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"16300:2:20"},"nodeType":"YulFunctionCall","src":"16300:57:20"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"16292:4:20"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"16259:4:20","type":""},{"name":"len","nodeType":"YulTypedName","src":"16265:3:20","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"16273:4:20","type":""}],"src":"16197:166:20"},{"body":{"nodeType":"YulBlock","src":"16464:1256:20","statements":[{"nodeType":"YulVariableDeclaration","src":"16474:24:20","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"16494:3:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16488:5:20"},"nodeType":"YulFunctionCall","src":"16488:10:20"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"16478:6:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"16541:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"16543:16:20"},"nodeType":"YulFunctionCall","src":"16543:18:20"},"nodeType":"YulExpressionStatement","src":"16543:18:20"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"16513:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"16521:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16510:2:20"},"nodeType":"YulFunctionCall","src":"16510:30:20"},"nodeType":"YulIf","src":"16507:56:20"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"16616:4:20"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"16654:4:20"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"16648:5:20"},"nodeType":"YulFunctionCall","src":"16648:11:20"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"16622:25:20"},"nodeType":"YulFunctionCall","src":"16622:38:20"},{"name":"newLen","nodeType":"YulIdentifier","src":"16662:6:20"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"16572:43:20"},"nodeType":"YulFunctionCall","src":"16572:97:20"},"nodeType":"YulExpressionStatement","src":"16572:97:20"},{"nodeType":"YulVariableDeclaration","src":"16678:18:20","value":{"kind":"number","nodeType":"YulLiteral","src":"16695:1:20","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"16682:9:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"16705:23:20","value":{"kind":"number","nodeType":"YulLiteral","src":"16724:4:20","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"16709:11:20","type":""}]},{"nodeType":"YulAssignment","src":"16737:24:20","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"16750:11:20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"16737:9:20"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"16807:656:20","statements":[{"nodeType":"YulVariableDeclaration","src":"16821:35:20","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"16840:6:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16852:2:20","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"16848:3:20"},"nodeType":"YulFunctionCall","src":"16848:7:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16836:3:20"},"nodeType":"YulFunctionCall","src":"16836:20:20"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"16825:7:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"16869:49:20","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"16913:4:20"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"16883:29:20"},"nodeType":"YulFunctionCall","src":"16883:35:20"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"16873:6:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"16931:10:20","value":{"kind":"number","nodeType":"YulLiteral","src":"16940:1:20","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"16935:1:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"17018:172:20","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"17043:6:20"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"17061:3:20"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"17066:9:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17057:3:20"},"nodeType":"YulFunctionCall","src":"17057:19:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17051:5:20"},"nodeType":"YulFunctionCall","src":"17051:26:20"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"17036:6:20"},"nodeType":"YulFunctionCall","src":"17036:42:20"},"nodeType":"YulExpressionStatement","src":"17036:42:20"},{"nodeType":"YulAssignment","src":"17095:24:20","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"17109:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"17117:1:20","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17105:3:20"},"nodeType":"YulFunctionCall","src":"17105:14:20"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"17095:6:20"}]},{"nodeType":"YulAssignment","src":"17136:40:20","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"17153:9:20"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"17164:11:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17149:3:20"},"nodeType":"YulFunctionCall","src":"17149:27:20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"17136:9:20"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"16965:1:20"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"16968:7:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"16962:2:20"},"nodeType":"YulFunctionCall","src":"16962:14:20"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"16977:28:20","statements":[{"nodeType":"YulAssignment","src":"16979:24:20","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"16988:1:20"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"16991:11:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16984:3:20"},"nodeType":"YulFunctionCall","src":"16984:19:20"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"16979:1:20"}]}]},"pre":{"nodeType":"YulBlock","src":"16958:3:20","statements":[]},"src":"16954:236:20"},{"body":{"nodeType":"YulBlock","src":"17238:166:20","statements":[{"nodeType":"YulVariableDeclaration","src":"17256:43:20","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"17283:3:20"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"17288:9:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17279:3:20"},"nodeType":"YulFunctionCall","src":"17279:19:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17273:5:20"},"nodeType":"YulFunctionCall","src":"17273:26:20"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"17260:9:20","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"17323:6:20"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"17335:9:20"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17362:1:20","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"17365:6:20"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"17358:3:20"},"nodeType":"YulFunctionCall","src":"17358:14:20"},{"kind":"number","nodeType":"YulLiteral","src":"17374:3:20","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17354:3:20"},"nodeType":"YulFunctionCall","src":"17354:24:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17384:1:20","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"17380:3:20"},"nodeType":"YulFunctionCall","src":"17380:6:20"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"17350:3:20"},"nodeType":"YulFunctionCall","src":"17350:37:20"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"17346:3:20"},"nodeType":"YulFunctionCall","src":"17346:42:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17331:3:20"},"nodeType":"YulFunctionCall","src":"17331:58:20"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"17316:6:20"},"nodeType":"YulFunctionCall","src":"17316:74:20"},"nodeType":"YulExpressionStatement","src":"17316:74:20"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"17209:7:20"},{"name":"newLen","nodeType":"YulIdentifier","src":"17218:6:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"17206:2:20"},"nodeType":"YulFunctionCall","src":"17206:19:20"},"nodeType":"YulIf","src":"17203:201:20"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"17424:4:20"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17438:1:20","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"17441:6:20"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"17434:3:20"},"nodeType":"YulFunctionCall","src":"17434:14:20"},{"kind":"number","nodeType":"YulLiteral","src":"17450:1:20","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17430:3:20"},"nodeType":"YulFunctionCall","src":"17430:22:20"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"17417:6:20"},"nodeType":"YulFunctionCall","src":"17417:36:20"},"nodeType":"YulExpressionStatement","src":"17417:36:20"}]},"nodeType":"YulCase","src":"16800:663:20","value":{"kind":"number","nodeType":"YulLiteral","src":"16805:1:20","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"17480:234:20","statements":[{"nodeType":"YulVariableDeclaration","src":"17494:14:20","value":{"kind":"number","nodeType":"YulLiteral","src":"17507:1:20","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"17498:5:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"17543:67:20","statements":[{"nodeType":"YulAssignment","src":"17561:35:20","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"17580:3:20"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"17585:9:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17576:3:20"},"nodeType":"YulFunctionCall","src":"17576:19:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17570:5:20"},"nodeType":"YulFunctionCall","src":"17570:26:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"17561:5:20"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"17524:6:20"},"nodeType":"YulIf","src":"17521:89:20"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"17630:4:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17689:5:20"},{"name":"newLen","nodeType":"YulIdentifier","src":"17696:6:20"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"17636:52:20"},"nodeType":"YulFunctionCall","src":"17636:67:20"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"17623:6:20"},"nodeType":"YulFunctionCall","src":"17623:81:20"},"nodeType":"YulExpressionStatement","src":"17623:81:20"}]},"nodeType":"YulCase","src":"17472:242:20","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"16780:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"16788:2:20","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16777:2:20"},"nodeType":"YulFunctionCall","src":"16777:14:20"},"nodeType":"YulSwitch","src":"16770:944:20"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"16449:4:20","type":""},{"name":"src","nodeType":"YulTypedName","src":"16455:3:20","type":""}],"src":"16368:1352:20"},{"body":{"nodeType":"YulBlock","src":"17874:142:20","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17891:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"17902:2:20","type":"","value":"64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17884:6:20"},"nodeType":"YulFunctionCall","src":"17884:21:20"},"nodeType":"YulExpressionStatement","src":"17884:21:20"},{"nodeType":"YulAssignment","src":"17914:53:20","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17940:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17952:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"17963:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17948:3:20"},"nodeType":"YulFunctionCall","src":"17948:18:20"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"17922:17:20"},"nodeType":"YulFunctionCall","src":"17922:45:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17914:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17987:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"17998:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17983:3:20"},"nodeType":"YulFunctionCall","src":"17983:18:20"},{"name":"value1","nodeType":"YulIdentifier","src":"18003:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17976:6:20"},"nodeType":"YulFunctionCall","src":"17976:34:20"},"nodeType":"YulExpressionStatement","src":"17976:34:20"}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_uint256__to_t_string_memory_ptr_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17835:9:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17846:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17854:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17865:4:20","type":""}],"src":"17725:291:20"},{"body":{"nodeType":"YulBlock","src":"18195:167:20","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18212:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"18223:2:20","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18205:6:20"},"nodeType":"YulFunctionCall","src":"18205:21:20"},"nodeType":"YulExpressionStatement","src":"18205:21:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18246:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"18257:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18242:3:20"},"nodeType":"YulFunctionCall","src":"18242:18:20"},{"kind":"number","nodeType":"YulLiteral","src":"18262:2:20","type":"","value":"17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18235:6:20"},"nodeType":"YulFunctionCall","src":"18235:30:20"},"nodeType":"YulExpressionStatement","src":"18235:30:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18285:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"18296:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18281:3:20"},"nodeType":"YulFunctionCall","src":"18281:18:20"},{"hexValue":"506f6c696379206e6f7420616374697665","kind":"string","nodeType":"YulLiteral","src":"18301:19:20","type":"","value":"Policy not active"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18274:6:20"},"nodeType":"YulFunctionCall","src":"18274:47:20"},"nodeType":"YulExpressionStatement","src":"18274:47:20"},{"nodeType":"YulAssignment","src":"18330:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18342:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"18353:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18338:3:20"},"nodeType":"YulFunctionCall","src":"18338:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18330:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_4bc221f51c0c4bd6523cb893b47fce57185073464b1c6fa624cc7cfeaeaca718__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18172:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18186:4:20","type":""}],"src":"18021:341:20"},{"body":{"nodeType":"YulBlock","src":"18448:170:20","statements":[{"body":{"nodeType":"YulBlock","src":"18494:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18503:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18506:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18496:6:20"},"nodeType":"YulFunctionCall","src":"18496:12:20"},"nodeType":"YulExpressionStatement","src":"18496:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"18469:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"18478:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18465:3:20"},"nodeType":"YulFunctionCall","src":"18465:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"18490:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"18461:3:20"},"nodeType":"YulFunctionCall","src":"18461:32:20"},"nodeType":"YulIf","src":"18458:52:20"},{"nodeType":"YulVariableDeclaration","src":"18519:29:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18538:9:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18532:5:20"},"nodeType":"YulFunctionCall","src":"18532:16:20"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"18523:5:20","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18582:5:20"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"18557:24:20"},"nodeType":"YulFunctionCall","src":"18557:31:20"},"nodeType":"YulExpressionStatement","src":"18557:31:20"},{"nodeType":"YulAssignment","src":"18597:15:20","value":{"name":"value","nodeType":"YulIdentifier","src":"18607:5:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"18597:6:20"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18414:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"18425:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"18437:6:20","type":""}],"src":"18367:251:20"},{"body":{"nodeType":"YulBlock","src":"18797:166:20","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18814:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"18825:2:20","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18807:6:20"},"nodeType":"YulFunctionCall","src":"18807:21:20"},"nodeType":"YulExpressionStatement","src":"18807:21:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18848:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"18859:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18844:3:20"},"nodeType":"YulFunctionCall","src":"18844:18:20"},{"kind":"number","nodeType":"YulLiteral","src":"18864:2:20","type":"","value":"16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18837:6:20"},"nodeType":"YulFunctionCall","src":"18837:30:20"},"nodeType":"YulExpressionStatement","src":"18837:30:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18887:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"18898:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18883:3:20"},"nodeType":"YulFunctionCall","src":"18883:18:20"},{"hexValue":"4e6f7420706f6c696379206f776e6572","kind":"string","nodeType":"YulLiteral","src":"18903:18:20","type":"","value":"Not policy owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18876:6:20"},"nodeType":"YulFunctionCall","src":"18876:46:20"},"nodeType":"YulExpressionStatement","src":"18876:46:20"},{"nodeType":"YulAssignment","src":"18931:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18943:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"18954:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18939:3:20"},"nodeType":"YulFunctionCall","src":"18939:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18931:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_aeef98c871014711956d29bf45ac3fa97a84e928c584213afc461aa2c4a788c5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18774:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18788:4:20","type":""}],"src":"18623:340:20"},{"body":{"nodeType":"YulBlock","src":"19000:95:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19017:1:20","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19024:3:20","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"19029:10:20","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"19020:3:20"},"nodeType":"YulFunctionCall","src":"19020:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19010:6:20"},"nodeType":"YulFunctionCall","src":"19010:31:20"},"nodeType":"YulExpressionStatement","src":"19010:31:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19057:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"19060:4:20","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19050:6:20"},"nodeType":"YulFunctionCall","src":"19050:15:20"},"nodeType":"YulExpressionStatement","src":"19050:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19081:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19084:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19074:6:20"},"nodeType":"YulFunctionCall","src":"19074:15:20"},"nodeType":"YulExpressionStatement","src":"19074:15:20"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"18968:127:20"},{"body":{"nodeType":"YulBlock","src":"19147:88:20","statements":[{"body":{"nodeType":"YulBlock","src":"19178:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"19180:16:20"},"nodeType":"YulFunctionCall","src":"19180:18:20"},"nodeType":"YulExpressionStatement","src":"19180:18:20"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19163:5:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19174:1:20","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"19170:3:20"},"nodeType":"YulFunctionCall","src":"19170:6:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"19160:2:20"},"nodeType":"YulFunctionCall","src":"19160:17:20"},"nodeType":"YulIf","src":"19157:43:20"},{"nodeType":"YulAssignment","src":"19209:20:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19220:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"19227:1:20","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19216:3:20"},"nodeType":"YulFunctionCall","src":"19216:13:20"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"19209:3:20"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19129:5:20","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"19139:3:20","type":""}],"src":"19100:135:20"},{"body":{"nodeType":"YulBlock","src":"19414:170:20","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19431:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"19442:2:20","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19424:6:20"},"nodeType":"YulFunctionCall","src":"19424:21:20"},"nodeType":"YulExpressionStatement","src":"19424:21:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19465:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"19476:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19461:3:20"},"nodeType":"YulFunctionCall","src":"19461:18:20"},{"kind":"number","nodeType":"YulLiteral","src":"19481:2:20","type":"","value":"20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19454:6:20"},"nodeType":"YulFunctionCall","src":"19454:30:20"},"nodeType":"YulExpressionStatement","src":"19454:30:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19504:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"19515:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19500:3:20"},"nodeType":"YulFunctionCall","src":"19500:18:20"},{"hexValue":"56656869636c65206e6f74207665726966696564","kind":"string","nodeType":"YulLiteral","src":"19520:22:20","type":"","value":"Vehicle not verified"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19493:6:20"},"nodeType":"YulFunctionCall","src":"19493:50:20"},"nodeType":"YulExpressionStatement","src":"19493:50:20"},{"nodeType":"YulAssignment","src":"19552:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19564:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"19575:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19560:3:20"},"nodeType":"YulFunctionCall","src":"19560:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19552:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_3793fdef918127330e0d76c5b92b8820046031cf55bdfac2b0725a41a43ee952__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19391:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19405:4:20","type":""}],"src":"19240:344:20"},{"body":{"nodeType":"YulBlock","src":"19763:177:20","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19780:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"19791:2:20","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19773:6:20"},"nodeType":"YulFunctionCall","src":"19773:21:20"},"nodeType":"YulExpressionStatement","src":"19773:21:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19814:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"19825:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19810:3:20"},"nodeType":"YulFunctionCall","src":"19810:18:20"},{"kind":"number","nodeType":"YulLiteral","src":"19830:2:20","type":"","value":"27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19803:6:20"},"nodeType":"YulFunctionCall","src":"19803:30:20"},"nodeType":"YulExpressionStatement","src":"19803:30:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19853:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"19864:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19849:3:20"},"nodeType":"YulFunctionCall","src":"19849:18:20"},{"hexValue":"436f76657261676520657863656564732074696572206c696d6974","kind":"string","nodeType":"YulLiteral","src":"19869:29:20","type":"","value":"Coverage exceeds tier limit"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19842:6:20"},"nodeType":"YulFunctionCall","src":"19842:57:20"},"nodeType":"YulExpressionStatement","src":"19842:57:20"},{"nodeType":"YulAssignment","src":"19908:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19920:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"19931:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19916:3:20"},"nodeType":"YulFunctionCall","src":"19916:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19908:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_645330ee036893cbc37966ce7efc404d1f8451960092bb671b4db5d0c8accd42__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19740:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19754:4:20","type":""}],"src":"19589:351:20"},{"body":{"nodeType":"YulBlock","src":"20113:199:20","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20130:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"20141:2:20","type":"","value":"64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20123:6:20"},"nodeType":"YulFunctionCall","src":"20123:21:20"},"nodeType":"YulExpressionStatement","src":"20123:21:20"},{"nodeType":"YulAssignment","src":"20153:53:20","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"20179:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20191:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"20202:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20187:3:20"},"nodeType":"YulFunctionCall","src":"20187:18:20"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"20161:17:20"},"nodeType":"YulFunctionCall","src":"20161:45:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20153:4:20"}]},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"20256:6:20"}],"functionName":{"name":"validator_assert_enum_VerificationStatus","nodeType":"YulIdentifier","src":"20215:40:20"},"nodeType":"YulFunctionCall","src":"20215:48:20"},"nodeType":"YulExpressionStatement","src":"20215:48:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20283:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"20294:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20279:3:20"},"nodeType":"YulFunctionCall","src":"20279:18:20"},{"name":"value1","nodeType":"YulIdentifier","src":"20299:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20272:6:20"},"nodeType":"YulFunctionCall","src":"20272:34:20"},"nodeType":"YulExpressionStatement","src":"20272:34:20"}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_enum$_VerificationTier_$6389__to_t_string_memory_ptr_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20074:9:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20085:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20093:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20104:4:20","type":""}],"src":"19945:367:20"},{"body":{"nodeType":"YulBlock","src":"20398:103:20","statements":[{"body":{"nodeType":"YulBlock","src":"20444:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20453:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20456:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20446:6:20"},"nodeType":"YulFunctionCall","src":"20446:12:20"},"nodeType":"YulExpressionStatement","src":"20446:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"20419:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"20428:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20415:3:20"},"nodeType":"YulFunctionCall","src":"20415:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"20440:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"20411:3:20"},"nodeType":"YulFunctionCall","src":"20411:32:20"},"nodeType":"YulIf","src":"20408:52:20"},{"nodeType":"YulAssignment","src":"20469:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20485:9:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20479:5:20"},"nodeType":"YulFunctionCall","src":"20479:16:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"20469:6:20"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20364:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"20375:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"20387:6:20","type":""}],"src":"20317:184:20"},{"body":{"nodeType":"YulBlock","src":"20680:178:20","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20697:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"20708:2:20","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20690:6:20"},"nodeType":"YulFunctionCall","src":"20690:21:20"},"nodeType":"YulExpressionStatement","src":"20690:21:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20731:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"20742:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20727:3:20"},"nodeType":"YulFunctionCall","src":"20727:18:20"},{"kind":"number","nodeType":"YulLiteral","src":"20747:2:20","type":"","value":"28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20720:6:20"},"nodeType":"YulFunctionCall","src":"20720:30:20"},"nodeType":"YulExpressionStatement","src":"20720:30:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20770:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"20781:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20766:3:20"},"nodeType":"YulFunctionCall","src":"20766:18:20"},{"hexValue":"496e73756666696369656e74207072656d69756d207061796d656e74","kind":"string","nodeType":"YulLiteral","src":"20786:30:20","type":"","value":"Insufficient premium payment"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20759:6:20"},"nodeType":"YulFunctionCall","src":"20759:58:20"},"nodeType":"YulExpressionStatement","src":"20759:58:20"},{"nodeType":"YulAssignment","src":"20826:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20838:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"20849:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20834:3:20"},"nodeType":"YulFunctionCall","src":"20834:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20826:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_94c883244898b2ef300949156ea78e9c524ab5bc5021a4d0763c5111f4225c8f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20657:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20671:4:20","type":""}],"src":"20506:352:20"},{"body":{"nodeType":"YulBlock","src":"21037:166:20","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21054:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"21065:2:20","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21047:6:20"},"nodeType":"YulFunctionCall","src":"21047:21:20"},"nodeType":"YulExpressionStatement","src":"21047:21:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21088:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"21099:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21084:3:20"},"nodeType":"YulFunctionCall","src":"21084:18:20"},{"kind":"number","nodeType":"YulLiteral","src":"21104:2:20","type":"","value":"16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21077:6:20"},"nodeType":"YulFunctionCall","src":"21077:30:20"},"nodeType":"YulExpressionStatement","src":"21077:30:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21127:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"21138:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21123:3:20"},"nodeType":"YulFunctionCall","src":"21123:18:20"},{"hexValue":"496e76616c6964206475726174696f6e","kind":"string","nodeType":"YulLiteral","src":"21143:18:20","type":"","value":"Invalid duration"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21116:6:20"},"nodeType":"YulFunctionCall","src":"21116:46:20"},"nodeType":"YulExpressionStatement","src":"21116:46:20"},{"nodeType":"YulAssignment","src":"21171:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21183:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"21194:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21179:3:20"},"nodeType":"YulFunctionCall","src":"21179:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21171:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_24673d1b0003a199275166474575e96e531c915eb950e021102fb167de0d7af4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21014:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21028:4:20","type":""}],"src":"20863:340:20"},{"body":{"nodeType":"YulBlock","src":"21460:357:20","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21477:9:20"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"21492:6:20"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21508:3:20","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"21513:1:20","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"21504:3:20"},"nodeType":"YulFunctionCall","src":"21504:11:20"},{"kind":"number","nodeType":"YulLiteral","src":"21517:1:20","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21500:3:20"},"nodeType":"YulFunctionCall","src":"21500:19:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21488:3:20"},"nodeType":"YulFunctionCall","src":"21488:32:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21470:6:20"},"nodeType":"YulFunctionCall","src":"21470:51:20"},"nodeType":"YulExpressionStatement","src":"21470:51:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21541:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"21552:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21537:3:20"},"nodeType":"YulFunctionCall","src":"21537:18:20"},{"kind":"number","nodeType":"YulLiteral","src":"21557:3:20","type":"","value":"160"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21530:6:20"},"nodeType":"YulFunctionCall","src":"21530:31:20"},"nodeType":"YulExpressionStatement","src":"21530:31:20"},{"nodeType":"YulAssignment","src":"21570:54:20","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"21596:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21608:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"21619:3:20","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21604:3:20"},"nodeType":"YulFunctionCall","src":"21604:19:20"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"21578:17:20"},"nodeType":"YulFunctionCall","src":"21578:46:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21570:4:20"}]},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"21674:6:20"}],"functionName":{"name":"validator_assert_enum_VerificationStatus","nodeType":"YulIdentifier","src":"21633:40:20"},"nodeType":"YulFunctionCall","src":"21633:48:20"},"nodeType":"YulExpressionStatement","src":"21633:48:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21701:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"21712:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21697:3:20"},"nodeType":"YulFunctionCall","src":"21697:18:20"},{"name":"value2","nodeType":"YulIdentifier","src":"21717:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21690:6:20"},"nodeType":"YulFunctionCall","src":"21690:34:20"},"nodeType":"YulExpressionStatement","src":"21690:34:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21744:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"21755:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21740:3:20"},"nodeType":"YulFunctionCall","src":"21740:18:20"},{"name":"value3","nodeType":"YulIdentifier","src":"21760:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21733:6:20"},"nodeType":"YulFunctionCall","src":"21733:34:20"},"nodeType":"YulExpressionStatement","src":"21733:34:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21787:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"21798:3:20","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21783:3:20"},"nodeType":"YulFunctionCall","src":"21783:19:20"},{"name":"value4","nodeType":"YulIdentifier","src":"21804:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21776:6:20"},"nodeType":"YulFunctionCall","src":"21776:35:20"},"nodeType":"YulExpressionStatement","src":"21776:35:20"}]},"name":"abi_encode_tuple_t_address_t_string_memory_ptr_t_enum$_VerificationTier_$6389_t_uint256_t_uint256__to_t_address_t_string_memory_ptr_t_uint8_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21397:9:20","type":""},{"name":"value4","nodeType":"YulTypedName","src":"21408:6:20","type":""},{"name":"value3","nodeType":"YulTypedName","src":"21416:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"21424:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"21432:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21440:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21451:4:20","type":""}],"src":"21208:609:20"},{"body":{"nodeType":"YulBlock","src":"21870:77:20","statements":[{"nodeType":"YulAssignment","src":"21880:16:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21891:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"21894:1:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21887:3:20"},"nodeType":"YulFunctionCall","src":"21887:9:20"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"21880:3:20"}]},{"body":{"nodeType":"YulBlock","src":"21919:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"21921:16:20"},"nodeType":"YulFunctionCall","src":"21921:18:20"},"nodeType":"YulExpressionStatement","src":"21921:18:20"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21911:1:20"},{"name":"sum","nodeType":"YulIdentifier","src":"21914:3:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21908:2:20"},"nodeType":"YulFunctionCall","src":"21908:10:20"},"nodeType":"YulIf","src":"21905:36:20"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"21853:1:20","type":""},{"name":"y","nodeType":"YulTypedName","src":"21856:1:20","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"21862:3:20","type":""}],"src":"21822:125:20"},{"body":{"nodeType":"YulBlock","src":"22073:99:20","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22090:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"22101:2:20","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22083:6:20"},"nodeType":"YulFunctionCall","src":"22083:21:20"},"nodeType":"YulExpressionStatement","src":"22083:21:20"},{"nodeType":"YulAssignment","src":"22113:53:20","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22139:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22151:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"22162:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22147:3:20"},"nodeType":"YulFunctionCall","src":"22147:18:20"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"22121:17:20"},"nodeType":"YulFunctionCall","src":"22121:45:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22113:4:20"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22042:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22053:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22064:4:20","type":""}],"src":"21952:220:20"},{"body":{"nodeType":"YulBlock","src":"22351:176:20","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22368:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"22379:2:20","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22361:6:20"},"nodeType":"YulFunctionCall","src":"22361:21:20"},"nodeType":"YulExpressionStatement","src":"22361:21:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22402:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"22413:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22398:3:20"},"nodeType":"YulFunctionCall","src":"22398:18:20"},{"kind":"number","nodeType":"YulLiteral","src":"22418:2:20","type":"","value":"26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22391:6:20"},"nodeType":"YulFunctionCall","src":"22391:30:20"},"nodeType":"YulExpressionStatement","src":"22391:30:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22441:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"22452:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22437:3:20"},"nodeType":"YulFunctionCall","src":"22437:18:20"},{"hexValue":"56656869636c6520616c72656164792072656769737465726564","kind":"string","nodeType":"YulLiteral","src":"22457:28:20","type":"","value":"Vehicle already registered"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22430:6:20"},"nodeType":"YulFunctionCall","src":"22430:56:20"},"nodeType":"YulExpressionStatement","src":"22430:56:20"},{"nodeType":"YulAssignment","src":"22495:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22507:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"22518:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22503:3:20"},"nodeType":"YulFunctionCall","src":"22503:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22495:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_6a1fe13f1cbfc4e94e476d484fdbff96a49a9eed66b275148b49e4ed57d3a6bc__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22328:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22342:4:20","type":""}],"src":"22177:350:20"},{"body":{"nodeType":"YulBlock","src":"22578:171:20","statements":[{"body":{"nodeType":"YulBlock","src":"22609:111:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22630:1:20","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22637:3:20","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"22642:10:20","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"22633:3:20"},"nodeType":"YulFunctionCall","src":"22633:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22623:6:20"},"nodeType":"YulFunctionCall","src":"22623:31:20"},"nodeType":"YulExpressionStatement","src":"22623:31:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22674:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"22677:4:20","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22667:6:20"},"nodeType":"YulFunctionCall","src":"22667:15:20"},"nodeType":"YulExpressionStatement","src":"22667:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22702:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22705:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22695:6:20"},"nodeType":"YulFunctionCall","src":"22695:15:20"},"nodeType":"YulExpressionStatement","src":"22695:15:20"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"22598:1:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"22591:6:20"},"nodeType":"YulFunctionCall","src":"22591:9:20"},"nodeType":"YulIf","src":"22588:132:20"},{"nodeType":"YulAssignment","src":"22729:14:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"22738:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"22741:1:20"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"22734:3:20"},"nodeType":"YulFunctionCall","src":"22734:9:20"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"22729:1:20"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"22563:1:20","type":""},{"name":"y","nodeType":"YulTypedName","src":"22566:1:20","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"22572:1:20","type":""}],"src":"22532:217:20"},{"body":{"nodeType":"YulBlock","src":"22928:162:20","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22945:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"22956:2:20","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22938:6:20"},"nodeType":"YulFunctionCall","src":"22938:21:20"},"nodeType":"YulExpressionStatement","src":"22938:21:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22979:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"22990:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22975:3:20"},"nodeType":"YulFunctionCall","src":"22975:18:20"},{"kind":"number","nodeType":"YulLiteral","src":"22995:2:20","type":"","value":"12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22968:6:20"},"nodeType":"YulFunctionCall","src":"22968:30:20"},"nodeType":"YulExpressionStatement","src":"22968:30:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23018:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"23029:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23014:3:20"},"nodeType":"YulFunctionCall","src":"23014:18:20"},{"hexValue":"496e76616c69642079656172","kind":"string","nodeType":"YulLiteral","src":"23034:14:20","type":"","value":"Invalid year"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23007:6:20"},"nodeType":"YulFunctionCall","src":"23007:42:20"},"nodeType":"YulExpressionStatement","src":"23007:42:20"},{"nodeType":"YulAssignment","src":"23058:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23070:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"23081:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23066:3:20"},"nodeType":"YulFunctionCall","src":"23066:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23058:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_247169d39dec5a8666f09ef6f1e26495735cec7758e82ed149c983ef50cdbcf1__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22905:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22919:4:20","type":""}],"src":"22754:336:20"},{"body":{"nodeType":"YulBlock","src":"23144:79:20","statements":[{"nodeType":"YulAssignment","src":"23154:17:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23166:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"23169:1:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23162:3:20"},"nodeType":"YulFunctionCall","src":"23162:9:20"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"23154:4:20"}]},{"body":{"nodeType":"YulBlock","src":"23195:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"23197:16:20"},"nodeType":"YulFunctionCall","src":"23197:18:20"},"nodeType":"YulExpressionStatement","src":"23197:18:20"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"23186:4:20"},{"name":"x","nodeType":"YulIdentifier","src":"23192:1:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"23183:2:20"},"nodeType":"YulFunctionCall","src":"23183:11:20"},"nodeType":"YulIf","src":"23180:37:20"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"23126:1:20","type":""},{"name":"y","nodeType":"YulTypedName","src":"23129:1:20","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"23135:4:20","type":""}],"src":"23095:128:20"},{"body":{"nodeType":"YulBlock","src":"23479:345:20","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23496:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"23507:3:20","type":"","value":"192"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23489:6:20"},"nodeType":"YulFunctionCall","src":"23489:22:20"},"nodeType":"YulExpressionStatement","src":"23489:22:20"},{"nodeType":"YulAssignment","src":"23520:54:20","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"23546:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23558:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"23569:3:20","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23554:3:20"},"nodeType":"YulFunctionCall","src":"23554:19:20"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"23528:17:20"},"nodeType":"YulFunctionCall","src":"23528:46:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23520:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23594:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"23605:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23590:3:20"},"nodeType":"YulFunctionCall","src":"23590:18:20"},{"name":"value1","nodeType":"YulIdentifier","src":"23610:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23583:6:20"},"nodeType":"YulFunctionCall","src":"23583:34:20"},"nodeType":"YulExpressionStatement","src":"23583:34:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23637:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"23648:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23633:3:20"},"nodeType":"YulFunctionCall","src":"23633:18:20"},{"name":"value2","nodeType":"YulIdentifier","src":"23653:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23626:6:20"},"nodeType":"YulFunctionCall","src":"23626:34:20"},"nodeType":"YulExpressionStatement","src":"23626:34:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23680:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"23691:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23676:3:20"},"nodeType":"YulFunctionCall","src":"23676:18:20"},{"name":"value3","nodeType":"YulIdentifier","src":"23696:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23669:6:20"},"nodeType":"YulFunctionCall","src":"23669:34:20"},"nodeType":"YulExpressionStatement","src":"23669:34:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23723:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"23734:3:20","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23719:3:20"},"nodeType":"YulFunctionCall","src":"23719:19:20"},{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"23744:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"23752:4:20","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"23740:3:20"},"nodeType":"YulFunctionCall","src":"23740:17:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23712:6:20"},"nodeType":"YulFunctionCall","src":"23712:46:20"},"nodeType":"YulExpressionStatement","src":"23712:46:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23778:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"23789:3:20","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23774:3:20"},"nodeType":"YulFunctionCall","src":"23774:19:20"},{"arguments":[{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"23809:6:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"23802:6:20"},"nodeType":"YulFunctionCall","src":"23802:14:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"23795:6:20"},"nodeType":"YulFunctionCall","src":"23795:22:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23767:6:20"},"nodeType":"YulFunctionCall","src":"23767:51:20"},"nodeType":"YulExpressionStatement","src":"23767:51:20"}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_uint8_t_bool__to_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_uint8_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23408:9:20","type":""},{"name":"value5","nodeType":"YulTypedName","src":"23419:6:20","type":""},{"name":"value4","nodeType":"YulTypedName","src":"23427:6:20","type":""},{"name":"value3","nodeType":"YulTypedName","src":"23435:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"23443:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"23451:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"23459:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23470:4:20","type":""}],"src":"23228:596:20"},{"body":{"nodeType":"YulBlock","src":"23948:230:20","statements":[{"body":{"nodeType":"YulBlock","src":"23994:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24003:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24006:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"23996:6:20"},"nodeType":"YulFunctionCall","src":"23996:12:20"},"nodeType":"YulExpressionStatement","src":"23996:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"23969:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"23978:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23965:3:20"},"nodeType":"YulFunctionCall","src":"23965:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"23990:2:20","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"23961:3:20"},"nodeType":"YulFunctionCall","src":"23961:32:20"},"nodeType":"YulIf","src":"23958:52:20"},{"nodeType":"YulVariableDeclaration","src":"24019:29:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24038:9:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"24032:5:20"},"nodeType":"YulFunctionCall","src":"24032:16:20"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"24023:5:20","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24098:5:20"}],"functionName":{"name":"validator_revert_enum_VerificationStatus","nodeType":"YulIdentifier","src":"24057:40:20"},"nodeType":"YulFunctionCall","src":"24057:47:20"},"nodeType":"YulExpressionStatement","src":"24057:47:20"},{"nodeType":"YulAssignment","src":"24113:15:20","value":{"name":"value","nodeType":"YulIdentifier","src":"24123:5:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"24113:6:20"}]},{"nodeType":"YulAssignment","src":"24137:35:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24157:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"24168:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24153:3:20"},"nodeType":"YulFunctionCall","src":"24153:18:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"24147:5:20"},"nodeType":"YulFunctionCall","src":"24147:25:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"24137:6:20"}]}]},"name":"abi_decode_tuple_t_enum$_VerificationTier_$6389t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23906:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"23917:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"23929:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"23937:6:20","type":""}],"src":"23829:349:20"},{"body":{"nodeType":"YulBlock","src":"24379:268:20","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24396:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"24407:2:20","type":"","value":"96"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24389:6:20"},"nodeType":"YulFunctionCall","src":"24389:21:20"},"nodeType":"YulExpressionStatement","src":"24389:21:20"},{"nodeType":"YulAssignment","src":"24419:53:20","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24445:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24457:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"24468:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24453:3:20"},"nodeType":"YulFunctionCall","src":"24453:18:20"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"24427:17:20"},"nodeType":"YulFunctionCall","src":"24427:45:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24419:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24492:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"24503:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24488:3:20"},"nodeType":"YulFunctionCall","src":"24488:18:20"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"24512:6:20"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24528:3:20","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"24533:1:20","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"24524:3:20"},"nodeType":"YulFunctionCall","src":"24524:11:20"},{"kind":"number","nodeType":"YulLiteral","src":"24537:1:20","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24520:3:20"},"nodeType":"YulFunctionCall","src":"24520:19:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"24508:3:20"},"nodeType":"YulFunctionCall","src":"24508:32:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24481:6:20"},"nodeType":"YulFunctionCall","src":"24481:60:20"},"nodeType":"YulExpressionStatement","src":"24481:60:20"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"24591:6:20"}],"functionName":{"name":"validator_assert_enum_VerificationStatus","nodeType":"YulIdentifier","src":"24550:40:20"},"nodeType":"YulFunctionCall","src":"24550:48:20"},"nodeType":"YulExpressionStatement","src":"24550:48:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24618:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"24629:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24614:3:20"},"nodeType":"YulFunctionCall","src":"24614:18:20"},{"name":"value2","nodeType":"YulIdentifier","src":"24634:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24607:6:20"},"nodeType":"YulFunctionCall","src":"24607:34:20"},"nodeType":"YulExpressionStatement","src":"24607:34:20"}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_address_t_enum$_VerificationTier_$6389__to_t_string_memory_ptr_t_address_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24332:9:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"24343:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"24351:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"24359:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24370:4:20","type":""}],"src":"24183:464:20"},{"body":{"nodeType":"YulBlock","src":"24826:168:20","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24843:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"24854:2:20","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24836:6:20"},"nodeType":"YulFunctionCall","src":"24836:21:20"},"nodeType":"YulExpressionStatement","src":"24836:21:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24877:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"24888:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24873:3:20"},"nodeType":"YulFunctionCall","src":"24873:18:20"},{"kind":"number","nodeType":"YulLiteral","src":"24893:2:20","type":"","value":"18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24866:6:20"},"nodeType":"YulFunctionCall","src":"24866:30:20"},"nodeType":"YulExpressionStatement","src":"24866:30:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24916:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"24927:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24912:3:20"},"nodeType":"YulFunctionCall","src":"24912:18:20"},{"hexValue":"436c61696d20616c72656164792070616964","kind":"string","nodeType":"YulLiteral","src":"24932:20:20","type":"","value":"Claim already paid"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24905:6:20"},"nodeType":"YulFunctionCall","src":"24905:48:20"},"nodeType":"YulExpressionStatement","src":"24905:48:20"},{"nodeType":"YulAssignment","src":"24962:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24974:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"24985:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24970:3:20"},"nodeType":"YulFunctionCall","src":"24970:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24962:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_f00b54c7845babbe8f88a73867934c8d99124bf65b43aac829e39ecb9b6e5191__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24803:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24817:4:20","type":""}],"src":"24652:342:20"},{"body":{"nodeType":"YulBlock","src":"25173:179:20","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25190:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"25201:2:20","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25183:6:20"},"nodeType":"YulFunctionCall","src":"25183:21:20"},"nodeType":"YulExpressionStatement","src":"25183:21:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25224:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"25235:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25220:3:20"},"nodeType":"YulFunctionCall","src":"25220:18:20"},{"kind":"number","nodeType":"YulLiteral","src":"25240:2:20","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25213:6:20"},"nodeType":"YulFunctionCall","src":"25213:30:20"},"nodeType":"YulExpressionStatement","src":"25213:30:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25263:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"25274:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25259:3:20"},"nodeType":"YulFunctionCall","src":"25259:18:20"},{"hexValue":"496e73756666696369656e7420636f6e74726163742062616c616e6365","kind":"string","nodeType":"YulLiteral","src":"25279:31:20","type":"","value":"Insufficient contract balance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25252:6:20"},"nodeType":"YulFunctionCall","src":"25252:59:20"},"nodeType":"YulExpressionStatement","src":"25252:59:20"},{"nodeType":"YulAssignment","src":"25320:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25332:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"25343:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25328:3:20"},"nodeType":"YulFunctionCall","src":"25328:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25320:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25150:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25164:4:20","type":""}],"src":"24999:353:20"},{"body":{"nodeType":"YulBlock","src":"25548:14:20","statements":[{"nodeType":"YulAssignment","src":"25550:10:20","value":{"name":"pos","nodeType":"YulIdentifier","src":"25557:3:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"25550:3:20"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25532:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25540:3:20","type":""}],"src":"25357:205:20"},{"body":{"nodeType":"YulBlock","src":"25741:172:20","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25758:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"25769:2:20","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25751:6:20"},"nodeType":"YulFunctionCall","src":"25751:21:20"},"nodeType":"YulExpressionStatement","src":"25751:21:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25792:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"25803:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25788:3:20"},"nodeType":"YulFunctionCall","src":"25788:18:20"},{"kind":"number","nodeType":"YulLiteral","src":"25808:2:20","type":"","value":"22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25781:6:20"},"nodeType":"YulFunctionCall","src":"25781:30:20"},"nodeType":"YulExpressionStatement","src":"25781:30:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25831:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"25842:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25827:3:20"},"nodeType":"YulFunctionCall","src":"25827:18:20"},{"hexValue":"4661696c656420746f2073656e64207061796d656e74","kind":"string","nodeType":"YulLiteral","src":"25847:24:20","type":"","value":"Failed to send payment"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25820:6:20"},"nodeType":"YulFunctionCall","src":"25820:52:20"},"nodeType":"YulExpressionStatement","src":"25820:52:20"},{"nodeType":"YulAssignment","src":"25881:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25893:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"25904:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25889:3:20"},"nodeType":"YulFunctionCall","src":"25889:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25881:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_92ad45549db9f58d19e024365f85a0c8ac795b4a8ba66a369c16933f75075f07__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25718:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25732:4:20","type":""}],"src":"25567:346:20"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function validator_revert_enum_VerificationStatus(value)\n    {\n        if iszero(lt(value, 3)) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_enum$_VerificationStatus_$6469(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_enum_VerificationStatus(value)\n        value1 := value\n    }\n    function abi_decode_bool(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint256t_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_bool(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_contract$_IRiskAssessment_$6421__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_bool__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_bool__fromStack_reversed(headStart, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 256\n        mstore(headStart, _1)\n        let tail_1 := abi_encode_string(value0, add(headStart, _1))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        let tail_2 := abi_encode_string(value1, tail_1)\n        mstore(add(headStart, 64), sub(tail_2, headStart))\n        let tail_3 := abi_encode_string(value2, tail_2)\n        mstore(add(headStart, 96), sub(tail_3, headStart))\n        let tail_4 := abi_encode_string(value3, tail_3)\n        mstore(add(headStart, 128), sub(tail_4, headStart))\n        let tail_5 := abi_encode_string(value4, tail_4)\n        mstore(add(headStart, 160), sub(tail_5, headStart))\n        tail := abi_encode_string(value5, tail_5)\n        mstore(add(headStart, 192), value6)\n        mstore(add(headStart, 224), iszero(iszero(value7)))\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 64))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value2 := abi_decode_string(add(headStart, offset_2), dataEnd)\n        let offset_3 := calldataload(add(headStart, 96))\n        if gt(offset_3, _1) { revert(0, 0) }\n        value3 := abi_decode_string(add(headStart, offset_3), dataEnd)\n        let offset_4 := calldataload(add(headStart, 128))\n        if gt(offset_4, _1) { revert(0, 0) }\n        value4 := abi_decode_string(add(headStart, offset_4), dataEnd)\n        let offset_5 := calldataload(add(headStart, 160))\n        if gt(offset_5, _1) { revert(0, 0) }\n        value5 := abi_decode_string(add(headStart, offset_5), dataEnd)\n        let offset_6 := calldataload(add(headStart, 192))\n        if gt(offset_6, _1) { revert(0, 0) }\n        value6 := abi_decode_string(add(headStart, offset_6), dataEnd)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 64))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value2 := abi_decode_string(add(headStart, offset_1), dataEnd)\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function validator_assert_enum_VerificationStatus(value)\n    {\n        if iszero(lt(value, 3))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_enum$_VerificationStatus_$6469_t_enum$_VerificationTier_$6389_t_uint256_t_bool__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_uint8_t_uint8_t_uint256_t_bool__fromStack_reversed(headStart, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 288\n        mstore(headStart, _1)\n        let tail_1 := abi_encode_string(value0, add(headStart, _1))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        let tail_2 := abi_encode_string(value1, tail_1)\n        mstore(add(headStart, 64), sub(tail_2, headStart))\n        tail := abi_encode_string(value2, tail_2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n        validator_assert_enum_VerificationStatus(value5)\n        mstore(add(headStart, 160), value5)\n        validator_assert_enum_VerificationStatus(value6)\n        mstore(add(headStart, 192), value6)\n        mstore(add(headStart, 224), value7)\n        mstore(add(headStart, 256), iszero(iszero(value8)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_bool_t_bool__to_t_uint256_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_bool_t_bool__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), 224)\n        let tail_1 := abi_encode_string(value2, add(headStart, 224))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        tail := abi_encode_string(value3, tail_1)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), iszero(iszero(value5)))\n        mstore(add(headStart, 192), iszero(iszero(value6)))\n    }\n    function abi_encode_tuple_t_contract$_IPolicyNFT_$6450__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_bool_t_enum$_VerificationTier_$6389__to_t_uint256_t_uint256_t_uint256_t_bool_t_uint8__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), iszero(iszero(value3)))\n        validator_assert_enum_VerificationStatus(value4)\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_uint8(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_uint256t_uint256t_uint256t_uint8t_bool(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7\n    {\n        if slt(sub(dataEnd, headStart), 256) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 64))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value2 := abi_decode_string(add(headStart, offset_2), dataEnd)\n        value3 := calldataload(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n        value6 := abi_decode_uint8(add(headStart, 192))\n        value7 := abi_decode_bool(add(headStart, 224))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_enum$_VerificationTier_$6389(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_enum_VerificationStatus(value)\n        value0 := value\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_a91c9f81e9feb710f18005dba909bf9f6dc78a9b082739b042458d7a998ca6ab__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Vehicle not registered\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ff9ad865b57974cd8b3c520410a7fb45d1a1d122e3478b20a5b20d59fc540b67__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Photos not uploaded\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_enum$_VerificationStatus_$6469__to_t_string_memory_ptr_t_uint8__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        tail := abi_encode_string(value0, add(headStart, 64))\n        validator_assert_enum_VerificationStatus(value1)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_49dea5ad47e4b4a8e741022bbde0f91413b0cb7f3d15b1515bae7c7b15a11cde__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Claim already processed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_c1a493b215ee9743b1073772936fe1708d9ad9a54e420311fd253597e9010212__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Not vehicle owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d4641406100510d0ad93d6c220da4cef8ded35e87ec0657f527e262652d1c942__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Photos already uploaded\")\n        tail := add(headStart, 96)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_uint256__to_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        tail := abi_encode_string(value0, add(headStart, 64))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_4bc221f51c0c4bd6523cb893b47fce57185073464b1c6fa624cc7cfeaeaca718__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Policy not active\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_aeef98c871014711956d29bf45ac3fa97a84e928c584213afc461aa2c4a788c5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Not policy owner\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_3793fdef918127330e0d76c5b92b8820046031cf55bdfac2b0725a41a43ee952__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Vehicle not verified\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_645330ee036893cbc37966ce7efc404d1f8451960092bb671b4db5d0c8accd42__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Coverage exceeds tier limit\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_enum$_VerificationTier_$6389__to_t_string_memory_ptr_t_uint8__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        tail := abi_encode_string(value0, add(headStart, 64))\n        validator_assert_enum_VerificationStatus(value1)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_94c883244898b2ef300949156ea78e9c524ab5bc5021a4d0763c5111f4225c8f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Insufficient premium payment\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_24673d1b0003a199275166474575e96e531c915eb950e021102fb167de0d7af4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Invalid duration\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_string_memory_ptr_t_enum$_VerificationTier_$6389_t_uint256_t_uint256__to_t_address_t_string_memory_ptr_t_uint8_t_uint256_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), 160)\n        tail := abi_encode_string(value1, add(headStart, 160))\n        validator_assert_enum_VerificationStatus(value2)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_6a1fe13f1cbfc4e94e476d484fdbff96a49a9eed66b275148b49e4ed57d3a6bc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Vehicle already registered\")\n        tail := add(headStart, 96)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_247169d39dec5a8666f09ef6f1e26495735cec7758e82ed149c983ef50cdbcf1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"Invalid year\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_uint8_t_bool__to_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_uint8_t_bool__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 192)\n        tail := abi_encode_string(value0, add(headStart, 192))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, 0xff))\n        mstore(add(headStart, 160), iszero(iszero(value5)))\n    }\n    function abi_decode_tuple_t_enum$_VerificationTier_$6389t_uint256_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_enum_VerificationStatus(value)\n        value0 := value\n        value1 := mload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_address_t_enum$_VerificationTier_$6389__to_t_string_memory_ptr_t_address_t_uint8__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 96)\n        tail := abi_encode_string(value0, add(headStart, 96))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        validator_assert_enum_VerificationStatus(value2)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_f00b54c7845babbe8f88a73867934c8d99124bf65b43aac829e39ecb9b6e5191__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Claim already paid\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Insufficient contract balance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_stringliteral_92ad45549db9f58d19e024365f85a0c8ac795b4a8ba66a369c16933f75075f07__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Failed to send payment\")\n        tail := add(headStart, 96)\n    }\n}","id":20,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436106100f75760003560e01c8063976de5c51161008a578063e93b2a3411610059578063e93b2a341461031e578063f21ad98b14610331578063f2fde38b14610351578063fedda0e41461037157600080fd5b8063976de5c514610237578063a888c2cd1461026c578063af02808a1461029f578063d3e89483146102bf57600080fd5b8063744007fd116100c6578063744007fd146101975780637daaaaf3146101cb5780638da5cb5b146101eb5780638f749e151461020957600080fd5b80631ca2cf281461010357806335446def1461012557806370a1a7d514610145578063715018a61461018257600080fd5b366100fe57005b600080fd5b34801561010f57600080fd5b5061012361011e366004611c52565b61039e565b005b34801561013157600080fd5b50610123610140366004611cb9565b610529565b34801561015157600080fd5b50600354610165906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561018e57600080fd5b506101236105f3565b3480156101a357600080fd5b506101b76101b2366004611ce5565b610607565b604051610179989796959493929190611d6a565b3480156101d757600080fd5b506101236101e6366004611dff565b610986565b3480156101f757600080fd5b506001546001600160a01b0316610165565b34801561021557600080fd5b50610229610224366004611f1a565b610bab565b604051908152602001610179565b34801561024357600080fd5b50610257610252366004611ce5565b610dcc565b60405161017999989796959493929190611fc3565b34801561027857600080fd5b5061028c610287366004612054565b610fcc565b604051610179979695949392919061206d565b3480156102ab57600080fd5b50600254610165906001600160a01b031681565b3480156102cb57600080fd5b5061030d6102da366004612054565b60066020526000908152604090208054600182015460028301546003909301549192909160ff8082169161010090041685565b6040516101799594939291906120c0565b61022961032c3660046120f6565b61111e565b34801561033d57600080fd5b5061012361034c366004612155565b6115a9565b34801561035d57600080fd5b5061012361036c366004612231565b6118bb565b34801561037d57600080fd5b5061022961038c36600461224e565b60086020526000908152604090205481565b6103a66118f9565b6004826040516103b6919061226b565b9081526040519081900360200190206006015460ff166104165760405162461bcd60e51b815260206004820152601660248201527515995a1a58db19481b9bdd081c9959da5cdd195c995960521b60448201526064015b60405180910390fd5b600582604051610426919061226b565b9081526040519081900360200190206007015460ff1661047e5760405162461bcd60e51b8152602060048201526013602482015272141a1bdd1bdcc81b9bdd081d5c1b1bd8591959606a1b604482015260640161040d565b8060048360405161048f919061226b565b908152604051908190036020019020600401805460ff60a01b1916600160a01b8360028111156104c1576104c1611f8f565b0217905550426004836040516104d7919061226b565b9081526020016040518091039020600501819055507f16199dc2004744f89cfe5bc916b084fff79f2e7be10b3a6be2240e97846fb408828260405161051d929190612287565b60405180910390a15050565b6105316118f9565b6000828152600760205260409020600581015460ff16156105945760405162461bcd60e51b815260206004820152601760248201527f436c61696d20616c72656164792070726f636573736564000000000000000000604482015260640161040d565b60058101805460ff1916600117905581156105b2576105b281611926565b827fd4203892740c26c8184cfb101077c87ccf2d01beaf6aef0c250ab43bb43df202836040516105e6911515815260200190565b60405180910390a2505050565b6105fb6118f9565b6106056000611b26565b565b805160208183018101805160058252928201919093012091528054819061062d906122b2565b80601f0160208091040260200160405190810160405280929190818152602001828054610659906122b2565b80156106a65780601f1061067b576101008083540402835291602001916106a6565b820191906000526020600020905b81548152906001019060200180831161068957829003601f168201915b5050505050908060010180546106bb906122b2565b80601f01602080910402602001604051908101604052809291908181526020018280546106e7906122b2565b80156107345780601f1061070957610100808354040283529160200191610734565b820191906000526020600020905b81548152906001019060200180831161071757829003601f168201915b505050505090806002018054610749906122b2565b80601f0160208091040260200160405190810160405280929190818152602001828054610775906122b2565b80156107c25780601f10610797576101008083540402835291602001916107c2565b820191906000526020600020905b8154815290600101906020018083116107a557829003601f168201915b5050505050908060030180546107d7906122b2565b80601f0160208091040260200160405190810160405280929190818152602001828054610803906122b2565b80156108505780601f1061082557610100808354040283529160200191610850565b820191906000526020600020905b81548152906001019060200180831161083357829003601f168201915b505050505090806004018054610865906122b2565b80601f0160208091040260200160405190810160405280929190818152602001828054610891906122b2565b80156108de5780601f106108b3576101008083540402835291602001916108de565b820191906000526020600020905b8154815290600101906020018083116108c157829003601f168201915b5050505050908060050180546108f3906122b2565b80601f016020809104026020016040519081016040528092919081815260200182805461091f906122b2565b801561096c5780601f106109415761010080835404028352916020019161096c565b820191906000526020600020905b81548152906001019060200180831161094f57829003601f168201915b50505050600683015460079093015491929160ff16905088565b336001600160a01b03166004886040516109a0919061226b565b908152604051908190036020019020600401546001600160a01b0316146109fd5760405162461bcd60e51b81526020600482015260116024820152702737ba103b32b434b1b6329037bbb732b960791b604482015260640161040d565b600587604051610a0d919061226b565b9081526040519081900360200190206007015460ff1615610a705760405162461bcd60e51b815260206004820152601760248201527f50686f746f7320616c72656164792075706c6f61646564000000000000000000604482015260640161040d565b60405180610100016040528087815260200186815260200185815260200184815260200183815260200182815260200142815260200160011515815250600588604051610abd919061226b565b90815260405190819003602001902081518190610ada908261233b565b5060208201516001820190610aef908261233b565b5060408201516002820190610b04908261233b565b5060608201516003820190610b19908261233b565b5060808201516004820190610b2e908261233b565b5060a08201516005820190610b43908261233b565b5060c0820151600682015560e0909101516007909101805460ff19169115159190911790556040517f1d11784494a8ce3357eaab9e9cf4439a22dd7b03aefaea16088e21e4bb2cfeac90610b9a90899042906123fb565b60405180910390a150505050505050565b6000610bb5611b78565b60008581526006602052604090206003015460ff16610c0a5760405162461bcd60e51b8152602060048201526011602482015270506f6c696379206e6f742061637469766560781b604482015260640161040d565b60025460405163ca00902160e01b81526004810187905233916001600160a01b03169063ca00902190602401602060405180830381865afa158015610c53573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c77919061241d565b6001600160a01b031614610cc05760405162461bcd60e51b815260206004820152601060248201526f2737ba103837b634b1bc9037bbb732b960811b604482015260640161040d565b6009805460009182610cd183612450565b909155506040805160e08101825282815260208082018a81528284018a8152606084018a905260808401899052600060a0850181905260c0850181905286815260079093529390912082518155905160018201559151929350916002820190610d3a908261233b565b5060608201516003820190610d4f908261233b565b506080820151600482015560a08201516005909101805460c09093015115156101000261ff00199215159290921661ffff1990931692909217179055604051869082907f675e9cd1ef5a9bb6971c9f1099eced3c6607be0407bc871bc50a8a7b36832e7490600090a39050610dc46001600055565b949350505050565b8051602081830181018051600482529282019190930120915280548190610df2906122b2565b80601f0160208091040260200160405190810160405280929190818152602001828054610e1e906122b2565b8015610e6b5780601f10610e4057610100808354040283529160200191610e6b565b820191906000526020600020905b815481529060010190602001808311610e4e57829003601f168201915b505050505090806001018054610e80906122b2565b80601f0160208091040260200160405190810160405280929190818152602001828054610eac906122b2565b8015610ef95780601f10610ece57610100808354040283529160200191610ef9565b820191906000526020600020905b815481529060010190602001808311610edc57829003601f168201915b505050505090806002018054610f0e906122b2565b80601f0160208091040260200160405190810160405280929190818152602001828054610f3a906122b2565b8015610f875780601f10610f5c57610100808354040283529160200191610f87565b820191906000526020600020905b815481529060010190602001808311610f6a57829003601f168201915b505050600384015460048501546005860154600690960154949591946001600160a01b038216945060ff600160a01b830481169450600160a81b909204821692911689565b60076020526000908152604090208054600182015460028301805492939192610ff4906122b2565b80601f0160208091040260200160405190810160405280929190818152602001828054611020906122b2565b801561106d5780601f106110425761010080835404028352916020019161106d565b820191906000526020600020905b81548152906001019060200180831161105057829003601f168201915b505050505090806003018054611082906122b2565b80601f01602080910402602001604051908101604052809291908181526020018280546110ae906122b2565b80156110fb5780601f106110d0576101008083540402835291602001916110fb565b820191906000526020600020905b8154815290600101906020018083116110de57829003601f168201915b50505050600483015460059093015491929160ff80821692506101009091041687565b6000611128611b78565b600060048560405161113a919061226b565b908152604051908190036020019020600681015490915060ff166111995760405162461bcd60e51b815260206004820152601660248201527515995a1a58db19481b9bdd081c9959da5cdd195c995960521b604482015260640161040d565b60048101546001600160a01b031633146111e95760405162461bcd60e51b81526020600482015260116024820152702737ba103b32b434b1b6329037bbb732b960791b604482015260640161040d565b60016004820154600160a01b900460ff16600281111561120b5761120b611f8f565b1461124f5760405162461bcd60e51b815260206004820152601460248201527315995a1a58db19481b9bdd081d995c9a599a595960621b604482015260640161040d565b6004810154600890600090600160a81b900460ff16600281111561127557611275611f8f565b600281111561128657611286611f8f565b8152602001908152602001600020548311156112e45760405162461bcd60e51b815260206004820152601b60248201527f436f76657261676520657863656564732074696572206c696d69740000000000604482015260640161040d565b600354600482810154604051631a709f8560e21b81526000936001600160a01b0316926369c27e1492611325928b92600160a81b90920460ff169101612287565b602060405180830381865afa158015611342573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113669190612469565b9050803410156113b85760405162461bcd60e51b815260206004820152601c60248201527f496e73756666696369656e74207072656d69756d207061796d656e7400000000604482015260640161040d565b600085116113fb5760405162461bcd60e51b815260206004820152601060248201526f24b73b30b634b210323ab930ba34b7b760811b604482015260640161040d565b60025460048381015460405163043537fd60e31b81526000936001600160a01b0316926321a9bfe8926114419233928d92600160a81b900460ff169189918d9101612482565b6020604051808303816000875af1158015611460573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114849190612469565b90506040518060a0016040528086815260200142815260200187426114a991906124cd565b8152600160208201526004850154604090910190600160a81b900460ff1660028111156114d8576114d8611f8f565b90526000828152600660209081526040918290208351815590830151600182015590820151600280830191909155606083015160038301805491151560ff19831681178255608086015193919261ff001990911661ffff19909116179061010090849081111561154a5761154a611f8f565b0217905550905050336001600160a01b0316817f21d0178f0cde2aed24022db30651dabafb4bbe431fb787fbc92113304d8e35498960405161158c91906124e6565b60405180910390a3925050506115a26001600055565b9392505050565b6004886040516115b9919061226b565b9081526040519081900360200190206006015460ff161561161c5760405162461bcd60e51b815260206004820152601a60248201527f56656869636c6520616c72656164792072656769737465726564000000000000604482015260640161040d565b61162a6301e13380426124f9565b611636906107b26124cd565b8511156116745760405162461bcd60e51b815260206004820152600c60248201526b24b73b30b634b2103cb2b0b960a11b604482015260640161040d565b6003546000906001600160a01b0316630944a8ca8a87896116996301e13380426124f9565b6116a5906107b26124cd565b6116af919061251b565b8888886040518763ffffffff1660e01b81526004016116d39695949392919061252e565b60408051808303816000875af11580156116f1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611715919061256f565b5060408051610120810182528b8152602081018b90529081018990526060810188905233608082015290915060a081016000815260200182600281111561175e5761175e611f8f565b815242602082015260016040918201525160049061177d908c9061226b565b9081526040519081900360200190208151819061179a908261233b565b50602082015160018201906117af908261233b565b50604082015160028201906117c4908261233b565b506060820151600382015560808201516004820180546001600160a01b039092166001600160a01b031983168117825560a0850151926001600160a81b03191617600160a01b83600281111561181c5761181c611f8f565b021790555060c082015160048201805460ff60a81b1916600160a81b83600281111561184a5761184a611f8f565b021790555060e08201516005820155610100909101516006909101805460ff19169115159190911790556040517fac60a133922621409c80ab6958b2718dc64d275887639e7694b2aa0d87cbcb02906118a8908b903390859061259d565b60405180910390a1505050505050505050565b6118c36118f9565b6001600160a01b0381166118ed57604051631e4fbdf760e01b81526000600482015260240161040d565b6118f681611b26565b50565b6001546001600160a01b031633146106055760405163118cdaa760e01b815233600482015260240161040d565b6005810154610100900460ff16156119755760405162461bcd60e51b815260206004820152601260248201527110db185a5b48185b1c9958591e481c185a5960721b604482015260640161040d565b80600401544710156119c95760405162461bcd60e51b815260206004820152601d60248201527f496e73756666696369656e7420636f6e74726163742062616c616e6365000000604482015260640161040d565b600254600182015460405163ca00902160e01b815260048101919091526000916001600160a01b03169063ca00902190602401602060405180830381865afa158015611a19573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a3d919061241d565b60058301805461ff00191661010017905560048301546040519192506000916001600160a01b03841691908381818185875af1925050503d8060008114611aa0576040519150601f19603f3d011682016040523d82523d6000602084013e611aa5565b606091505b5050905080611aef5760405162461bcd60e51b815260206004820152601660248201527511985a5b1959081d1bc81cd95b99081c185e5b595b9d60521b604482015260640161040d565b825460048401546040519081527fb0727183796e52c5bb00a257c1eb36d8e94dbee5d6d87e259287e3372ae39ace906020016105e6565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600260005403611b9b57604051633ee5aeb560e01b815260040160405180910390fd5b6002600055565b634e487b7160e01b600052604160045260246000fd5b600082601f830112611bc957600080fd5b813567ffffffffffffffff80821115611be457611be4611ba2565b604051601f8301601f19908116603f01168101908282118183101715611c0c57611c0c611ba2565b81604052838152866020858801011115611c2557600080fd5b836020870160208301376000602085830101528094505050505092915050565b600381106118f657600080fd5b60008060408385031215611c6557600080fd5b823567ffffffffffffffff811115611c7c57600080fd5b611c8885828601611bb8565b9250506020830135611c9981611c45565b809150509250929050565b80358015158114611cb457600080fd5b919050565b60008060408385031215611ccc57600080fd5b82359150611cdc60208401611ca4565b90509250929050565b600060208284031215611cf757600080fd5b813567ffffffffffffffff811115611d0e57600080fd5b610dc484828501611bb8565b60005b83811015611d35578181015183820152602001611d1d565b50506000910152565b60008151808452611d56816020860160208601611d1a565b601f01601f19169290920160200192915050565b6000610100808352611d7e8184018c611d3e565b90508281036020840152611d92818b611d3e565b90508281036040840152611da6818a611d3e565b90508281036060840152611dba8189611d3e565b90508281036080840152611dce8188611d3e565b905082810360a0840152611de28187611d3e565b60c0840195909552505090151560e0909101529695505050505050565b600080600080600080600060e0888a031215611e1a57600080fd5b873567ffffffffffffffff80821115611e3257600080fd5b611e3e8b838c01611bb8565b985060208a0135915080821115611e5457600080fd5b611e608b838c01611bb8565b975060408a0135915080821115611e7657600080fd5b611e828b838c01611bb8565b965060608a0135915080821115611e9857600080fd5b611ea48b838c01611bb8565b955060808a0135915080821115611eba57600080fd5b611ec68b838c01611bb8565b945060a08a0135915080821115611edc57600080fd5b611ee88b838c01611bb8565b935060c08a0135915080821115611efe57600080fd5b50611f0b8a828b01611bb8565b91505092959891949750929550565b60008060008060808587031215611f3057600080fd5b84359350602085013567ffffffffffffffff80821115611f4f57600080fd5b611f5b88838901611bb8565b94506040870135915080821115611f7157600080fd5b50611f7e87828801611bb8565b949793965093946060013593505050565b634e487b7160e01b600052602160045260246000fd5b600381106118f657634e487b7160e01b600052602160045260246000fd5b6000610120808352611fd78184018d611d3e565b90508281036020840152611feb818c611d3e565b90508281036040840152611fff818b611d3e565b606084018a90526001600160a01b03891660808501529150612022905086611fa5565b8560a083015261203185611fa5565b8460c08301528360e08301528215156101008301529a9950505050505050505050565b60006020828403121561206657600080fd5b5035919050565b87815286602082015260e06040820152600061208c60e0830188611d3e565b828103606084015261209e8188611d3e565b6080840196909652505091151560a0830152151560c090910152949350505050565b8581526020810185905260408101849052821515606082015260a081016120e683611fa5565b8260808301529695505050505050565b60008060006060848603121561210b57600080fd5b833567ffffffffffffffff81111561212257600080fd5b61212e86828701611bb8565b9660208601359650604090950135949350505050565b803560ff81168114611cb457600080fd5b600080600080600080600080610100898b03121561217257600080fd5b883567ffffffffffffffff8082111561218a57600080fd5b6121968c838d01611bb8565b995060208b01359150808211156121ac57600080fd5b6121b88c838d01611bb8565b985060408b01359150808211156121ce57600080fd5b506121db8b828c01611bb8565b965050606089013594506080890135935060a089013592506121ff60c08a01612144565b915061220d60e08a01611ca4565b90509295985092959890939650565b6001600160a01b03811681146118f657600080fd5b60006020828403121561224357600080fd5b81356115a28161221c565b60006020828403121561226057600080fd5b81356115a281611c45565b6000825161227d818460208701611d1a565b9190910192915050565b60408152600061229a6040830185611d3e565b90506122a583611fa5565b8260208301529392505050565b600181811c908216806122c657607f821691505b6020821081036122e657634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561233657600081815260208120601f850160051c810160208610156123135750805b601f850160051c820191505b818110156123325782815560010161231f565b5050505b505050565b815167ffffffffffffffff81111561235557612355611ba2565b6123698161236384546122b2565b846122ec565b602080601f83116001811461239e57600084156123865750858301515b600019600386901b1c1916600185901b178555612332565b600085815260208120601f198616915b828110156123cd578886015182559484019460019091019084016123ae565b50858210156123eb5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60408152600061240e6040830185611d3e565b90508260208301529392505050565b60006020828403121561242f57600080fd5b81516115a28161221c565b634e487b7160e01b600052601160045260246000fd5b6000600182016124625761246261243a565b5060010190565b60006020828403121561247b57600080fd5b5051919050565b6001600160a01b038616815260a0602082018190526000906124a690830187611d3e565b90506124b185611fa5565b8460408301528360608301528260808301529695505050505050565b808201808211156124e0576124e061243a565b92915050565b6020815260006115a26020830184611d3e565b60008261251657634e487b7160e01b600052601260045260246000fd5b500490565b818103818111156124e0576124e061243a565b60c08152600061254160c0830189611d3e565b6020830197909752506040810194909452606084019290925260ff166080830152151560a090910152919050565b6000806040838503121561258257600080fd5b825161258d81611c45565b6020939093015192949293505050565b6060815260006125b06060830186611d3e565b6001600160a01b038516602084015290506125ca83611fa5565b82604083015294935050505056fea2646970667358221220a3a99baa042596d6d30896994f1298744feec4f3087b3dc33b602c9844a578a764736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF7 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x976DE5C5 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xE93B2A34 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xE93B2A34 EQ PUSH2 0x31E JUMPI DUP1 PUSH4 0xF21AD98B EQ PUSH2 0x331 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0xFEDDA0E4 EQ PUSH2 0x371 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x976DE5C5 EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0xA888C2CD EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0xAF02808A EQ PUSH2 0x29F JUMPI DUP1 PUSH4 0xD3E89483 EQ PUSH2 0x2BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x744007FD GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x744007FD EQ PUSH2 0x197 JUMPI DUP1 PUSH4 0x7DAAAAF3 EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0x8F749E15 EQ PUSH2 0x209 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1CA2CF28 EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0x35446DEF EQ PUSH2 0x125 JUMPI DUP1 PUSH4 0x70A1A7D5 EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x182 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0xFE JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x11E CALLDATASIZE PUSH1 0x4 PUSH2 0x1C52 JUMP JUMPDEST PUSH2 0x39E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x131 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x140 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CB9 JUMP JUMPDEST PUSH2 0x529 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x151 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x165 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x5F3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B7 PUSH2 0x1B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CE5 JUMP JUMPDEST PUSH2 0x607 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x179 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D6A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x1E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DFF JUMP JUMPDEST PUSH2 0x986 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x165 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x229 PUSH2 0x224 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F1A JUMP JUMPDEST PUSH2 0xBAB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x179 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x243 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH2 0x252 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CE5 JUMP JUMPDEST PUSH2 0xDCC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x179 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1FC3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x278 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28C PUSH2 0x287 CALLDATASIZE PUSH1 0x4 PUSH2 0x2054 JUMP JUMPDEST PUSH2 0xFCC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x179 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x206D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x165 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30D PUSH2 0x2DA CALLDATASIZE PUSH1 0x4 PUSH2 0x2054 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH1 0xFF DUP1 DUP3 AND SWAP2 PUSH2 0x100 SWAP1 DIV AND DUP6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x179 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x20C0 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x32C CALLDATASIZE PUSH1 0x4 PUSH2 0x20F6 JUMP JUMPDEST PUSH2 0x111E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x34C CALLDATASIZE PUSH1 0x4 PUSH2 0x2155 JUMP JUMPDEST PUSH2 0x15A9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x36C CALLDATASIZE PUSH1 0x4 PUSH2 0x2231 JUMP JUMPDEST PUSH2 0x18BB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x229 PUSH2 0x38C CALLDATASIZE PUSH1 0x4 PUSH2 0x224E JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3A6 PUSH2 0x18F9 JUMP JUMPDEST PUSH1 0x4 DUP3 PUSH1 0x40 MLOAD PUSH2 0x3B6 SWAP2 SWAP1 PUSH2 0x226B JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH1 0xFF AND PUSH2 0x416 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x15995A1A58DB19481B9BDD081C9959DA5CDD195C9959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 DUP3 PUSH1 0x40 MLOAD PUSH2 0x426 SWAP2 SWAP1 PUSH2 0x226B JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 PUSH1 0x7 ADD SLOAD PUSH1 0xFF AND PUSH2 0x47E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x141A1BDD1BDCC81B9BDD081D5C1B1BD8591959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x40D JUMP JUMPDEST DUP1 PUSH1 0x4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x48F SWAP2 SWAP1 PUSH2 0x226B JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x4C1 JUMPI PUSH2 0x4C1 PUSH2 0x1F8F JUMP JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x4D7 SWAP2 SWAP1 PUSH2 0x226B JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP PUSH32 0x16199DC2004744F89CFE5BC916B084FFF79F2E7BE10B3A6BE2240E97846FB408 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x51D SWAP3 SWAP2 SWAP1 PUSH2 0x2287 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x531 PUSH2 0x18F9 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x594 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436C61696D20616C72656164792070726F636573736564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x40D JUMP JUMPDEST PUSH1 0x5 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP2 ISZERO PUSH2 0x5B2 JUMPI PUSH2 0x5B2 DUP2 PUSH2 0x1926 JUMP JUMPDEST DUP3 PUSH32 0xD4203892740C26C8184CFB101077C87CCF2D01BEAF6AEF0C250AB43BB43DF202 DUP4 PUSH1 0x40 MLOAD PUSH2 0x5E6 SWAP2 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH2 0x5FB PUSH2 0x18F9 JUMP JUMPDEST PUSH2 0x605 PUSH1 0x0 PUSH2 0x1B26 JUMP JUMPDEST JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD DUP1 MLOAD PUSH1 0x5 DUP3 MSTORE SWAP3 DUP3 ADD SWAP2 SWAP1 SWAP4 ADD KECCAK256 SWAP2 MSTORE DUP1 SLOAD DUP2 SWAP1 PUSH2 0x62D SWAP1 PUSH2 0x22B2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x659 SWAP1 PUSH2 0x22B2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6A6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x67B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6A6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x689 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x6BB SWAP1 PUSH2 0x22B2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6E7 SWAP1 PUSH2 0x22B2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x734 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x709 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x734 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x717 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x749 SWAP1 PUSH2 0x22B2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x775 SWAP1 PUSH2 0x22B2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7C2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x797 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7C2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7A5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x7D7 SWAP1 PUSH2 0x22B2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x803 SWAP1 PUSH2 0x22B2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x850 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x825 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x850 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x833 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x4 ADD DUP1 SLOAD PUSH2 0x865 SWAP1 PUSH2 0x22B2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x891 SWAP1 PUSH2 0x22B2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8DE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8B3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8DE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8C1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x5 ADD DUP1 SLOAD PUSH2 0x8F3 SWAP1 PUSH2 0x22B2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x91F SWAP1 PUSH2 0x22B2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x96C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x941 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x96C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x94F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x6 DUP4 ADD SLOAD PUSH1 0x7 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 SWAP2 PUSH1 0xFF AND SWAP1 POP DUP9 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP9 PUSH1 0x40 MLOAD PUSH2 0x9A0 SWAP2 SWAP1 PUSH2 0x226B JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x9FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x2737BA103B32B434B1B6329037BBB732B9 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x40D JUMP JUMPDEST PUSH1 0x5 DUP8 PUSH1 0x40 MLOAD PUSH2 0xA0D SWAP2 SWAP1 PUSH2 0x226B JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 PUSH1 0x7 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xA70 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50686F746F7320616C72656164792075706C6F61646564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x40D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x5 DUP9 PUSH1 0x40 MLOAD PUSH2 0xABD SWAP2 SWAP1 PUSH2 0x226B JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 DUP2 MLOAD DUP2 SWAP1 PUSH2 0xADA SWAP1 DUP3 PUSH2 0x233B JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SWAP1 PUSH2 0xAEF SWAP1 DUP3 PUSH2 0x233B JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 DUP3 ADD SWAP1 PUSH2 0xB04 SWAP1 DUP3 PUSH2 0x233B JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 DUP3 ADD SWAP1 PUSH2 0xB19 SWAP1 DUP3 PUSH2 0x233B JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x4 DUP3 ADD SWAP1 PUSH2 0xB2E SWAP1 DUP3 PUSH2 0x233B JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0x5 DUP3 ADD SWAP1 PUSH2 0xB43 SWAP1 DUP3 PUSH2 0x233B JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH1 0x6 DUP3 ADD SSTORE PUSH1 0xE0 SWAP1 SWAP2 ADD MLOAD PUSH1 0x7 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x1D11784494A8CE3357EAAB9E9CF4439A22DD7B03AEFAEA16088E21E4BB2CFEAC SWAP1 PUSH2 0xB9A SWAP1 DUP10 SWAP1 TIMESTAMP SWAP1 PUSH2 0x23FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBB5 PUSH2 0x1B78 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0xFF AND PUSH2 0xC0A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x506F6C696379206E6F7420616374697665 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x40D JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xCA009021 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xCA009021 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC53 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC77 SWAP2 SWAP1 PUSH2 0x241D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xCC0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x2737BA103837B634B1BC9037BBB732B9 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x40D JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x0 SWAP2 DUP3 PUSH2 0xCD1 DUP4 PUSH2 0x2450 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x40 DUP1 MLOAD PUSH1 0xE0 DUP2 ADD DUP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP11 DUP2 MSTORE DUP3 DUP5 ADD DUP11 DUP2 MSTORE PUSH1 0x60 DUP5 ADD DUP11 SWAP1 MSTORE PUSH1 0x80 DUP5 ADD DUP10 SWAP1 MSTORE PUSH1 0x0 PUSH1 0xA0 DUP6 ADD DUP2 SWAP1 MSTORE PUSH1 0xC0 DUP6 ADD DUP2 SWAP1 MSTORE DUP7 DUP2 MSTORE PUSH1 0x7 SWAP1 SWAP4 MSTORE SWAP4 SWAP1 SWAP2 KECCAK256 DUP3 MLOAD DUP2 SSTORE SWAP1 MLOAD PUSH1 0x1 DUP3 ADD SSTORE SWAP2 MLOAD SWAP3 SWAP4 POP SWAP2 PUSH1 0x2 DUP3 ADD SWAP1 PUSH2 0xD3A SWAP1 DUP3 PUSH2 0x233B JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 DUP3 ADD SWAP1 PUSH2 0xD4F SWAP1 DUP3 PUSH2 0x233B JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x4 DUP3 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0x5 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xC0 SWAP1 SWAP4 ADD MLOAD ISZERO ISZERO PUSH2 0x100 MUL PUSH2 0xFF00 NOT SWAP3 ISZERO ISZERO SWAP3 SWAP1 SWAP3 AND PUSH2 0xFFFF NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR OR SWAP1 SSTORE PUSH1 0x40 MLOAD DUP7 SWAP1 DUP3 SWAP1 PUSH32 0x675E9CD1EF5A9BB6971C9F1099ECED3C6607BE0407BC871BC50A8A7B36832E74 SWAP1 PUSH1 0x0 SWAP1 LOG3 SWAP1 POP PUSH2 0xDC4 PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD DUP1 MLOAD PUSH1 0x4 DUP3 MSTORE SWAP3 DUP3 ADD SWAP2 SWAP1 SWAP4 ADD KECCAK256 SWAP2 MSTORE DUP1 SLOAD DUP2 SWAP1 PUSH2 0xDF2 SWAP1 PUSH2 0x22B2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xE1E SWAP1 PUSH2 0x22B2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE6B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE40 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE6B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE4E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xE80 SWAP1 PUSH2 0x22B2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xEAC SWAP1 PUSH2 0x22B2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xEF9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xECE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xEF9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xEDC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0xF0E SWAP1 PUSH2 0x22B2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xF3A SWAP1 PUSH2 0x22B2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF87 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xF5C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF87 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF6A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0x6 SWAP1 SWAP7 ADD SLOAD SWAP5 SWAP6 SWAP2 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP5 POP PUSH1 0xFF PUSH1 0x1 PUSH1 0xA0 SHL DUP4 DIV DUP2 AND SWAP5 POP PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 SWAP3 DIV DUP3 AND SWAP3 SWAP2 AND DUP10 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD DUP1 SLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH2 0xFF4 SWAP1 PUSH2 0x22B2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1020 SWAP1 PUSH2 0x22B2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x106D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1042 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x106D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1050 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x1082 SWAP1 PUSH2 0x22B2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x10AE SWAP1 PUSH2 0x22B2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x10FB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x10D0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x10FB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x10DE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0x5 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 SWAP2 PUSH1 0xFF DUP1 DUP3 AND SWAP3 POP PUSH2 0x100 SWAP1 SWAP2 DIV AND DUP8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1128 PUSH2 0x1B78 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP6 PUSH1 0x40 MLOAD PUSH2 0x113A SWAP2 SWAP1 PUSH2 0x226B JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 PUSH1 0x6 DUP2 ADD SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND PUSH2 0x1199 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x15995A1A58DB19481B9BDD081C9959DA5CDD195C9959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x40D JUMP JUMPDEST PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x11E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x2737BA103B32B434B1B6329037BBB732B9 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x40D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x120B JUMPI PUSH2 0x120B PUSH2 0x1F8F JUMP JUMPDEST EQ PUSH2 0x124F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x15995A1A58DB19481B9BDD081D995C9A599A5959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x40D JUMP JUMPDEST PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x8 SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1275 JUMPI PUSH2 0x1275 PUSH2 0x1F8F JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1286 JUMPI PUSH2 0x1286 PUSH2 0x1F8F JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP4 GT ISZERO PUSH2 0x12E4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F76657261676520657863656564732074696572206C696D69740000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x40D JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x4 DUP3 DUP2 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x1A709F85 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 PUSH4 0x69C27E14 SWAP3 PUSH2 0x1325 SWAP3 DUP12 SWAP3 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 SWAP3 DIV PUSH1 0xFF AND SWAP2 ADD PUSH2 0x2287 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1342 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1366 SWAP2 SWAP1 PUSH2 0x2469 JUMP JUMPDEST SWAP1 POP DUP1 CALLVALUE LT ISZERO PUSH2 0x13B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74207072656D69756D207061796D656E7400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x40D JUMP JUMPDEST PUSH1 0x0 DUP6 GT PUSH2 0x13FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x24B73B30B634B210323AB930BA34B7B7 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x40D JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x4 DUP4 DUP2 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x43537FD PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x0 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 PUSH4 0x21A9BFE8 SWAP3 PUSH2 0x1441 SWAP3 CALLER SWAP3 DUP14 SWAP3 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND SWAP2 DUP10 SWAP2 DUP14 SWAP2 ADD PUSH2 0x2482 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1460 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1484 SWAP2 SWAP1 PUSH2 0x2469 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP8 TIMESTAMP PUSH2 0x14A9 SWAP2 SWAP1 PUSH2 0x24CD JUMP JUMPDEST DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x40 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x14D8 JUMPI PUSH2 0x14D8 PUSH2 0x1F8F JUMP JUMPDEST SWAP1 MSTORE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP4 MLOAD DUP2 SSTORE SWAP1 DUP4 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE SWAP1 DUP3 ADD MLOAD PUSH1 0x2 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x3 DUP4 ADD DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH1 0xFF NOT DUP4 AND DUP2 OR DUP3 SSTORE PUSH1 0x80 DUP7 ADD MLOAD SWAP4 SWAP2 SWAP3 PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0xFFFF NOT SWAP1 SWAP2 AND OR SWAP1 PUSH2 0x100 SWAP1 DUP5 SWAP1 DUP2 GT ISZERO PUSH2 0x154A JUMPI PUSH2 0x154A PUSH2 0x1F8F JUMP JUMPDEST MUL OR SWAP1 SSTORE POP SWAP1 POP POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH32 0x21D0178F0CDE2AED24022DB30651DABAFB4BBE431FB787FBC92113304D8E3549 DUP10 PUSH1 0x40 MLOAD PUSH2 0x158C SWAP2 SWAP1 PUSH2 0x24E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP3 POP POP POP PUSH2 0x15A2 PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x4 DUP9 PUSH1 0x40 MLOAD PUSH2 0x15B9 SWAP2 SWAP1 PUSH2 0x226B JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x161C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56656869636C6520616C72656164792072656769737465726564000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x40D JUMP JUMPDEST PUSH2 0x162A PUSH4 0x1E13380 TIMESTAMP PUSH2 0x24F9 JUMP JUMPDEST PUSH2 0x1636 SWAP1 PUSH2 0x7B2 PUSH2 0x24CD JUMP JUMPDEST DUP6 GT ISZERO PUSH2 0x1674 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x24B73B30B634B2103CB2B0B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x40D JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x944A8CA DUP11 DUP8 DUP10 PUSH2 0x1699 PUSH4 0x1E13380 TIMESTAMP PUSH2 0x24F9 JUMP JUMPDEST PUSH2 0x16A5 SWAP1 PUSH2 0x7B2 PUSH2 0x24CD JUMP JUMPDEST PUSH2 0x16AF SWAP2 SWAP1 PUSH2 0x251B JUMP JUMPDEST DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD DUP8 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16D3 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x252E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x16F1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1715 SWAP2 SWAP1 PUSH2 0x256F JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD DUP3 MSTORE DUP12 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP12 SWAP1 MSTORE SWAP1 DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP9 SWAP1 MSTORE CALLER PUSH1 0x80 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH1 0xA0 DUP2 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x175E JUMPI PUSH2 0x175E PUSH2 0x1F8F JUMP JUMPDEST DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x40 SWAP2 DUP3 ADD MSTORE MLOAD PUSH1 0x4 SWAP1 PUSH2 0x177D SWAP1 DUP13 SWAP1 PUSH2 0x226B JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 DUP2 MLOAD DUP2 SWAP1 PUSH2 0x179A SWAP1 DUP3 PUSH2 0x233B JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SWAP1 PUSH2 0x17AF SWAP1 DUP3 PUSH2 0x233B JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 DUP3 ADD SWAP1 PUSH2 0x17C4 SWAP1 DUP3 PUSH2 0x233B JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x4 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP3 SSTORE PUSH1 0xA0 DUP6 ADD MLOAD SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND OR PUSH1 0x1 PUSH1 0xA0 SHL DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x181C JUMPI PUSH2 0x181C PUSH2 0x1F8F JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH1 0x4 DUP3 ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0xA8 SHL NOT AND PUSH1 0x1 PUSH1 0xA8 SHL DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x184A JUMPI PUSH2 0x184A PUSH2 0x1F8F JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH1 0x5 DUP3 ADD SSTORE PUSH2 0x100 SWAP1 SWAP2 ADD MLOAD PUSH1 0x6 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xAC60A133922621409C80AB6958B2718DC64D275887639E7694B2AA0D87CBCB02 SWAP1 PUSH2 0x18A8 SWAP1 DUP12 SWAP1 CALLER SWAP1 DUP6 SWAP1 PUSH2 0x259D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x18C3 PUSH2 0x18F9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x18ED JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x40D JUMP JUMPDEST PUSH2 0x18F6 DUP2 PUSH2 0x1B26 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x605 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x40D JUMP JUMPDEST PUSH1 0x5 DUP2 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1975 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x10DB185A5B48185B1C9958591E481C185A59 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x40D JUMP JUMPDEST DUP1 PUSH1 0x4 ADD SLOAD SELFBALANCE LT ISZERO PUSH2 0x19C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420636F6E74726163742062616C616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x40D JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0xCA009021 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xCA009021 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A19 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A3D SWAP2 SWAP1 PUSH2 0x241D JUMP JUMPDEST PUSH1 0x5 DUP4 ADD DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0x40 MLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1AA0 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1AA5 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1AEF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x11985A5B1959081D1BC81CD95B99081C185E5B595B9D PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x40D JUMP JUMPDEST DUP3 SLOAD PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xB0727183796E52C5BB00A257C1EB36D8E94DBEE5D6D87E259287E3372AE39ACE SWAP1 PUSH1 0x20 ADD PUSH2 0x5E6 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0x1B9B JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1BC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1BE4 JUMPI PUSH2 0x1BE4 PUSH2 0x1BA2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1C0C JUMPI PUSH2 0x1C0C PUSH2 0x1BA2 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x1C25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x18F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C88 DUP6 DUP3 DUP7 ADD PUSH2 0x1BB8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1C99 DUP2 PUSH2 0x1C45 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1CB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x1CDC PUSH1 0x20 DUP5 ADD PUSH2 0x1CA4 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC4 DUP5 DUP3 DUP6 ADD PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D35 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1D1D JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1D56 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1D1A JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP1 DUP4 MSTORE PUSH2 0x1D7E DUP2 DUP5 ADD DUP13 PUSH2 0x1D3E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1D92 DUP2 DUP12 PUSH2 0x1D3E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x1DA6 DUP2 DUP11 PUSH2 0x1D3E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1DBA DUP2 DUP10 PUSH2 0x1D3E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x1DCE DUP2 DUP9 PUSH2 0x1D3E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0xA0 DUP5 ADD MSTORE PUSH2 0x1DE2 DUP2 DUP8 PUSH2 0x1D3E JUMP JUMPDEST PUSH1 0xC0 DUP5 ADD SWAP6 SWAP1 SWAP6 MSTORE POP POP SWAP1 ISZERO ISZERO PUSH1 0xE0 SWAP1 SWAP2 ADD MSTORE SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1E1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1E32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E3E DUP12 DUP4 DUP13 ADD PUSH2 0x1BB8 JUMP JUMPDEST SWAP9 POP PUSH1 0x20 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1E54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E60 DUP12 DUP4 DUP13 ADD PUSH2 0x1BB8 JUMP JUMPDEST SWAP8 POP PUSH1 0x40 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1E76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E82 DUP12 DUP4 DUP13 ADD PUSH2 0x1BB8 JUMP JUMPDEST SWAP7 POP PUSH1 0x60 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1E98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1EA4 DUP12 DUP4 DUP13 ADD PUSH2 0x1BB8 JUMP JUMPDEST SWAP6 POP PUSH1 0x80 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1EBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1EC6 DUP12 DUP4 DUP13 ADD PUSH2 0x1BB8 JUMP JUMPDEST SWAP5 POP PUSH1 0xA0 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1EDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1EE8 DUP12 DUP4 DUP13 ADD PUSH2 0x1BB8 JUMP JUMPDEST SWAP4 POP PUSH1 0xC0 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1EFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F0B DUP11 DUP3 DUP12 ADD PUSH2 0x1BB8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1F30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1F4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F5B DUP9 DUP4 DUP10 ADD PUSH2 0x1BB8 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1F71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F7E DUP8 DUP3 DUP9 ADD PUSH2 0x1BB8 JUMP JUMPDEST SWAP5 SWAP8 SWAP4 SWAP7 POP SWAP4 SWAP5 PUSH1 0x60 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x18F6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP1 DUP4 MSTORE PUSH2 0x1FD7 DUP2 DUP5 ADD DUP14 PUSH2 0x1D3E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1FEB DUP2 DUP13 PUSH2 0x1D3E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x1FFF DUP2 DUP12 PUSH2 0x1D3E JUMP JUMPDEST PUSH1 0x60 DUP5 ADD DUP11 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x80 DUP6 ADD MSTORE SWAP2 POP PUSH2 0x2022 SWAP1 POP DUP7 PUSH2 0x1FA5 JUMP JUMPDEST DUP6 PUSH1 0xA0 DUP4 ADD MSTORE PUSH2 0x2031 DUP6 PUSH2 0x1FA5 JUMP JUMPDEST DUP5 PUSH1 0xC0 DUP4 ADD MSTORE DUP4 PUSH1 0xE0 DUP4 ADD MSTORE DUP3 ISZERO ISZERO PUSH2 0x100 DUP4 ADD MSTORE SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2066 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP8 DUP2 MSTORE DUP7 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xE0 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x208C PUSH1 0xE0 DUP4 ADD DUP9 PUSH2 0x1D3E JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x209E DUP2 DUP9 PUSH2 0x1D3E JUMP JUMPDEST PUSH1 0x80 DUP5 ADD SWAP7 SWAP1 SWAP7 MSTORE POP POP SWAP2 ISZERO ISZERO PUSH1 0xA0 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0xC0 SWAP1 SWAP2 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE DUP3 ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 ADD PUSH2 0x20E6 DUP4 PUSH2 0x1FA5 JUMP JUMPDEST DUP3 PUSH1 0x80 DUP4 ADD MSTORE SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x210B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2122 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x212E DUP7 DUP3 DUP8 ADD PUSH2 0x1BB8 JUMP JUMPDEST SWAP7 PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP7 POP PUSH1 0x40 SWAP1 SWAP6 ADD CALLDATALOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x1CB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x2172 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x218A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2196 DUP13 DUP4 DUP14 ADD PUSH2 0x1BB8 JUMP JUMPDEST SWAP10 POP PUSH1 0x20 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x21AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x21B8 DUP13 DUP4 DUP14 ADD PUSH2 0x1BB8 JUMP JUMPDEST SWAP9 POP PUSH1 0x40 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x21CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21DB DUP12 DUP3 DUP13 ADD PUSH2 0x1BB8 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD SWAP4 POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD SWAP3 POP PUSH2 0x21FF PUSH1 0xC0 DUP11 ADD PUSH2 0x2144 JUMP JUMPDEST SWAP2 POP PUSH2 0x220D PUSH1 0xE0 DUP11 ADD PUSH2 0x1CA4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x18F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2243 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x15A2 DUP2 PUSH2 0x221C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2260 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x15A2 DUP2 PUSH2 0x1C45 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x227D DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1D1A JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x229A PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1D3E JUMP JUMPDEST SWAP1 POP PUSH2 0x22A5 DUP4 PUSH2 0x1FA5 JUMP JUMPDEST DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x22C6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x22E6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2336 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x2313 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2332 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x231F JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2355 JUMPI PUSH2 0x2355 PUSH2 0x1BA2 JUMP JUMPDEST PUSH2 0x2369 DUP2 PUSH2 0x2363 DUP5 SLOAD PUSH2 0x22B2 JUMP JUMPDEST DUP5 PUSH2 0x22EC JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x239E JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x2386 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x2332 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x23CD JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x23AE JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x23EB JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x240E PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1D3E JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x242F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x15A2 DUP2 PUSH2 0x221C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x2462 JUMPI PUSH2 0x2462 PUSH2 0x243A JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x247B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 MSTORE PUSH1 0xA0 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x24A6 SWAP1 DUP4 ADD DUP8 PUSH2 0x1D3E JUMP JUMPDEST SWAP1 POP PUSH2 0x24B1 DUP6 PUSH2 0x1FA5 JUMP JUMPDEST DUP5 PUSH1 0x40 DUP4 ADD MSTORE DUP4 PUSH1 0x60 DUP4 ADD MSTORE DUP3 PUSH1 0x80 DUP4 ADD MSTORE SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x24E0 JUMPI PUSH2 0x24E0 PUSH2 0x243A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x15A2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1D3E JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2516 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x24E0 JUMPI PUSH2 0x24E0 PUSH2 0x243A JUMP JUMPDEST PUSH1 0xC0 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2541 PUSH1 0xC0 DUP4 ADD DUP10 PUSH2 0x1D3E JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP8 SWAP1 SWAP8 MSTORE POP PUSH1 0x40 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x60 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xFF AND PUSH1 0x80 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0xA0 SWAP1 SWAP2 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2582 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH2 0x258D DUP2 PUSH2 0x1C45 JUMP JUMPDEST PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD MLOAD SWAP3 SWAP5 SWAP3 SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x25B0 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x1D3E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP1 POP PUSH2 0x25CA DUP4 PUSH2 0x1FA5 JUMP JUMPDEST DUP3 PUSH1 0x40 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 0xA9 SWAP12 0xAA DIV 0x25 SWAP7 0xD6 0xD3 ADDMOD SWAP7 SWAP10 0x4F SLT SWAP9 PUSH21 0x4FEEC4F3087B3DC33B602C9844A578A764736F6C63 NUMBER STOP ADDMOD EQ STOP CALLER ","sourceMap":"203:7946:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4718:481;;;;;;;;;;-1:-1:-1;4718:481:17;;;;;:::i;:::-;;:::i;:::-;;7211:366;;;;;;;;;;-1:-1:-1;7211:366:17;;;;;:::i;:::-;;:::i;293:37::-;;;;;;;;;;-1:-1:-1;293:37:17;;;;-1:-1:-1;;;;;293:37:17;;;;;;-1:-1:-1;;;;;2099:32:20;;;2081:51;;2069:2;2054:18;293:37:17;;;;;;;;2293:101:0;;;;;;;;;;;;;:::i;1390:53:17:-;;;;;;;;;;-1:-1:-1;1390:53:17;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;:::i;3814:894::-;;;;;;;;;;-1:-1:-1;3814:894:17;;;;;:::i;:::-;;:::i;1638:85:0:-;;;;;;;;;;-1:-1:-1;1710:6:0;;-1:-1:-1;;;;;1710:6:0;1638:85;;6446:755:17;;;;;;;;;;-1:-1:-1;6446:755:17;;;;;:::i;:::-;;:::i;:::-;;;6810:25:20;;;6798:2;6783:18;6446:755:17;6664:177:20;1342:42:17;;;;;;;;;;-1:-1:-1;1342:42:17;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;:::i;1497:39::-;;;;;;;;;;-1:-1:-1;1497:39:17;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;:::i;260:27::-;;;;;;;;;;-1:-1:-1;260:27:17;;;;-1:-1:-1;;;;;260:27:17;;;1449:42;;;;;;;;;;-1:-1:-1;1449:42:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;5205:1231::-;;;;;;:::i;:::-;;:::i;2669:1135::-;;;;;;;;;;-1:-1:-1;2669:1135:17;;;;;:::i;:::-;;:::i;2543:215:0:-;;;;;;;;;;-1:-1:-1;2543:215:0;;;;;:::i;:::-;;:::i;1542:73:17:-;;;;;;;;;;-1:-1:-1;1542:73:17;;;;;:::i;:::-;;;;;;;;;;;;;;4718:481;1531:13:0;:11;:13::i;:::-;4864:8:17::1;4873:9;4864:19;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;:32:::1;;::::0;::::1;;4856:67;;;::::0;-1:-1:-1;;;4856:67:17;;13023:2:20;4856:67:17::1;::::0;::::1;13005:21:20::0;13062:2;13042:18;;;13035:30;-1:-1:-1;;;13081:18:20;;;13074:52;13143:18;;4856:67:17::1;;;;;;;;;4941:13;4955:9;4941:24;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;:35:::1;;::::0;::::1;;4933:67;;;::::0;-1:-1:-1;;;4933:67:17;;13374:2:20;4933:67:17::1;::::0;::::1;13356:21:20::0;13413:2;13393:18;;;13386:30;-1:-1:-1;;;13432:18:20;;;13425:49;13491:18;;4933:67:17::1;13172:343:20::0;4933:67:17::1;5048:7;5019:8;5028:9;5019:19;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;:26:::1;;:36:::0;;-1:-1:-1;;;;5019:36:17::1;-1:-1:-1::0;;;5019:36:17;::::1;::::0;::::1;;;;;;:::i;:::-;;;;;;5108:15;5065:8;5074:9;5065:19;;;;;;:::i;:::-;;;;;;;;;;;;;:40;;:58;;;;5147:45;5173:9;5184:7;5147:45;;;;;;;:::i;:::-;;;;;;;;4718:481:::0;;:::o;7211:366::-;1531:13:0;:11;:13::i;:::-;7296:19:17::1;7318:16:::0;;;:6:::1;:16;::::0;;;;7353:17:::1;::::0;::::1;::::0;::::1;;7352:18;7344:54;;;::::0;-1:-1:-1;;;7344:54:17;;14096:2:20;7344:54:17::1;::::0;::::1;14078:21:20::0;14135:2;14115:18;;;14108:30;14174:25;14154:18;;;14147:53;14217:18;;7344:54:17::1;13894:347:20::0;7344:54:17::1;7417:17;::::0;::::1;:24:::0;;-1:-1:-1;;7417:24:17::1;7437:4;7417:24;::::0;;7451:61;::::1;;;7480:21;7495:5;7480:14;:21::i;:::-;7550:8;7535:35;7560:9;7535:35;;;;14411:14:20::0;14404:22;14386:41;;14374:2;14359:18;;14246:187;7535:35:17::1;;;;;;;;7286:291;7211:366:::0;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1390:53:17:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;1390:53:17;;;;;;;;;;;;;;;-1:-1:-1;1390:53:17;:::o;3814:894::-;4151:10;-1:-1:-1;;;;;4122:39:17;:8;4131:9;4122:19;;;;;;:::i;:::-;;;;;;;;;;;;;;:25;;;-1:-1:-1;;;;;4122:25:17;:39;4114:69;;;;-1:-1:-1;;;4114:69:17;;15025:2:20;4114:69:17;;;15007:21:20;15064:2;15044:18;;;15037:30;-1:-1:-1;;;15083:18:20;;;15076:47;15140:18;;4114:69:17;14823:341:20;4114:69:17;4202:13;4216:9;4202:24;;;;;;:::i;:::-;;;;;;;;;;;;;;:35;;;;;4201:36;4193:72;;;;-1:-1:-1;;;4193:72:17;;15371:2:20;4193:72:17;;;15353:21:20;15410:2;15390:18;;;15383:30;15449:25;15429:18;;;15422:53;15492:18;;4193:72:17;15169:347:20;4193:72:17;4311:324;;;;;;;;4350:10;4311:324;;;;4384:9;4311:324;;;;4417:9;4311:324;;;;4451:10;4311:324;;;;4491:15;4311:324;;;;4537:16;4311:324;;;;4579:15;4311:324;;;;4620:4;4311:324;;;;;4284:13;4298:9;4284:24;;;;;;:::i;:::-;;;;;;;;;;;;;;:351;;:24;;:351;;:24;:351;:::i;:::-;-1:-1:-1;4284:351:17;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4284:351:17;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4284:351:17;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4284:351:17;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4284:351:17;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4284:351:17;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4284:351:17;;;;;;;;;;4659:42;;;;;;4674:9;;4685:15;;4659:42;:::i;:::-;;;;;;;;3814:894;;;;;;;:::o;6446:755::-;6626:7;2500:21:9;:19;:21::i;:::-;6653:19:17::1;::::0;;;:8:::1;:19;::::0;;;;:28:::1;;::::0;::::1;;6645:58;;;::::0;-1:-1:-1;;;6645:58:17;;18223:2:20;6645:58:17::1;::::0;::::1;18205:21:20::0;18262:2;18242:18;;;18235:30;-1:-1:-1;;;18281:18:20;;;18274:47;18338:18;;6645:58:17::1;18021:341:20::0;6645:58:17::1;6721:9;::::0;:35:::1;::::0;-1:-1:-1;;;6721:35:17;;::::1;::::0;::::1;6810:25:20::0;;;6760:10:17::1;::::0;-1:-1:-1;;;;;6721:9:17::1;::::0;:24:::1;::::0;6783:18:20;;6721:35:17::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;6721:49:17::1;;6713:78;;;::::0;-1:-1:-1;;;6713:78:17;;18825:2:20;6713:78:17::1;::::0;::::1;18807:21:20::0;18864:2;18844:18;;;18837:30;-1:-1:-1;;;18883:18:20;;;18876:46;18939:18;;6713:78:17::1;18623:340:20::0;6713:78:17::1;6828:12;:14:::0;;6810:15:::1;::::0;;6828:14:::1;::::0;::::1;:::i;:::-;::::0;;;-1:-1:-1;6870:242:17::1;::::0;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;;::::1;::::0;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6870:242:17;;;;;;;;;;;;6852:15;;;:6:::1;:15:::0;;;;;;;:260;;;;;;6870:242;6852:260;::::1;::::0;;;6810:32;;-1:-1:-1;6870:242:17;6852:260:::1;::::0;::::1;::::0;::::1;::::0;;::::1;:::i;:::-;-1:-1:-1::0;6852:260:17::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;:::i;:::-;-1:-1:-1::0;6852:260:17::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;;::::1;::::0;;::::1;::::0;::::1;;;;-1:-1:-1::0;;6852:260:17;::::1;;::::0;;;;-1:-1:-1;;6852:260:17;;;;;;;::::1;::::0;;7136:34:::1;::::0;7160:9;;7151:7;;7136:34:::1;::::0;6852:260:::1;::::0;7136:34:::1;7187:7:::0;-1:-1:-1;2542:20:9;1857:1;3068:7;:21;2888:208;2542:20;6446:755:17;;;;;;:::o;1342:42::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1342:42:17;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1342:42:17;;;-1:-1:-1;1342:42:17;-1:-1:-1;;;1342:42:17;;;;;-1:-1:-1;;;;1342:42:17;;;;;;;;;:::o;1497:39::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;1497:39:17;;;;;;;;;;;;;;;;;-1:-1:-1;1497:39:17;;;;;;:::o;5205:1231::-;5359:7;2500:21:9;:19;:21::i;:::-;5378:23:17::1;5404:8;5413:9;5404:19;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;5441:20:::1;::::0;::::1;::::0;5404:19;;-1:-1:-1;5441:20:17::1;;5433:55;;;::::0;-1:-1:-1;;;5433:55:17;;13023:2:20;5433:55:17::1;::::0;::::1;13005:21:20::0;13062:2;13042:18;;;13035:30;-1:-1:-1;;;13081:18:20;;;13074:52;13143:18;;5433:55:17::1;12821:346:20::0;5433:55:17::1;5506:13;::::0;::::1;::::0;-1:-1:-1;;;;;5506:13:17::1;5523:10;5506:27;5498:57;;;::::0;-1:-1:-1;;;5498:57:17;;15025:2:20;5498:57:17::1;::::0;::::1;15007:21:20::0;15064:2;15044:18;;;15037:30;-1:-1:-1;;;15083:18:20;;;15076:47;15140:18;;5498:57:17::1;14823:341:20::0;5498:57:17::1;5591:27;5573:14;::::0;::::1;::::0;-1:-1:-1;;;5573:14:17;::::1;;;:45;::::0;::::1;;;;;;:::i;:::-;;5565:78;;;::::0;-1:-1:-1;;;5565:78:17;;19442:2:20;5565:78:17::1;::::0;::::1;19424:21:20::0;19481:2;19461:18;;;19454:30;-1:-1:-1;;;19500:18:20;;;19493:50;19560:18;;5565:78:17::1;19240:344:20::0;5565:78:17::1;5689:12;::::0;::::1;::::0;5674:14:::1;::::0;:28:::1;::::0;-1:-1:-1;;;5689:12:17;::::1;;;5674:28;::::0;::::1;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5661:9;:41;;5653:81;;;::::0;-1:-1:-1;;;5653:81:17;;19791:2:20;5653:81:17::1;::::0;::::1;19773:21:20::0;19830:2;19810:18;;;19803:30;19869:29;19849:18;;;19842:57;19916:18;;5653:81:17::1;19589:351:20::0;5653:81:17::1;5779:14;::::0;5822:12:::1;::::0;;::::1;::::0;5779:56:::1;::::0;-1:-1:-1;;;5779:56:17;;5753:23:::1;::::0;-1:-1:-1;;;;;5779:14:17::1;::::0;:31:::1;::::0;:56:::1;::::0;5811:9;;-1:-1:-1;;;5822:12:17;;::::1;;;::::0;5779:56:::1;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5753:82;;5868:15;5855:9;:28;;5847:69;;;::::0;-1:-1:-1;;;5847:69:17;;20708:2:20;5847:69:17::1;::::0;::::1;20690:21:20::0;20747:2;20727:18;;;20720:30;20786;20766:18;;;20759:58;20834:18;;5847:69:17::1;20506:352:20::0;5847:69:17::1;5948:1;5936:9;:13;5928:42;;;::::0;-1:-1:-1;;;5928:42:17;;21065:2:20;5928:42:17::1;::::0;::::1;21047:21:20::0;21104:2;21084:18;;;21077:30;-1:-1:-1;;;21123:18:20;;;21116:46;21179:18;;5928:42:17::1;20863:340:20::0;5928:42:17::1;6008:9;::::0;6052:12:::1;::::0;;::::1;::::0;6008:85:::1;::::0;-1:-1:-1;;;6008:85:17;;5989:16:::1;::::0;-1:-1:-1;;;;;6008:9:17::1;::::0;:20:::1;::::0;:85:::1;::::0;6029:10:::1;::::0;6041:9;;-1:-1:-1;;;6052:12:17;::::1;;;::::0;6066:15;;6083:9;;6008:85:::1;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5989:104;;6133:201;;;;;;;;6164:9;6133:201;;;;6198:15;6133:201;;;;6254:9;6236:15;:27;;;;:::i;:::-;6133:201:::0;;6287:4:::1;6133:201;::::0;::::1;::::0;6311:12:::1;::::0;::::1;::::0;6133:201;;;;;-1:-1:-1;;;6311:12:17;::::1;;;6133:201;::::0;::::1;;;;;;:::i;:::-;::::0;;6112:18:::1;::::0;;;:8:::1;:18;::::0;;;;;;;;:222;;;;;;::::1;::::0;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;;::::1;;-1:-1:-1::0;;6112:222:17;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;6112:222:17;;;-1:-1:-1;;6112:222:17;;;;;::::1;::::0;;;;::::1;;;;;;:::i;:::-;;;;;;;;;6382:10;-1:-1:-1::0;;;;;6358:46:17::1;6372:8;6358:46;6394:9;6358:46;;;;;;:::i;:::-;;;;;;;;6421:8:::0;-1:-1:-1;;;2542:20:9;1857:1;3068:7;:21;2888:208;2542:20;5205:1231:17;;;;;:::o;2669:1135::-;2957:8;2966:9;2957:19;;;;;;:::i;:::-;;;;;;;;;;;;;;:32;;;;;2956:33;2948:72;;;;-1:-1:-1;;;2948:72:17;;22379:2:20;2948:72:17;;;22361:21:20;22418:2;22398:18;;;22391:30;22457:28;22437:18;;;22430:56;22503:18;;2948:72:17;22177:350:20;2948:72:17;3047:26;3065:8;3047:15;:26;:::i;:::-;:33;;3076:4;3047:33;:::i;:::-;3038:5;:42;;3030:67;;;;-1:-1:-1;;;3030:67:17;;22956:2:20;3030:67:17;;;22938:21:20;22995:2;22975:18;;;22968:30;-1:-1:-1;;;23014:18:20;;;23007:42;23066:18;;3030:67:17;22754:336:20;3030:67:17;3160:14;;3118:36;;-1:-1:-1;;;;;3160:14:17;:28;3202:9;3225:10;3285:5;3249:26;3267:8;3249:15;:26;:::i;:::-;:33;;3278:4;3249:33;:::i;:::-;:41;;;;:::i;:::-;3304:8;3326:10;3350:19;3160:219;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3412:315:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3551:10;3412:315;;;;3117:262;;-1:-1:-1;3412:315:17;;;-1:-1:-1;3412:315:17;;;;3629:4;3412:315;;;;;;;;:::i;:::-;;;3669:15;3412:315;;;;3712:4;3412:315;;;;;3390:19;:8;;:19;;3399:9;;3390:19;:::i;:::-;;;;;;;;;;;;;;:337;;:19;;:337;;:19;:337;:::i;:::-;-1:-1:-1;3390:337:17;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3390:337:17;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3390:337:17;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3390:337:17;;;-1:-1:-1;;;;;;3390:337:17;;;;;;;;;;;-1:-1:-1;;;;;;3390:337:17;;-1:-1:-1;;;3390:337:17;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;3390:337:17;;;;;;;;;-1:-1:-1;;;;3390:337:17;-1:-1:-1;;;3390:337:17;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;3390:337:17;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3390:337:17;;;;;;;;;;3751:46;;;;;;3769:9;;3780:10;;3792:4;;3751:46;:::i;:::-;;;;;;;;2938:866;2669:1135;;;;;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;2081:51:20::0;2054:18;;2672:31:0::1;1911:227:20::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1710:6;;-1:-1:-1;;;;;1710:6:0;735:10:7;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:7;1901:40:0;;;2081:51:20;2054:18;;1901:40:0;1911:227:20;7587:521:17;7660:13;;;;;;;;;7659:14;7651:45;;;;-1:-1:-1;;;7651:45:17;;24854:2:20;7651:45:17;;;24836:21:20;24893:2;24873:18;;;24866:30;-1:-1:-1;;;24912:18:20;;;24905:48;24970:18;;7651:45:17;24652:342:20;7651:45:17;7739:6;:13;;;7714:21;:38;;7706:80;;;;-1:-1:-1;;;7706:80:17;;25201:2:20;7706:80:17;;;25183:21:20;25240:2;25220:18;;;25213:30;25279:31;25259:18;;;25252:59;25328:18;;7706:80:17;24999:353:20;7706:80:17;7841:9;;;7866:15;;;7841:41;;-1:-1:-1;;;7841:41:17;;;;;6810:25:20;;;;7805::17;;-1:-1:-1;;;;;7841:9:17;;:24;;6783:18:20;;7841:41:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7893:13;;;:20;;-1:-1:-1;;7893:20:17;;;;;7970:13;;;;7948:40;;7805:78;;-1:-1:-1;;;;;;;;7948:14:17;;;7970:13;-1:-1:-1;7948:40:17;-1:-1:-1;7948:40:17;7970:13;7948:14;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7932:56;;;8006:4;7998:39;;;;-1:-1:-1;;;7998:39:17;;25769:2:20;7998:39:17;;;25751:21:20;25808:2;25788:18;;;25781:30;-1:-1:-1;;;25827:18:20;;;25820:52;25889:18;;7998:39:17;25567:346:20;7998:39:17;8071:14;;8087:13;;;;8061:40;;6810:25:20;;;8061:40:17;;6798:2:20;6783:18;8061:40:17;6664:177:20;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;2575:307:9:-;1899:1;2702:7;;:18;2698:86;;2743:30;;-1:-1:-1;;;2743:30:9;;;;;;;;;;;2698:86;1899:1;2858:7;:17;2575:307::o;14:127:20:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:719;189:5;242:3;235:4;227:6;223:17;219:27;209:55;;260:1;257;250:12;209:55;296:6;283:20;322:18;359:2;355;352:10;349:36;;;365:18;;:::i;:::-;440:2;434:9;408:2;494:13;;-1:-1:-1;;490:22:20;;;514:2;486:31;482:40;470:53;;;538:18;;;558:22;;;535:46;532:72;;;584:18;;:::i;:::-;624:10;620:2;613:22;659:2;651:6;644:18;705:3;698:4;693:2;685:6;681:15;677:26;674:35;671:55;;;722:1;719;712:12;671:55;786:2;779:4;771:6;767:17;760:4;752:6;748:17;735:54;833:1;826:4;821:2;813:6;809:15;805:26;798:37;853:6;844:15;;;;;;146:719;;;;:::o;870:117::-;961:1;954:5;951:12;941:40;;977:1;974;967:12;992:496;1093:6;1101;1154:2;1142:9;1133:7;1129:23;1125:32;1122:52;;;1170:1;1167;1160:12;1122:52;1210:9;1197:23;1243:18;1235:6;1232:30;1229:50;;;1275:1;1272;1265:12;1229:50;1298;1340:7;1331:6;1320:9;1316:22;1298:50;:::i;:::-;1288:60;;;1398:2;1387:9;1383:18;1370:32;1411:47;1452:5;1411:47;:::i;:::-;1477:5;1467:15;;;992:496;;;;;:::o;1493:160::-;1558:20;;1614:13;;1607:21;1597:32;;1587:60;;1643:1;1640;1633:12;1587:60;1493:160;;;:::o;1658:248::-;1723:6;1731;1784:2;1772:9;1763:7;1759:23;1755:32;1752:52;;;1800:1;1797;1790:12;1752:52;1836:9;1823:23;1813:33;;1865:35;1896:2;1885:9;1881:18;1865:35;:::i;:::-;1855:45;;1658:248;;;;;:::o;2143:322::-;2212:6;2265:2;2253:9;2244:7;2240:23;2236:32;2233:52;;;2281:1;2278;2271:12;2233:52;2321:9;2308:23;2354:18;2346:6;2343:30;2340:50;;;2386:1;2383;2376:12;2340:50;2409;2451:7;2442:6;2431:9;2427:22;2409:50;:::i;2470:250::-;2555:1;2565:113;2579:6;2576:1;2573:13;2565:113;;;2655:11;;;2649:18;2636:11;;;2629:39;2601:2;2594:10;2565:113;;;-1:-1:-1;;2712:1:20;2694:16;;2687:27;2470:250::o;2725:271::-;2767:3;2805:5;2799:12;2832:6;2827:3;2820:19;2848:76;2917:6;2910:4;2905:3;2901:14;2894:4;2887:5;2883:16;2848:76;:::i;:::-;2978:2;2957:15;-1:-1:-1;;2953:29:20;2944:39;;;;2985:4;2940:50;;2725:271;-1:-1:-1;;2725:271:20:o;3001:1213::-;3403:4;3432:3;3462:2;3451:9;3444:21;3488:45;3529:2;3518:9;3514:18;3506:6;3488:45;:::i;:::-;3474:59;;3581:9;3573:6;3569:22;3564:2;3553:9;3549:18;3542:50;3615:33;3641:6;3633;3615:33;:::i;:::-;3601:47;;3696:9;3688:6;3684:22;3679:2;3668:9;3664:18;3657:50;3730:33;3756:6;3748;3730:33;:::i;:::-;3716:47;;3811:9;3803:6;3799:22;3794:2;3783:9;3779:18;3772:50;3845:33;3871:6;3863;3845:33;:::i;:::-;3831:47;;3927:9;3919:6;3915:22;3909:3;3898:9;3894:19;3887:51;3961:33;3987:6;3979;3961:33;:::i;:::-;3947:47;;4043:9;4035:6;4031:22;4025:3;4014:9;4010:19;4003:51;4071:33;4097:6;4089;4071:33;:::i;:::-;4135:3;4120:19;;4113:35;;;;-1:-1:-1;;4192:14:20;;4185:22;4179:3;4164:19;;;4157:51;4063:41;3001:1213;-1:-1:-1;;;;;;3001:1213:20:o;4219:1547::-;4402:6;4410;4418;4426;4434;4442;4450;4503:3;4491:9;4482:7;4478:23;4474:33;4471:53;;;4520:1;4517;4510:12;4471:53;4560:9;4547:23;4589:18;4630:2;4622:6;4619:14;4616:34;;;4646:1;4643;4636:12;4616:34;4669:50;4711:7;4702:6;4691:9;4687:22;4669:50;:::i;:::-;4659:60;;4772:2;4761:9;4757:18;4744:32;4728:48;;4801:2;4791:8;4788:16;4785:36;;;4817:1;4814;4807:12;4785:36;4840:52;4884:7;4873:8;4862:9;4858:24;4840:52;:::i;:::-;4830:62;;4945:2;4934:9;4930:18;4917:32;4901:48;;4974:2;4964:8;4961:16;4958:36;;;4990:1;4987;4980:12;4958:36;5013:52;5057:7;5046:8;5035:9;5031:24;5013:52;:::i;:::-;5003:62;;5118:2;5107:9;5103:18;5090:32;5074:48;;5147:2;5137:8;5134:16;5131:36;;;5163:1;5160;5153:12;5131:36;5186:52;5230:7;5219:8;5208:9;5204:24;5186:52;:::i;:::-;5176:62;;5291:3;5280:9;5276:19;5263:33;5247:49;;5321:2;5311:8;5308:16;5305:36;;;5337:1;5334;5327:12;5305:36;5360:52;5404:7;5393:8;5382:9;5378:24;5360:52;:::i;:::-;5350:62;;5465:3;5454:9;5450:19;5437:33;5421:49;;5495:2;5485:8;5482:16;5479:36;;;5511:1;5508;5501:12;5479:36;5534:52;5578:7;5567:8;5556:9;5552:24;5534:52;:::i;:::-;5524:62;;5639:3;5628:9;5624:19;5611:33;5595:49;;5669:2;5659:8;5656:16;5653:36;;;5685:1;5682;5675:12;5653:36;;5708:52;5752:7;5741:8;5730:9;5726:24;5708:52;:::i;:::-;5698:62;;;4219:1547;;;;;;;;;;:::o;5979:680::-;6085:6;6093;6101;6109;6162:3;6150:9;6141:7;6137:23;6133:33;6130:53;;;6179:1;6176;6169:12;6130:53;6215:9;6202:23;6192:33;;6276:2;6265:9;6261:18;6248:32;6299:18;6340:2;6332:6;6329:14;6326:34;;;6356:1;6353;6346:12;6326:34;6379:50;6421:7;6412:6;6401:9;6397:22;6379:50;:::i;:::-;6369:60;;6482:2;6471:9;6467:18;6454:32;6438:48;;6511:2;6501:8;6498:16;6495:36;;;6527:1;6524;6517:12;6495:36;;6550:52;6594:7;6583:8;6572:9;6568:24;6550:52;:::i;:::-;5979:680;;;;-1:-1:-1;6540:62:20;;6649:2;6634:18;6621:32;;-1:-1:-1;;;5979:680:20:o;6846:127::-;6907:10;6902:3;6898:20;6895:1;6888:31;6938:4;6935:1;6928:15;6962:4;6959:1;6952:15;6978:220;7069:1;7062:5;7059:12;7049:143;;7114:10;7109:3;7105:20;7102:1;7095:31;7149:4;7146:1;7139:15;7177:4;7174:1;7167:15;7203:1189;7613:4;7642:3;7672:2;7661:9;7654:21;7698:45;7739:2;7728:9;7724:18;7716:6;7698:45;:::i;:::-;7684:59;;7791:9;7783:6;7779:22;7774:2;7763:9;7759:18;7752:50;7825:33;7851:6;7843;7825:33;:::i;:::-;7811:47;;7906:9;7898:6;7894:22;7889:2;7878:9;7874:18;7867:50;7934:33;7960:6;7952;7934:33;:::i;:::-;7998:2;7983:18;;7976:34;;;-1:-1:-1;;;;;8047:32:20;;8041:3;8026:19;;8019:61;7926:41;-1:-1:-1;8089:48:20;;-1:-1:-1;8130:6:20;8089:48;:::i;:::-;8174:6;8168:3;8157:9;8153:19;8146:35;8190:48;8231:6;8190:48;:::i;:::-;8275:6;8269:3;8258:9;8254:19;8247:35;8319:6;8313:3;8302:9;8298:19;8291:35;8377:6;8370:14;8363:22;8357:3;8346:9;8342:19;8335:51;7203:1189;;;;;;;;;;;;:::o;8397:180::-;8456:6;8509:2;8497:9;8488:7;8484:23;8480:32;8477:52;;;8525:1;8522;8515:12;8477:52;-1:-1:-1;8548:23:20;;8397:180;-1:-1:-1;8397:180:20:o;8582:763::-;8907:6;8896:9;8889:25;8950:6;8945:2;8934:9;8930:18;8923:34;8993:3;8988:2;8977:9;8973:18;8966:31;8870:4;9020:46;9061:3;9050:9;9046:19;9038:6;9020:46;:::i;:::-;9114:9;9106:6;9102:22;9097:2;9086:9;9082:18;9075:50;9142:33;9168:6;9160;9142:33;:::i;:::-;9206:3;9191:19;;9184:35;;;;-1:-1:-1;;9263:14:20;;9256:22;9250:3;9235:19;;9228:51;9323:14;9316:22;9310:3;9295:19;;;9288:51;9134:41;8582:763;-1:-1:-1;;;;8582:763:20:o;9577:549::-;9849:25;;;9905:2;9890:18;;9883:34;;;9948:2;9933:18;;9926:34;;;10003:14;;9996:22;9991:2;9976:18;;9969:50;9836:3;9821:19;;10028:48;10069:6;10028:48;:::i;:::-;10113:6;10107:3;10096:9;10092:19;10085:35;9577:549;;;;;;;;:::o;10131:458::-;10218:6;10226;10234;10287:2;10275:9;10266:7;10262:23;10258:32;10255:52;;;10303:1;10300;10293:12;10255:52;10343:9;10330:23;10376:18;10368:6;10365:30;10362:50;;;10408:1;10405;10398:12;10362:50;10431;10473:7;10464:6;10453:9;10449:22;10431:50;:::i;:::-;10421:60;10528:2;10513:18;;10500:32;;-1:-1:-1;10579:2:20;10564:18;;;10551:32;;10131:458;-1:-1:-1;;;;10131:458:20:o;10594:156::-;10660:20;;10720:4;10709:16;;10699:27;;10689:55;;10740:1;10737;10730:12;10755:1090;10902:6;10910;10918;10926;10934;10942;10950;10958;11011:3;10999:9;10990:7;10986:23;10982:33;10979:53;;;11028:1;11025;11018:12;10979:53;11068:9;11055:23;11097:18;11138:2;11130:6;11127:14;11124:34;;;11154:1;11151;11144:12;11124:34;11177:50;11219:7;11210:6;11199:9;11195:22;11177:50;:::i;:::-;11167:60;;11280:2;11269:9;11265:18;11252:32;11236:48;;11309:2;11299:8;11296:16;11293:36;;;11325:1;11322;11315:12;11293:36;11348:52;11392:7;11381:8;11370:9;11366:24;11348:52;:::i;:::-;11338:62;;11453:2;11442:9;11438:18;11425:32;11409:48;;11482:2;11472:8;11469:16;11466:36;;;11498:1;11495;11488:12;11466:36;;11521:52;11565:7;11554:8;11543:9;11539:24;11521:52;:::i;:::-;11511:62;;;11620:2;11609:9;11605:18;11592:32;11582:42;;11671:3;11660:9;11656:19;11643:33;11633:43;;11723:3;11712:9;11708:19;11695:33;11685:43;;11747:37;11779:3;11768:9;11764:19;11747:37;:::i;:::-;11737:47;;11803:36;11834:3;11823:9;11819:19;11803:36;:::i;:::-;11793:46;;10755:1090;;;;;;;;;;;:::o;11850:131::-;-1:-1:-1;;;;;11925:31:20;;11915:42;;11905:70;;11971:1;11968;11961:12;11986:247;12045:6;12098:2;12086:9;12077:7;12073:23;12069:32;12066:52;;;12114:1;12111;12104:12;12066:52;12153:9;12140:23;12172:31;12197:5;12172:31;:::i;12238:284::-;12318:6;12371:2;12359:9;12350:7;12346:23;12342:32;12339:52;;;12387:1;12384;12377:12;12339:52;12426:9;12413:23;12445:47;12486:5;12445:47;:::i;12527:289::-;12658:3;12696:6;12690:13;12712:66;12771:6;12766:3;12759:4;12751:6;12747:17;12712:66;:::i;:::-;12794:16;;;;;12527:289;-1:-1:-1;;12527:289:20:o;13520:369::-;13718:2;13707:9;13700:21;13681:4;13738:45;13779:2;13768:9;13764:18;13756:6;13738:45;:::i;:::-;13730:53;;13792:48;13833:6;13792:48;:::i;:::-;13876:6;13871:2;13860:9;13856:18;13849:34;13520:369;;;;;:::o;14438:380::-;14517:1;14513:12;;;;14560;;;14581:61;;14635:4;14627:6;14623:17;14613:27;;14581:61;14688:2;14680:6;14677:14;14657:18;14654:38;14651:161;;14734:10;14729:3;14725:20;14722:1;14715:31;14769:4;14766:1;14759:15;14797:4;14794:1;14787:15;14651:161;;14438:380;;;:::o;15647:545::-;15749:2;15744:3;15741:11;15738:448;;;15785:1;15810:5;15806:2;15799:17;15855:4;15851:2;15841:19;15925:2;15913:10;15909:19;15906:1;15902:27;15896:4;15892:38;15961:4;15949:10;15946:20;15943:47;;;-1:-1:-1;15984:4:20;15943:47;16039:2;16034:3;16030:12;16027:1;16023:20;16017:4;16013:31;16003:41;;16094:82;16112:2;16105:5;16102:13;16094:82;;;16157:17;;;16138:1;16127:13;16094:82;;;16098:3;;;15738:448;15647:545;;;:::o;16368:1352::-;16494:3;16488:10;16521:18;16513:6;16510:30;16507:56;;;16543:18;;:::i;:::-;16572:97;16662:6;16622:38;16654:4;16648:11;16622:38;:::i;:::-;16616:4;16572:97;:::i;:::-;16724:4;;16788:2;16777:14;;16805:1;16800:663;;;;17507:1;17524:6;17521:89;;;-1:-1:-1;17576:19:20;;;17570:26;17521:89;-1:-1:-1;;16325:1:20;16321:11;;;16317:24;16313:29;16303:40;16349:1;16345:11;;;16300:57;17623:81;;16770:944;;16800:663;15594:1;15587:14;;;15631:4;15618:18;;-1:-1:-1;;16836:20:20;;;16954:236;16968:7;16965:1;16962:14;16954:236;;;17057:19;;;17051:26;17036:42;;17149:27;;;;17117:1;17105:14;;;;16984:19;;16954:236;;;16958:3;17218:6;17209:7;17206:19;17203:201;;;17279:19;;;17273:26;-1:-1:-1;;17362:1:20;17358:14;;;17374:3;17354:24;17350:37;17346:42;17331:58;17316:74;;17203:201;-1:-1:-1;;;;;17450:1:20;17434:14;;;17430:22;17417:36;;-1:-1:-1;16368:1352:20:o;17725:291::-;17902:2;17891:9;17884:21;17865:4;17922:45;17963:2;17952:9;17948:18;17940:6;17922:45;:::i;:::-;17914:53;;18003:6;17998:2;17987:9;17983:18;17976:34;17725:291;;;;;:::o;18367:251::-;18437:6;18490:2;18478:9;18469:7;18465:23;18461:32;18458:52;;;18506:1;18503;18496:12;18458:52;18538:9;18532:16;18557:31;18582:5;18557:31;:::i;18968:127::-;19029:10;19024:3;19020:20;19017:1;19010:31;19060:4;19057:1;19050:15;19084:4;19081:1;19074:15;19100:135;19139:3;19160:17;;;19157:43;;19180:18;;:::i;:::-;-1:-1:-1;19227:1:20;19216:13;;19100:135::o;20317:184::-;20387:6;20440:2;20428:9;20419:7;20415:23;20411:32;20408:52;;;20456:1;20453;20446:12;20408:52;-1:-1:-1;20479:16:20;;20317:184;-1:-1:-1;20317:184:20:o;21208:609::-;-1:-1:-1;;;;;21488:32:20;;21470:51;;21508:3;21552:2;21537:18;;21530:31;;;-1:-1:-1;;21578:46:20;;21604:19;;21596:6;21578:46;:::i;:::-;21570:54;;21633:48;21674:6;21633:48;:::i;:::-;21717:6;21712:2;21701:9;21697:18;21690:34;21760:6;21755:2;21744:9;21740:18;21733:34;21804:6;21798:3;21787:9;21783:19;21776:35;21208:609;;;;;;;;:::o;21822:125::-;21887:9;;;21908:10;;;21905:36;;;21921:18;;:::i;:::-;21822:125;;;;:::o;21952:220::-;22101:2;22090:9;22083:21;22064:4;22121:45;22162:2;22151:9;22147:18;22139:6;22121:45;:::i;22532:217::-;22572:1;22598;22588:132;;22642:10;22637:3;22633:20;22630:1;22623:31;22677:4;22674:1;22667:15;22705:4;22702:1;22695:15;22588:132;-1:-1:-1;22734:9:20;;22532:217::o;23095:128::-;23162:9;;;23183:11;;;23180:37;;;23197:18;;:::i;23228:596::-;23507:3;23496:9;23489:22;23470:4;23528:46;23569:3;23558:9;23554:19;23546:6;23528:46;:::i;:::-;23605:2;23590:18;;23583:34;;;;-1:-1:-1;23648:2:20;23633:18;;23626:34;;;;23691:2;23676:18;;23669:34;;;;23752:4;23740:17;23734:3;23719:19;;23712:46;23802:14;23795:22;23789:3;23774:19;;;23767:51;23520:54;23228:596;-1:-1:-1;23228:596:20:o;23829:349::-;23929:6;23937;23990:2;23978:9;23969:7;23965:23;23961:32;23958:52;;;24006:1;24003;23996:12;23958:52;24038:9;24032:16;24057:47;24098:5;24057:47;:::i;:::-;24168:2;24153:18;;;;24147:25;24123:5;;24147:25;;-1:-1:-1;;;23829:349:20:o;24183:464::-;24407:2;24396:9;24389:21;24370:4;24427:45;24468:2;24457:9;24453:18;24445:6;24427:45;:::i;:::-;-1:-1:-1;;;;;24508:32:20;;24503:2;24488:18;;24481:60;24419:53;-1:-1:-1;24550:48:20;24591:6;24550:48;:::i;:::-;24634:6;24629:2;24618:9;24614:18;24607:34;24183:464;;;;;;:::o"},"methodIdentifiers":{"claims(uint256)":"a888c2cd","coverageLimits(uint8)":"fedda0e4","createPolicy(string,uint256,uint256)":"e93b2a34","owner()":"8da5cb5b","policies(uint256)":"d3e89483","policyNFT()":"af02808a","processClaim(uint256,bool)":"35446def","registerVehicle(string,string,string,uint256,uint256,uint256,uint8,bool)":"f21ad98b","renounceOwnership()":"715018a6","riskAssessment()":"70a1a7d5","submitClaim(uint256,string,string,uint256)":"8f749e15","transferOwnership(address)":"f2fde38b","updateVerificationStatus(string,uint8)":"1ca2cf28","uploadVehiclePhotos(string,string,string,string,string,string,string)":"7daaaaf3","vehiclePhotos(string)":"744007fd","vehicles(string)":"976de5c5"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_policyNFTAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_riskAssessmentAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"claimId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ClaimPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"claimId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ClaimProcessed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"claimId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"policyId\",\"type\":\"uint256\"}],\"name\":\"ClaimSubmitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"regPlate\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"uploadDate\",\"type\":\"uint256\"}],\"name\":\"PhotosUploaded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"policyId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"vehicleId\",\"type\":\"string\"}],\"name\":\"PolicyCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"regPlate\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum IVehicleShield.VerificationTier\",\"name\":\"tier\",\"type\":\"uint8\"}],\"name\":\"VehicleRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"regPlate\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"enum InsuranceCore.VerificationStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"name\":\"VerificationStatusUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"claims\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"claimId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"policyId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"photoHash\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isProcessed\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isPaid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IVehicleShield.VerificationTier\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"coverageLimits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_regPlate\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_coverage\",\"type\":\"uint256\"}],\"name\":\"createPolicy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"policies\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"coverage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endDate\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"enum IVehicleShield.VerificationTier\",\"name\":\"tier\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"policyNFT\",\"outputs\":[{\"internalType\":\"contract IPolicyNFT\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_claimId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"processClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_regPlate\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_make\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_model\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_year\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_baseValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_mileage\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"_condition\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"_hasAccidentHistory\",\"type\":\"bool\"}],\"name\":\"registerVehicle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"riskAssessment\",\"outputs\":[{\"internalType\":\"contract IRiskAssessment\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_policyId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_photoHash\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"submitClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_regPlate\",\"type\":\"string\"},{\"internalType\":\"enum InsuranceCore.VerificationStatus\",\"name\":\"_status\",\"type\":\"uint8\"}],\"name\":\"updateVerificationStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_regPlate\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_frontHash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_backHash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_leftHash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_rightHash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_mirrorLeftHash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_mirrorRightHash\",\"type\":\"string\"}],\"name\":\"uploadVehiclePhotos\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"vehiclePhotos\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"frontHash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"backHash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"leftHash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"rightHash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"mirrorLeftHash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"mirrorRightHash\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"uploadDate\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isComplete\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"vehicles\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"regPlate\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"make\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"model\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"year\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"enum InsuranceCore.VerificationStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"enum IVehicleShield.VerificationTier\",\"name\":\"tier\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"lastVerificationDate\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isRegistered\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/InsuranceCore.sol\":\"InsuranceCore\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"contracts/IVehicleShield.sol\":{\"keccak256\":\"0x9797150cb75e8673cf23309964621d0323843e13fd0431f4b4b829f71bac3885\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5f0d54e5945cded1dc87c8f47610d1171f2755f7fb499bda738f9b45a7e3085\",\"dweb:/ipfs/Qmdv2XYtJNedoff4W4yfXRqwqfaExpu6Eb9y4WG57nEtg3\"]},\"contracts/InsuranceCore.sol\":{\"keccak256\":\"0x69d269712afd59ea12cd3f484c19ff75a116961fe4dfc9b0a29755ee14433eea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d2d5cf9a0305bce53d4f2a3c02ebcb509079395bcb7af1f710ecae41bddb400d\",\"dweb:/ipfs/QmbMV83oWp6DsCP7x5vwQHgoZRWuXAg3Z2EbruJVMY1noQ\"]}},\"version\":1}"}},"contracts/PolicyNFT.sol":{"PolicyNFT":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"policyId","type":"uint256"}],"name":"burnPolicy","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"policyId","type":"uint256"}],"name":"getPolicyMetadata","outputs":[{"components":[{"internalType":"string","name":"vehicleId","type":"string"},{"internalType":"uint256","name":"createdAt","type":"uint256"},{"internalType":"enum IVehicleShield.VerificationTier","name":"tier","type":"uint8"},{"internalType":"uint256","name":"premium","type":"uint256"},{"internalType":"uint256","name":"coverage","type":"uint256"}],"internalType":"struct PolicyNFT.PolicyMetadata","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"policyId","type":"uint256"}],"name":"getPolicyOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"string","name":"vehicleId","type":"string"},{"internalType":"enum IVehicleShield.VerificationTier","name":"tier","type":"uint8"},{"internalType":"uint256","name":"premium","type":"uint256"},{"internalType":"uint256","name":"coverage","type":"uint256"}],"name":"mintPolicy","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"insuranceCoreAddress","type":"address"}],"name":"setInsuranceCoreAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_354":{"entryPoint":null,"id":354,"parameterSlots":2,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_7190":{"entryPoint":null,"id":7190,"parameterSlots":0,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":206,"id":146,"parameterSlots":1,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":370,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":453,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":310,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":288,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:2940:20","statements":[{"nodeType":"YulBlock","src":"6:3:20","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:95:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:20","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"70:3:20","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"75:10:20","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"66:3:20"},"nodeType":"YulFunctionCall","src":"66:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:20"},"nodeType":"YulFunctionCall","src":"56:31:20"},"nodeType":"YulExpressionStatement","src":"56:31:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"106:4:20","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"96:6:20"},"nodeType":"YulFunctionCall","src":"96:15:20"},"nodeType":"YulExpressionStatement","src":"96:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"127:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"130:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"120:6:20"},"nodeType":"YulFunctionCall","src":"120:15:20"},"nodeType":"YulExpressionStatement","src":"120:15:20"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14:127:20"},{"body":{"nodeType":"YulBlock","src":"201:325:20","statements":[{"nodeType":"YulAssignment","src":"211:22:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"225:1:20","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"228:4:20"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"221:3:20"},"nodeType":"YulFunctionCall","src":"221:12:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"211:6:20"}]},{"nodeType":"YulVariableDeclaration","src":"242:38:20","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"272:4:20"},{"kind":"number","nodeType":"YulLiteral","src":"278:1:20","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"268:3:20"},"nodeType":"YulFunctionCall","src":"268:12:20"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"246:18:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"319:31:20","statements":[{"nodeType":"YulAssignment","src":"321:27:20","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"335:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"343:4:20","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"331:3:20"},"nodeType":"YulFunctionCall","src":"331:17:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"321:6:20"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"299:18:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"292:6:20"},"nodeType":"YulFunctionCall","src":"292:26:20"},"nodeType":"YulIf","src":"289:61:20"},{"body":{"nodeType":"YulBlock","src":"409:111:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"430:1:20","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"437:3:20","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"442:10:20","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"433:3:20"},"nodeType":"YulFunctionCall","src":"433:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"423:6:20"},"nodeType":"YulFunctionCall","src":"423:31:20"},"nodeType":"YulExpressionStatement","src":"423:31:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"474:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"477:4:20","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"467:6:20"},"nodeType":"YulFunctionCall","src":"467:15:20"},"nodeType":"YulExpressionStatement","src":"467:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"502:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"505:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"495:6:20"},"nodeType":"YulFunctionCall","src":"495:15:20"},"nodeType":"YulExpressionStatement","src":"495:15:20"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"365:18:20"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"388:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"396:2:20","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"385:2:20"},"nodeType":"YulFunctionCall","src":"385:14:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"362:2:20"},"nodeType":"YulFunctionCall","src":"362:38:20"},"nodeType":"YulIf","src":"359:161:20"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"181:4:20","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"190:6:20","type":""}],"src":"146:380:20"},{"body":{"nodeType":"YulBlock","src":"587:65:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"604:1:20","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"607:3:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"597:6:20"},"nodeType":"YulFunctionCall","src":"597:14:20"},"nodeType":"YulExpressionStatement","src":"597:14:20"},{"nodeType":"YulAssignment","src":"620:26:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"638:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"641:4:20","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"628:9:20"},"nodeType":"YulFunctionCall","src":"628:18:20"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"620:4:20"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"570:3:20","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"578:4:20","type":""}],"src":"531:121:20"},{"body":{"nodeType":"YulBlock","src":"738:464:20","statements":[{"body":{"nodeType":"YulBlock","src":"771:425:20","statements":[{"nodeType":"YulVariableDeclaration","src":"785:11:20","value":{"kind":"number","nodeType":"YulLiteral","src":"795:1:20","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"789:2:20","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"816:2:20"},{"name":"array","nodeType":"YulIdentifier","src":"820:5:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"809:6:20"},"nodeType":"YulFunctionCall","src":"809:17:20"},"nodeType":"YulExpressionStatement","src":"809:17:20"},{"nodeType":"YulVariableDeclaration","src":"839:31:20","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"861:2:20"},{"kind":"number","nodeType":"YulLiteral","src":"865:4:20","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"851:9:20"},"nodeType":"YulFunctionCall","src":"851:19:20"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"843:4:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"883:57:20","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"906:4:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"916:1:20","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"923:10:20"},{"kind":"number","nodeType":"YulLiteral","src":"935:2:20","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"919:3:20"},"nodeType":"YulFunctionCall","src":"919:19:20"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"912:3:20"},"nodeType":"YulFunctionCall","src":"912:27:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"902:3:20"},"nodeType":"YulFunctionCall","src":"902:38:20"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"887:11:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"977:23:20","statements":[{"nodeType":"YulAssignment","src":"979:19:20","value":{"name":"data","nodeType":"YulIdentifier","src":"994:4:20"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"979:11:20"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"959:10:20"},{"kind":"number","nodeType":"YulLiteral","src":"971:4:20","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"956:2:20"},"nodeType":"YulFunctionCall","src":"956:20:20"},"nodeType":"YulIf","src":"953:47:20"},{"nodeType":"YulVariableDeclaration","src":"1013:41:20","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1027:4:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1037:1:20","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"1044:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"1049:2:20","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1040:3:20"},"nodeType":"YulFunctionCall","src":"1040:12:20"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1033:3:20"},"nodeType":"YulFunctionCall","src":"1033:20:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1023:3:20"},"nodeType":"YulFunctionCall","src":"1023:31:20"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"1017:2:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1067:24:20","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"1080:11:20"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"1071:5:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"1165:21:20","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1174:5:20"},{"name":"_1","nodeType":"YulIdentifier","src":"1181:2:20"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"1167:6:20"},"nodeType":"YulFunctionCall","src":"1167:17:20"},"nodeType":"YulExpressionStatement","src":"1167:17:20"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1115:5:20"},{"name":"_2","nodeType":"YulIdentifier","src":"1122:2:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1112:2:20"},"nodeType":"YulFunctionCall","src":"1112:13:20"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1126:26:20","statements":[{"nodeType":"YulAssignment","src":"1128:22:20","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1141:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"1148:1:20","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1137:3:20"},"nodeType":"YulFunctionCall","src":"1137:13:20"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"1128:5:20"}]}]},"pre":{"nodeType":"YulBlock","src":"1108:3:20","statements":[]},"src":"1104:82:20"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"754:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"759:2:20","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"751:2:20"},"nodeType":"YulFunctionCall","src":"751:11:20"},"nodeType":"YulIf","src":"748:448:20"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"710:5:20","type":""},{"name":"len","nodeType":"YulTypedName","src":"717:3:20","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"722:10:20","type":""}],"src":"657:545:20"},{"body":{"nodeType":"YulBlock","src":"1292:81:20","statements":[{"nodeType":"YulAssignment","src":"1302:65:20","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1317:4:20"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1335:1:20","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"1338:3:20"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1331:3:20"},"nodeType":"YulFunctionCall","src":"1331:11:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1348:1:20","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1344:3:20"},"nodeType":"YulFunctionCall","src":"1344:6:20"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1327:3:20"},"nodeType":"YulFunctionCall","src":"1327:24:20"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1323:3:20"},"nodeType":"YulFunctionCall","src":"1323:29:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1313:3:20"},"nodeType":"YulFunctionCall","src":"1313:40:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1359:1:20","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"1362:3:20"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1355:3:20"},"nodeType":"YulFunctionCall","src":"1355:11:20"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1310:2:20"},"nodeType":"YulFunctionCall","src":"1310:57:20"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"1302:4:20"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1269:4:20","type":""},{"name":"len","nodeType":"YulTypedName","src":"1275:3:20","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"1283:4:20","type":""}],"src":"1207:166:20"},{"body":{"nodeType":"YulBlock","src":"1474:1256:20","statements":[{"nodeType":"YulVariableDeclaration","src":"1484:24:20","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1504:3:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1498:5:20"},"nodeType":"YulFunctionCall","src":"1498:10:20"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"1488:6:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"1551:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1553:16:20"},"nodeType":"YulFunctionCall","src":"1553:18:20"},"nodeType":"YulExpressionStatement","src":"1553:18:20"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"1523:6:20"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1539:2:20","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1543:1:20","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1535:3:20"},"nodeType":"YulFunctionCall","src":"1535:10:20"},{"kind":"number","nodeType":"YulLiteral","src":"1547:1:20","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1531:3:20"},"nodeType":"YulFunctionCall","src":"1531:18:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1520:2:20"},"nodeType":"YulFunctionCall","src":"1520:30:20"},"nodeType":"YulIf","src":"1517:56:20"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"1626:4:20"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"1664:4:20"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"1658:5:20"},"nodeType":"YulFunctionCall","src":"1658:11:20"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"1632:25:20"},"nodeType":"YulFunctionCall","src":"1632:38:20"},{"name":"newLen","nodeType":"YulIdentifier","src":"1672:6:20"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"1582:43:20"},"nodeType":"YulFunctionCall","src":"1582:97:20"},"nodeType":"YulExpressionStatement","src":"1582:97:20"},{"nodeType":"YulVariableDeclaration","src":"1688:18:20","value":{"kind":"number","nodeType":"YulLiteral","src":"1705:1:20","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"1692:9:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1715:23:20","value":{"kind":"number","nodeType":"YulLiteral","src":"1734:4:20","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"1719:11:20","type":""}]},{"nodeType":"YulAssignment","src":"1747:24:20","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"1760:11:20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"1747:9:20"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"1817:656:20","statements":[{"nodeType":"YulVariableDeclaration","src":"1831:35:20","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"1850:6:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1862:2:20","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1858:3:20"},"nodeType":"YulFunctionCall","src":"1858:7:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1846:3:20"},"nodeType":"YulFunctionCall","src":"1846:20:20"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"1835:7:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1879:49:20","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"1923:4:20"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"1893:29:20"},"nodeType":"YulFunctionCall","src":"1893:35:20"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"1883:6:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1941:10:20","value":{"kind":"number","nodeType":"YulLiteral","src":"1950:1:20","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1945:1:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"2028:172:20","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2053:6:20"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2071:3:20"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2076:9:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2067:3:20"},"nodeType":"YulFunctionCall","src":"2067:19:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2061:5:20"},"nodeType":"YulFunctionCall","src":"2061:26:20"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2046:6:20"},"nodeType":"YulFunctionCall","src":"2046:42:20"},"nodeType":"YulExpressionStatement","src":"2046:42:20"},{"nodeType":"YulAssignment","src":"2105:24:20","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2119:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"2127:1:20","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2115:3:20"},"nodeType":"YulFunctionCall","src":"2115:14:20"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2105:6:20"}]},{"nodeType":"YulAssignment","src":"2146:40:20","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"2163:9:20"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"2174:11:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2159:3:20"},"nodeType":"YulFunctionCall","src":"2159:27:20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"2146:9:20"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1975:1:20"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"1978:7:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1972:2:20"},"nodeType":"YulFunctionCall","src":"1972:14:20"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1987:28:20","statements":[{"nodeType":"YulAssignment","src":"1989:24:20","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1998:1:20"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"2001:11:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1994:3:20"},"nodeType":"YulFunctionCall","src":"1994:19:20"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1989:1:20"}]}]},"pre":{"nodeType":"YulBlock","src":"1968:3:20","statements":[]},"src":"1964:236:20"},{"body":{"nodeType":"YulBlock","src":"2248:166:20","statements":[{"nodeType":"YulVariableDeclaration","src":"2266:43:20","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2293:3:20"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2298:9:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2289:3:20"},"nodeType":"YulFunctionCall","src":"2289:19:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2283:5:20"},"nodeType":"YulFunctionCall","src":"2283:26:20"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"2270:9:20","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2333:6:20"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"2345:9:20"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2372:1:20","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"2375:6:20"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2368:3:20"},"nodeType":"YulFunctionCall","src":"2368:14:20"},{"kind":"number","nodeType":"YulLiteral","src":"2384:3:20","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2364:3:20"},"nodeType":"YulFunctionCall","src":"2364:24:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2394:1:20","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2390:3:20"},"nodeType":"YulFunctionCall","src":"2390:6:20"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2360:3:20"},"nodeType":"YulFunctionCall","src":"2360:37:20"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2356:3:20"},"nodeType":"YulFunctionCall","src":"2356:42:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2341:3:20"},"nodeType":"YulFunctionCall","src":"2341:58:20"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2326:6:20"},"nodeType":"YulFunctionCall","src":"2326:74:20"},"nodeType":"YulExpressionStatement","src":"2326:74:20"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"2219:7:20"},{"name":"newLen","nodeType":"YulIdentifier","src":"2228:6:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2216:2:20"},"nodeType":"YulFunctionCall","src":"2216:19:20"},"nodeType":"YulIf","src":"2213:201:20"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2434:4:20"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2448:1:20","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"2451:6:20"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2444:3:20"},"nodeType":"YulFunctionCall","src":"2444:14:20"},{"kind":"number","nodeType":"YulLiteral","src":"2460:1:20","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2440:3:20"},"nodeType":"YulFunctionCall","src":"2440:22:20"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2427:6:20"},"nodeType":"YulFunctionCall","src":"2427:36:20"},"nodeType":"YulExpressionStatement","src":"2427:36:20"}]},"nodeType":"YulCase","src":"1810:663:20","value":{"kind":"number","nodeType":"YulLiteral","src":"1815:1:20","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"2490:234:20","statements":[{"nodeType":"YulVariableDeclaration","src":"2504:14:20","value":{"kind":"number","nodeType":"YulLiteral","src":"2517:1:20","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2508:5:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"2553:67:20","statements":[{"nodeType":"YulAssignment","src":"2571:35:20","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2590:3:20"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2595:9:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2586:3:20"},"nodeType":"YulFunctionCall","src":"2586:19:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2580:5:20"},"nodeType":"YulFunctionCall","src":"2580:26:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2571:5:20"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"2534:6:20"},"nodeType":"YulIf","src":"2531:89:20"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2640:4:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2699:5:20"},{"name":"newLen","nodeType":"YulIdentifier","src":"2706:6:20"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"2646:52:20"},"nodeType":"YulFunctionCall","src":"2646:67:20"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2633:6:20"},"nodeType":"YulFunctionCall","src":"2633:81:20"},"nodeType":"YulExpressionStatement","src":"2633:81:20"}]},"nodeType":"YulCase","src":"2482:242:20","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"1790:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"1798:2:20","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1787:2:20"},"nodeType":"YulFunctionCall","src":"1787:14:20"},"nodeType":"YulSwitch","src":"1780:944:20"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"1459:4:20","type":""},{"name":"src","nodeType":"YulTypedName","src":"1465:3:20","type":""}],"src":"1378:1352:20"},{"body":{"nodeType":"YulBlock","src":"2836:102:20","statements":[{"nodeType":"YulAssignment","src":"2846:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2858:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"2869:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2854:3:20"},"nodeType":"YulFunctionCall","src":"2854:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2846:4:20"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2888:9:20"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2903:6:20"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2919:3:20","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2924:1:20","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2915:3:20"},"nodeType":"YulFunctionCall","src":"2915:11:20"},{"kind":"number","nodeType":"YulLiteral","src":"2928:1:20","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2911:3:20"},"nodeType":"YulFunctionCall","src":"2911:19:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2899:3:20"},"nodeType":"YulFunctionCall","src":"2899:32:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2881:6:20"},"nodeType":"YulFunctionCall","src":"2881:51:20"},"nodeType":"YulExpressionStatement","src":"2881:51:20"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2805:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2816:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2827:4:20","type":""}],"src":"2735:203:20"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}","id":20,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x8 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x56656869636C65536869656C6420506F6C696379000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x56535 PUSH1 0xEC SHL DUP2 MSTORE POP DUP2 PUSH1 0x0 SWAP1 DUP2 PUSH3 0x7B SWAP2 SWAP1 PUSH3 0x1C5 JUMP JUMPDEST POP PUSH1 0x1 PUSH3 0x8A DUP3 DUP3 PUSH3 0x1C5 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0xBC JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xC7 DUP2 PUSH3 0xCE JUMP JUMPDEST POP PUSH3 0x291 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x14B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x16C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x1C0 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x19B JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x1BC JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1A7 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x1E1 JUMPI PUSH3 0x1E1 PUSH3 0x120 JUMP JUMPDEST PUSH3 0x1F9 DUP2 PUSH3 0x1F2 DUP5 SLOAD PUSH3 0x136 JUMP JUMPDEST DUP5 PUSH3 0x172 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x231 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x218 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x1BC JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x262 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x241 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x281 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1763 DUP1 PUSH3 0x2A1 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x137 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0xCA009021 EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x2C6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0xF457A0FE EQ PUSH2 0x2EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0x8CF7A293 EQ PUSH2 0x241 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x27A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x239036C0 GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x239036C0 EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x226 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x179 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0x21A9BFE8 EQ PUSH2 0x1B9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14F PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0x118A JUMP JUMPDEST PUSH2 0x2FF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH2 0x351 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15B SWAP2 SWAP1 PUSH2 0x11F7 JUMP JUMPDEST PUSH2 0x18C PUSH2 0x187 CALLDATASIZE PUSH1 0x4 PUSH2 0x120A JUMP JUMPDEST PUSH2 0x3E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x15B JUMP JUMPDEST PUSH2 0x1B7 PUSH2 0x1B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x123F JUMP JUMPDEST PUSH2 0x40C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CC PUSH2 0x1C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x12F5 JUMP JUMPDEST PUSH2 0x41B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x15B JUMP JUMPDEST PUSH2 0x1B7 PUSH2 0x1E8 CALLDATASIZE PUSH1 0x4 PUSH2 0x137F JUMP JUMPDEST PUSH2 0x54C JUMP JUMPDEST PUSH2 0x1B7 PUSH2 0x1FB CALLDATASIZE PUSH1 0x4 PUSH2 0x139A JUMP JUMPDEST PUSH2 0x576 JUMP JUMPDEST PUSH2 0x1B7 PUSH2 0x20E CALLDATASIZE PUSH1 0x4 PUSH2 0x139A JUMP JUMPDEST PUSH2 0x601 JUMP JUMPDEST PUSH2 0x18C PUSH2 0x221 CALLDATASIZE PUSH1 0x4 PUSH2 0x120A JUMP JUMPDEST PUSH2 0x621 JUMP JUMPDEST PUSH2 0x1CC PUSH2 0x234 CALLDATASIZE PUSH1 0x4 PUSH2 0x137F JUMP JUMPDEST PUSH2 0x62C JUMP JUMPDEST PUSH2 0x1B7 PUSH2 0x674 JUMP JUMPDEST PUSH2 0x254 PUSH2 0x24F CALLDATASIZE PUSH1 0x4 PUSH2 0x120A JUMP JUMPDEST PUSH2 0x688 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15B SWAP2 SWAP1 PUSH2 0x13EC JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x18C JUMP JUMPDEST PUSH2 0x16C PUSH2 0x791 JUMP JUMPDEST PUSH2 0x1B7 PUSH2 0x288 CALLDATASIZE PUSH1 0x4 PUSH2 0x145C JUMP JUMPDEST PUSH2 0x7A0 JUMP JUMPDEST PUSH2 0x1B7 PUSH2 0x29B CALLDATASIZE PUSH1 0x4 PUSH2 0x1498 JUMP JUMPDEST PUSH2 0x7AB JUMP JUMPDEST PUSH2 0x16C PUSH2 0x2AE CALLDATASIZE PUSH1 0x4 PUSH2 0x120A JUMP JUMPDEST PUSH2 0x7C3 JUMP JUMPDEST PUSH2 0x18C PUSH2 0x2C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x120A JUMP JUMPDEST PUSH2 0x838 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x2D4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1514 JUMP JUMPDEST PUSH2 0x843 JUMP JUMPDEST PUSH2 0x1B7 PUSH2 0x2E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x137F JUMP JUMPDEST PUSH2 0x871 JUMP JUMPDEST PUSH2 0x1B7 PUSH2 0x2FA CALLDATASIZE PUSH1 0x4 PUSH2 0x120A JUMP JUMPDEST PUSH2 0x8AF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x330 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x34B JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x360 SWAP1 PUSH2 0x1547 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x38C SWAP1 PUSH2 0x1547 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3D9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3AE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3D9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3BC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EE DUP3 PUSH2 0x951 JUMP JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x34B JUMP JUMPDEST PUSH2 0x417 DUP3 DUP3 CALLER PUSH2 0x98A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x47D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206973206E6F7420496E737572616E6365436F72650000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x0 SWAP2 DUP3 PUSH2 0x48E DUP4 PUSH2 0x1581 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x4BD JUMPI PUSH2 0x4BD PUSH2 0x13D6 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP8 SWAP1 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD DUP7 SWAP1 MSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE KECCAK256 DUP2 MLOAD DUP2 SWAP1 PUSH2 0x4E8 SWAP1 DUP3 PUSH2 0x15EE JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x51D JUMPI PUSH2 0x51D PUSH2 0x13D6 JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0x80 SWAP1 SWAP2 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD SSTORE PUSH2 0x542 DUP8 DUP3 PUSH2 0x997 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x554 PUSH2 0x9B1 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5A0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x474 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5AD DUP4 DUP4 CALLER PUSH2 0x9DE JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x5FB JUMPI PUSH1 0x40 MLOAD PUSH4 0x64283D7B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x474 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x61C DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x7AB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34B DUP3 PUSH2 0x951 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x658 JUMPI PUSH1 0x40 MLOAD PUSH4 0x22718AD9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x474 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x67C PUSH2 0x9B1 JUMP JUMPDEST PUSH2 0x686 PUSH1 0x0 PUSH2 0xAD7 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x690 PUSH2 0x10E6 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP2 MLOAD PUSH1 0xA0 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP3 SWAP1 DUP3 SWAP1 PUSH2 0x6B8 SWAP1 PUSH2 0x1547 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6E4 SWAP1 PUSH2 0x1547 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x731 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x706 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x731 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x714 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2 DUP1 DUP4 ADD SLOAD PUSH1 0x40 SWAP1 SWAP3 ADD SWAP2 PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0x762 JUMPI PUSH2 0x762 PUSH2 0x13D6 JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x773 JUMPI PUSH2 0x773 PUSH2 0x13D6 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x4 SWAP1 SWAP2 ADD SLOAD PUSH1 0x40 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x360 SWAP1 PUSH2 0x1547 JUMP JUMPDEST PUSH2 0x417 CALLER DUP4 DUP4 PUSH2 0xB29 JUMP JUMPDEST PUSH2 0x7B6 DUP5 DUP5 DUP5 PUSH2 0x576 JUMP JUMPDEST PUSH2 0x5FB CALLER DUP6 DUP6 DUP6 DUP6 PUSH2 0xBC8 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x7CE DUP3 PUSH2 0x951 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x7E6 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x806 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x831 JUMP JUMPDEST DUP1 PUSH2 0x810 DUP5 PUSH2 0xCF3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x821 SWAP3 SWAP2 SWAP1 PUSH2 0x16AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34B DUP3 PUSH2 0x621 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x879 PUSH2 0x9B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x8A3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x474 JUMP JUMPDEST PUSH2 0x8AC DUP2 PUSH2 0xAD7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x909 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206973206E6F7420496E737572616E6365436F72650000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x474 JUMP JUMPDEST PUSH2 0x912 DUP2 PUSH2 0xD86 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x92B DUP3 DUP3 PUSH2 0x1126 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x1 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x3 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x4 SWAP1 SWAP2 ADD SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x34B JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x474 JUMP JUMPDEST PUSH2 0x61C DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xDC1 JUMP JUMPDEST PUSH2 0x417 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xEC7 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x686 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x474 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND ISZERO PUSH2 0xA0B JUMPI PUSH2 0xA0B DUP2 DUP5 DUP7 PUSH2 0xEDF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xA49 JUMPI PUSH2 0xA28 PUSH1 0x0 DUP6 PUSH1 0x0 DUP1 PUSH2 0xDC1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH2 0xA78 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP8 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB5B JUMPI PUSH1 0x40 MLOAD PUSH4 0xB611743 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x474 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0xCEC JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xC0A SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x16DD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xC45 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xC42 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1710 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xCAE JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xC73 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xC78 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xCA6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x474 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ PUSH2 0xCEA JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x474 JUMP JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xD00 DUP4 PUSH2 0xF43 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD20 JUMPI PUSH2 0xD20 PUSH2 0x1269 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xD4A JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0xD54 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD95 PUSH1 0x0 DUP4 PUSH1 0x0 PUSH2 0x9DE JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x417 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x474 JUMP JUMPDEST DUP1 DUP1 PUSH2 0xDD5 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0xE97 JUMPI PUSH1 0x0 PUSH2 0xDE5 DUP5 PUSH2 0x951 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xE11 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xE24 JUMPI POP PUSH2 0xE22 DUP2 DUP5 PUSH2 0x843 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xE4D JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9FBF51F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x474 JUMP JUMPDEST DUP2 ISZERO PUSH2 0xE95 JUMPI DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xED1 DUP4 DUP4 PUSH2 0x101B JUMP JUMPDEST PUSH2 0x61C CALLER PUSH1 0x0 DUP6 DUP6 DUP6 PUSH2 0xBC8 JUMP JUMPDEST PUSH2 0xEEA DUP4 DUP4 DUP4 PUSH2 0x1080 JUMP JUMPDEST PUSH2 0x61C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xF18 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x474 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x177E802F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x474 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0xF82 JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0xFAE JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0xFCC JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0xFE4 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0xFF8 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x100A JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x34B JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1045 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x474 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1053 DUP4 DUP4 PUSH1 0x0 PUSH2 0x9DE JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x61C JUMPI PUSH1 0x40 MLOAD PUSH4 0x39E35637 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x474 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x10DE JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x10BA JUMPI POP PUSH2 0x10BA DUP5 DUP5 PUSH2 0x843 JUMP JUMPDEST DUP1 PUSH2 0x10DE JUMPI POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1112 JUMPI PUSH2 0x1112 PUSH2 0x13D6 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x1132 SWAP1 PUSH2 0x1547 JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x1142 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x8AC SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1170 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x115C JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x8AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x119C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x831 DUP2 PUSH2 0x1174 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x11C2 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x11AA JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x11E3 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x11A7 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x831 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x11CB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x121C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x123A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1252 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x125B DUP4 PUSH2 0x1223 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x129A JUMPI PUSH2 0x129A PUSH2 0x1269 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x12C2 JUMPI PUSH2 0x12C2 PUSH2 0x1269 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x12DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x130D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1316 DUP7 PUSH2 0x1223 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1332 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 ADD PUSH1 0x1F DUP2 ADD DUP9 SGT PUSH2 0x1343 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1352 DUP9 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x127F JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH1 0x3 DUP2 LT PUSH2 0x1367 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 SWAP8 SWAP4 SWAP7 POP SWAP4 SWAP5 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1391 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x831 DUP3 PUSH2 0x1223 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x13AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13B8 DUP5 PUSH2 0x1223 JUMP JUMPDEST SWAP3 POP PUSH2 0x13C6 PUSH1 0x20 DUP6 ADD PUSH2 0x1223 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH1 0xA0 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1408 PUSH1 0xC0 DUP5 ADD DUP3 PUSH2 0x11CB JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x3 DUP2 LT PUSH2 0x1437 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 PUSH1 0x60 DUP6 ADD MSTORE POP PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x80 DUP5 ADD MLOAD PUSH1 0xA0 DUP5 ADD MSTORE DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x146F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1478 DUP4 PUSH2 0x1223 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x148D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x14AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14B7 DUP6 PUSH2 0x1223 JUMP JUMPDEST SWAP4 POP PUSH2 0x14C5 PUSH1 0x20 DUP7 ADD PUSH2 0x1223 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x14F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1508 DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x127F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1527 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1530 DUP4 PUSH2 0x1223 JUMP JUMPDEST SWAP2 POP PUSH2 0x153E PUSH1 0x20 DUP5 ADD PUSH2 0x1223 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x155B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x157B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x15A1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x61C JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x15CF JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xCEA JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x15DB JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1608 JUMPI PUSH2 0x1608 PUSH2 0x1269 JUMP JUMPDEST PUSH2 0x161C DUP2 PUSH2 0x1616 DUP5 SLOAD PUSH2 0x1547 JUMP JUMPDEST DUP5 PUSH2 0x15A8 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1651 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1639 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0xCEA JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1680 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x1661 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x169E JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x16C0 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x11A7 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x16D4 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x11A7 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x542 SWAP1 DUP4 ADD DUP5 PUSH2 0x11CB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1722 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x831 DUP2 PUSH2 0x1174 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG4 0xE6 0xED 0xF EQ NOT 0xCD LOG1 DUP2 PUSH24 0xE0686FAD6AB064FB2F49833ADC556B4E199319E7FD896473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"200:1683:18:-:0;;;535:1;503:33;;590:74;;;;;;;;;;650:10;1380:113:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1380:113:2;;;1454:5;1446;:13;;;;;;:::i;:::-;-1:-1:-1;1469:7:2;:17;1479:7;1469;:17;:::i;:::-;-1:-1:-1;;;;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;2881:51:20;2854:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;1225:187;200:1683:18;;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;14:127:20:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:20;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:20;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:20;;;2580:26;2531:89;-1:-1:-1;;1335:1:20;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:20;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:20;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:20;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:20:o;2735:203::-;200:1683:18;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_approve_1108":{"entryPoint":2442,"id":1108,"parameterSlots":3,"returnSlots":0},"@_approve_1174":{"entryPoint":3521,"id":1174,"parameterSlots":4,"returnSlots":0},"@_baseURI_489":{"entryPoint":null,"id":489,"parameterSlots":0,"returnSlots":1},"@_burn_982":{"entryPoint":3462,"id":982,"parameterSlots":1,"returnSlots":0},"@_checkAuthorized_748":{"entryPoint":3807,"id":748,"parameterSlots":3,"returnSlots":0},"@_checkOwner_84":{"entryPoint":2481,"id":84,"parameterSlots":0,"returnSlots":0},"@_getApproved_675":{"entryPoint":null,"id":675,"parameterSlots":1,"returnSlots":1},"@_isAuthorized_711":{"entryPoint":4224,"id":711,"parameterSlots":3,"returnSlots":1},"@_mint_904":{"entryPoint":4123,"id":904,"parameterSlots":2,"returnSlots":0},"@_msgSender_1493":{"entryPoint":null,"id":1493,"parameterSlots":0,"returnSlots":1},"@_ownerOf_662":{"entryPoint":null,"id":662,"parameterSlots":1,"returnSlots":1},"@_requireOwned_1240":{"entryPoint":2385,"id":1240,"parameterSlots":1,"returnSlots":1},"@_safeMint_919":{"entryPoint":2455,"id":919,"parameterSlots":2,"returnSlots":0},"@_safeMint_949":{"entryPoint":3783,"id":949,"parameterSlots":3,"returnSlots":0},"@_setApprovalForAll_1211":{"entryPoint":2857,"id":1211,"parameterSlots":3,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":2775,"id":146,"parameterSlots":1,"returnSlots":0},"@_update_854":{"entryPoint":2526,"id":854,"parameterSlots":3,"returnSlots":1},"@approve_505":{"entryPoint":1036,"id":505,"parameterSlots":2,"returnSlots":0},"@balanceOf_413":{"entryPoint":1580,"id":413,"parameterSlots":1,"returnSlots":1},"@burnPolicy_7300":{"entryPoint":2223,"id":7300,"parameterSlots":1,"returnSlots":0},"@checkOnERC721Received_1480":{"entryPoint":3016,"id":1480,"parameterSlots":5,"returnSlots":0},"@getApproved_522":{"entryPoint":995,"id":522,"parameterSlots":1,"returnSlots":1},"@getPolicyMetadata_7283":{"entryPoint":1672,"id":7283,"parameterSlots":1,"returnSlots":1},"@getPolicyOwner_7270":{"entryPoint":2104,"id":7270,"parameterSlots":1,"returnSlots":1},"@isApprovedForAll_555":{"entryPoint":2115,"id":555,"parameterSlots":2,"returnSlots":1},"@log10_4246":{"entryPoint":3907,"id":4246,"parameterSlots":1,"returnSlots":1},"@mintPolicy_7258":{"entryPoint":1051,"id":7258,"parameterSlots":5,"returnSlots":1},"@name_435":{"entryPoint":849,"id":435,"parameterSlots":0,"returnSlots":1},"@ownerOf_426":{"entryPoint":1569,"id":426,"parameterSlots":1,"returnSlots":1},"@owner_67":{"entryPoint":null,"id":67,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":1652,"id":98,"parameterSlots":0,"returnSlots":0},"@safeTransferFrom_619":{"entryPoint":1537,"id":619,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_649":{"entryPoint":1963,"id":649,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_538":{"entryPoint":1952,"id":538,"parameterSlots":2,"returnSlots":0},"@setInsuranceCoreAddress_7214":{"entryPoint":1356,"id":7214,"parameterSlots":1,"returnSlots":0},"@supportsInterface_2855":{"entryPoint":null,"id":2855,"parameterSlots":1,"returnSlots":1},"@supportsInterface_385":{"entryPoint":767,"id":385,"parameterSlots":1,"returnSlots":1},"@symbol_444":{"entryPoint":1937,"id":444,"parameterSlots":0,"returnSlots":1},"@toString_1710":{"entryPoint":3315,"id":1710,"parameterSlots":1,"returnSlots":1},"@tokenURI_480":{"entryPoint":1987,"id":480,"parameterSlots":1,"returnSlots":1},"@transferFrom_601":{"entryPoint":1398,"id":601,"parameterSlots":3,"returnSlots":0},"@transferOwnership_126":{"entryPoint":2161,"id":126,"parameterSlots":1,"returnSlots":0},"abi_decode_address":{"entryPoint":4643,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_available_length_string":{"entryPoint":4735,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":4991,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":5396,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":5018,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":5272,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":5212,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_string_memory_ptrt_enum$_VerificationTier_$6389t_uint256t_uint256":{"entryPoint":4853,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":4671,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":4490,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":5904,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":4618,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":4555,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":5806,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":5853,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4599,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0588848746f24b7ecbd0725ab3d6ece869f8091407a74cd56eca3bc5c7d9b270__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_PolicyMetadata_$7168_memory_ptr__to_t_struct$_PolicyMetadata_$7168_memory_ptr__fromStack_reversed":{"entryPoint":5100,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":5544,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":5614,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":4519,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":5447,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"increment_t_uint256":{"entryPoint":5505,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x12":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":5078,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":4713,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_bytes4":{"entryPoint":4468,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:11960:20","statements":[{"nodeType":"YulBlock","src":"6:3:20","statements":[]},{"body":{"nodeType":"YulBlock","src":"58:87:20","statements":[{"body":{"nodeType":"YulBlock","src":"123:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"132:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"135:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"125:6:20"},"nodeType":"YulFunctionCall","src":"125:12:20"},"nodeType":"YulExpressionStatement","src":"125:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"81:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"92:5:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:3:20","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"108:10:20","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"99:3:20"},"nodeType":"YulFunctionCall","src":"99:20:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"88:3:20"},"nodeType":"YulFunctionCall","src":"88:32:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"78:2:20"},"nodeType":"YulFunctionCall","src":"78:43:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"71:6:20"},"nodeType":"YulFunctionCall","src":"71:51:20"},"nodeType":"YulIf","src":"68:71:20"}]},"name":"validator_revert_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"47:5:20","type":""}],"src":"14:131:20"},{"body":{"nodeType":"YulBlock","src":"219:176:20","statements":[{"body":{"nodeType":"YulBlock","src":"265:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"274:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"277:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"267:6:20"},"nodeType":"YulFunctionCall","src":"267:12:20"},"nodeType":"YulExpressionStatement","src":"267:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"240:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"249:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"236:3:20"},"nodeType":"YulFunctionCall","src":"236:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"261:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"232:3:20"},"nodeType":"YulFunctionCall","src":"232:32:20"},"nodeType":"YulIf","src":"229:52:20"},{"nodeType":"YulVariableDeclaration","src":"290:36:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"316:9:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"303:12:20"},"nodeType":"YulFunctionCall","src":"303:23:20"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"294:5:20","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"359:5:20"}],"functionName":{"name":"validator_revert_bytes4","nodeType":"YulIdentifier","src":"335:23:20"},"nodeType":"YulFunctionCall","src":"335:30:20"},"nodeType":"YulExpressionStatement","src":"335:30:20"},{"nodeType":"YulAssignment","src":"374:15:20","value":{"name":"value","nodeType":"YulIdentifier","src":"384:5:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"374:6:20"}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"185:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"196:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"208:6:20","type":""}],"src":"150:245:20"},{"body":{"nodeType":"YulBlock","src":"495:92:20","statements":[{"nodeType":"YulAssignment","src":"505:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"517:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"528:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"513:3:20"},"nodeType":"YulFunctionCall","src":"513:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"505:4:20"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"547:9:20"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"572:6:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"565:6:20"},"nodeType":"YulFunctionCall","src":"565:14:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"558:6:20"},"nodeType":"YulFunctionCall","src":"558:22:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"540:6:20"},"nodeType":"YulFunctionCall","src":"540:41:20"},"nodeType":"YulExpressionStatement","src":"540:41:20"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"464:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"475:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"486:4:20","type":""}],"src":"400:187:20"},{"body":{"nodeType":"YulBlock","src":"658:184:20","statements":[{"nodeType":"YulVariableDeclaration","src":"668:10:20","value":{"kind":"number","nodeType":"YulLiteral","src":"677:1:20","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"672:1:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"737:63:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"762:3:20"},{"name":"i","nodeType":"YulIdentifier","src":"767:1:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"758:3:20"},"nodeType":"YulFunctionCall","src":"758:11:20"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"781:3:20"},{"name":"i","nodeType":"YulIdentifier","src":"786:1:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"777:3:20"},"nodeType":"YulFunctionCall","src":"777:11:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"771:5:20"},"nodeType":"YulFunctionCall","src":"771:18:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"751:6:20"},"nodeType":"YulFunctionCall","src":"751:39:20"},"nodeType":"YulExpressionStatement","src":"751:39:20"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"698:1:20"},{"name":"length","nodeType":"YulIdentifier","src":"701:6:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"695:2:20"},"nodeType":"YulFunctionCall","src":"695:13:20"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"709:19:20","statements":[{"nodeType":"YulAssignment","src":"711:15:20","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"720:1:20"},{"kind":"number","nodeType":"YulLiteral","src":"723:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"716:3:20"},"nodeType":"YulFunctionCall","src":"716:10:20"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"711:1:20"}]}]},"pre":{"nodeType":"YulBlock","src":"691:3:20","statements":[]},"src":"687:113:20"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"820:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"825:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"816:3:20"},"nodeType":"YulFunctionCall","src":"816:16:20"},{"kind":"number","nodeType":"YulLiteral","src":"834:1:20","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"809:6:20"},"nodeType":"YulFunctionCall","src":"809:27:20"},"nodeType":"YulExpressionStatement","src":"809:27:20"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"636:3:20","type":""},{"name":"dst","nodeType":"YulTypedName","src":"641:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"646:6:20","type":""}],"src":"592:250:20"},{"body":{"nodeType":"YulBlock","src":"897:221:20","statements":[{"nodeType":"YulVariableDeclaration","src":"907:26:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"927:5:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"921:5:20"},"nodeType":"YulFunctionCall","src":"921:12:20"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"911:6:20","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"949:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"954:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"942:6:20"},"nodeType":"YulFunctionCall","src":"942:19:20"},"nodeType":"YulExpressionStatement","src":"942:19:20"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1009:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"1016:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1005:3:20"},"nodeType":"YulFunctionCall","src":"1005:16:20"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1027:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"1032:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1023:3:20"},"nodeType":"YulFunctionCall","src":"1023:14:20"},{"name":"length","nodeType":"YulIdentifier","src":"1039:6:20"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"970:34:20"},"nodeType":"YulFunctionCall","src":"970:76:20"},"nodeType":"YulExpressionStatement","src":"970:76:20"},{"nodeType":"YulAssignment","src":"1055:57:20","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1070:3:20"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1083:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"1091:2:20","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1079:3:20"},"nodeType":"YulFunctionCall","src":"1079:15:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1100:2:20","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1096:3:20"},"nodeType":"YulFunctionCall","src":"1096:7:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1075:3:20"},"nodeType":"YulFunctionCall","src":"1075:29:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1066:3:20"},"nodeType":"YulFunctionCall","src":"1066:39:20"},{"kind":"number","nodeType":"YulLiteral","src":"1107:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1062:3:20"},"nodeType":"YulFunctionCall","src":"1062:50:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1055:3:20"}]}]},"name":"abi_encode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"874:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"881:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"889:3:20","type":""}],"src":"847:271:20"},{"body":{"nodeType":"YulBlock","src":"1244:99:20","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1261:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"1272:2:20","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1254:6:20"},"nodeType":"YulFunctionCall","src":"1254:21:20"},"nodeType":"YulExpressionStatement","src":"1254:21:20"},{"nodeType":"YulAssignment","src":"1284:53:20","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1310:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1322:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"1333:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1318:3:20"},"nodeType":"YulFunctionCall","src":"1318:18:20"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"1292:17:20"},"nodeType":"YulFunctionCall","src":"1292:45:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1284:4:20"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1213:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1224:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1235:4:20","type":""}],"src":"1123:220:20"},{"body":{"nodeType":"YulBlock","src":"1418:110:20","statements":[{"body":{"nodeType":"YulBlock","src":"1464:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1473:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1476:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1466:6:20"},"nodeType":"YulFunctionCall","src":"1466:12:20"},"nodeType":"YulExpressionStatement","src":"1466:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1439:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"1448:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1435:3:20"},"nodeType":"YulFunctionCall","src":"1435:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"1460:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1431:3:20"},"nodeType":"YulFunctionCall","src":"1431:32:20"},"nodeType":"YulIf","src":"1428:52:20"},{"nodeType":"YulAssignment","src":"1489:33:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1512:9:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1499:12:20"},"nodeType":"YulFunctionCall","src":"1499:23:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1489:6:20"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1384:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1395:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1407:6:20","type":""}],"src":"1348:180:20"},{"body":{"nodeType":"YulBlock","src":"1634:102:20","statements":[{"nodeType":"YulAssignment","src":"1644:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1656:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"1667:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1652:3:20"},"nodeType":"YulFunctionCall","src":"1652:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1644:4:20"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1686:9:20"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1701:6:20"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1717:3:20","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1722:1:20","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1713:3:20"},"nodeType":"YulFunctionCall","src":"1713:11:20"},{"kind":"number","nodeType":"YulLiteral","src":"1726:1:20","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1709:3:20"},"nodeType":"YulFunctionCall","src":"1709:19:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1697:3:20"},"nodeType":"YulFunctionCall","src":"1697:32:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1679:6:20"},"nodeType":"YulFunctionCall","src":"1679:51:20"},"nodeType":"YulExpressionStatement","src":"1679:51:20"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1603:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1614:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1625:4:20","type":""}],"src":"1533:203:20"},{"body":{"nodeType":"YulBlock","src":"1790:124:20","statements":[{"nodeType":"YulAssignment","src":"1800:29:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1822:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1809:12:20"},"nodeType":"YulFunctionCall","src":"1809:20:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1800:5:20"}]},{"body":{"nodeType":"YulBlock","src":"1892:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1901:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1904:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1894:6:20"},"nodeType":"YulFunctionCall","src":"1894:12:20"},"nodeType":"YulExpressionStatement","src":"1894:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1851:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1862:5:20"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1877:3:20","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1882:1:20","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1873:3:20"},"nodeType":"YulFunctionCall","src":"1873:11:20"},{"kind":"number","nodeType":"YulLiteral","src":"1886:1:20","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1869:3:20"},"nodeType":"YulFunctionCall","src":"1869:19:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1858:3:20"},"nodeType":"YulFunctionCall","src":"1858:31:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1848:2:20"},"nodeType":"YulFunctionCall","src":"1848:42:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1841:6:20"},"nodeType":"YulFunctionCall","src":"1841:50:20"},"nodeType":"YulIf","src":"1838:70:20"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1769:6:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1780:5:20","type":""}],"src":"1741:173:20"},{"body":{"nodeType":"YulBlock","src":"2006:167:20","statements":[{"body":{"nodeType":"YulBlock","src":"2052:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2061:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2064:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2054:6:20"},"nodeType":"YulFunctionCall","src":"2054:12:20"},"nodeType":"YulExpressionStatement","src":"2054:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2027:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"2036:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2023:3:20"},"nodeType":"YulFunctionCall","src":"2023:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"2048:2:20","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2019:3:20"},"nodeType":"YulFunctionCall","src":"2019:32:20"},"nodeType":"YulIf","src":"2016:52:20"},{"nodeType":"YulAssignment","src":"2077:39:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2106:9:20"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2087:18:20"},"nodeType":"YulFunctionCall","src":"2087:29:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2077:6:20"}]},{"nodeType":"YulAssignment","src":"2125:42:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2152:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"2163:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2148:3:20"},"nodeType":"YulFunctionCall","src":"2148:18:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2135:12:20"},"nodeType":"YulFunctionCall","src":"2135:32:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2125:6:20"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1964:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1975:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1987:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1995:6:20","type":""}],"src":"1919:254:20"},{"body":{"nodeType":"YulBlock","src":"2210:95:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2227:1:20","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2234:3:20","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2239:10:20","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2230:3:20"},"nodeType":"YulFunctionCall","src":"2230:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2220:6:20"},"nodeType":"YulFunctionCall","src":"2220:31:20"},"nodeType":"YulExpressionStatement","src":"2220:31:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2267:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2270:4:20","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2260:6:20"},"nodeType":"YulFunctionCall","src":"2260:15:20"},"nodeType":"YulExpressionStatement","src":"2260:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2291:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2294:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2284:6:20"},"nodeType":"YulFunctionCall","src":"2284:15:20"},"nodeType":"YulExpressionStatement","src":"2284:15:20"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"2178:127:20"},{"body":{"nodeType":"YulBlock","src":"2385:557:20","statements":[{"nodeType":"YulVariableDeclaration","src":"2395:28:20","value":{"kind":"number","nodeType":"YulLiteral","src":"2405:18:20","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2399:2:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"2450:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2452:16:20"},"nodeType":"YulFunctionCall","src":"2452:18:20"},"nodeType":"YulExpressionStatement","src":"2452:18:20"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2438:6:20"},{"name":"_1","nodeType":"YulIdentifier","src":"2446:2:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2435:2:20"},"nodeType":"YulFunctionCall","src":"2435:14:20"},"nodeType":"YulIf","src":"2432:40:20"},{"nodeType":"YulVariableDeclaration","src":"2481:17:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2495:2:20","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2491:3:20"},"nodeType":"YulFunctionCall","src":"2491:7:20"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"2485:2:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2507:23:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2527:2:20","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2521:5:20"},"nodeType":"YulFunctionCall","src":"2521:9:20"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"2511:6:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2539:73:20","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2561:6:20"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2585:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"2593:2:20","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2581:3:20"},"nodeType":"YulFunctionCall","src":"2581:15:20"},{"name":"_2","nodeType":"YulIdentifier","src":"2598:2:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2577:3:20"},"nodeType":"YulFunctionCall","src":"2577:24:20"},{"kind":"number","nodeType":"YulLiteral","src":"2603:2:20","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2573:3:20"},"nodeType":"YulFunctionCall","src":"2573:33:20"},{"name":"_2","nodeType":"YulIdentifier","src":"2608:2:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2569:3:20"},"nodeType":"YulFunctionCall","src":"2569:42:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2557:3:20"},"nodeType":"YulFunctionCall","src":"2557:55:20"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"2543:10:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"2671:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2673:16:20"},"nodeType":"YulFunctionCall","src":"2673:18:20"},"nodeType":"YulExpressionStatement","src":"2673:18:20"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2630:10:20"},{"name":"_1","nodeType":"YulIdentifier","src":"2642:2:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2627:2:20"},"nodeType":"YulFunctionCall","src":"2627:18:20"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2650:10:20"},{"name":"memPtr","nodeType":"YulIdentifier","src":"2662:6:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2647:2:20"},"nodeType":"YulFunctionCall","src":"2647:22:20"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2624:2:20"},"nodeType":"YulFunctionCall","src":"2624:46:20"},"nodeType":"YulIf","src":"2621:72:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2709:2:20","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2713:10:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2702:6:20"},"nodeType":"YulFunctionCall","src":"2702:22:20"},"nodeType":"YulExpressionStatement","src":"2702:22:20"},{"nodeType":"YulAssignment","src":"2733:15:20","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"2742:6:20"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2733:5:20"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2764:6:20"},{"name":"length","nodeType":"YulIdentifier","src":"2772:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2757:6:20"},"nodeType":"YulFunctionCall","src":"2757:22:20"},"nodeType":"YulExpressionStatement","src":"2757:22:20"},{"body":{"nodeType":"YulBlock","src":"2817:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2826:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2829:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2819:6:20"},"nodeType":"YulFunctionCall","src":"2819:12:20"},"nodeType":"YulExpressionStatement","src":"2819:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2798:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"2803:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2794:3:20"},"nodeType":"YulFunctionCall","src":"2794:16:20"},{"name":"end","nodeType":"YulIdentifier","src":"2812:3:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2791:2:20"},"nodeType":"YulFunctionCall","src":"2791:25:20"},"nodeType":"YulIf","src":"2788:45:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2859:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"2867:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2855:3:20"},"nodeType":"YulFunctionCall","src":"2855:17:20"},{"name":"src","nodeType":"YulIdentifier","src":"2874:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"2879:6:20"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"2842:12:20"},"nodeType":"YulFunctionCall","src":"2842:44:20"},"nodeType":"YulExpressionStatement","src":"2842:44:20"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2910:6:20"},{"name":"length","nodeType":"YulIdentifier","src":"2918:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2906:3:20"},"nodeType":"YulFunctionCall","src":"2906:19:20"},{"kind":"number","nodeType":"YulLiteral","src":"2927:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2902:3:20"},"nodeType":"YulFunctionCall","src":"2902:30:20"},{"kind":"number","nodeType":"YulLiteral","src":"2934:1:20","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2895:6:20"},"nodeType":"YulFunctionCall","src":"2895:41:20"},"nodeType":"YulExpressionStatement","src":"2895:41:20"}]},"name":"abi_decode_available_length_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2354:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"2359:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"2367:3:20","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2375:5:20","type":""}],"src":"2310:632:20"},{"body":{"nodeType":"YulBlock","src":"3116:659:20","statements":[{"body":{"nodeType":"YulBlock","src":"3163:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3172:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3175:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3165:6:20"},"nodeType":"YulFunctionCall","src":"3165:12:20"},"nodeType":"YulExpressionStatement","src":"3165:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3137:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"3146:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3133:3:20"},"nodeType":"YulFunctionCall","src":"3133:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"3158:3:20","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3129:3:20"},"nodeType":"YulFunctionCall","src":"3129:33:20"},"nodeType":"YulIf","src":"3126:53:20"},{"nodeType":"YulAssignment","src":"3188:39:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3217:9:20"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3198:18:20"},"nodeType":"YulFunctionCall","src":"3198:29:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3188:6:20"}]},{"nodeType":"YulVariableDeclaration","src":"3236:46:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3267:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"3278:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3263:3:20"},"nodeType":"YulFunctionCall","src":"3263:18:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3250:12:20"},"nodeType":"YulFunctionCall","src":"3250:32:20"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3240:6:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"3325:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3334:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3337:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3327:6:20"},"nodeType":"YulFunctionCall","src":"3327:12:20"},"nodeType":"YulExpressionStatement","src":"3327:12:20"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3297:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"3305:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3294:2:20"},"nodeType":"YulFunctionCall","src":"3294:30:20"},"nodeType":"YulIf","src":"3291:50:20"},{"nodeType":"YulVariableDeclaration","src":"3350:32:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3364:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"3375:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3360:3:20"},"nodeType":"YulFunctionCall","src":"3360:22:20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3354:2:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"3430:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3439:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3442:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3432:6:20"},"nodeType":"YulFunctionCall","src":"3432:12:20"},"nodeType":"YulExpressionStatement","src":"3432:12:20"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"3409:2:20"},{"kind":"number","nodeType":"YulLiteral","src":"3413:4:20","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3405:3:20"},"nodeType":"YulFunctionCall","src":"3405:13:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3420:7:20"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3401:3:20"},"nodeType":"YulFunctionCall","src":"3401:27:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3394:6:20"},"nodeType":"YulFunctionCall","src":"3394:35:20"},"nodeType":"YulIf","src":"3391:55:20"},{"nodeType":"YulAssignment","src":"3455:84:20","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"3504:2:20"},{"kind":"number","nodeType":"YulLiteral","src":"3508:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3500:3:20"},"nodeType":"YulFunctionCall","src":"3500:11:20"},{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"3526:2:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3513:12:20"},"nodeType":"YulFunctionCall","src":"3513:16:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3531:7:20"}],"functionName":{"name":"abi_decode_available_length_string","nodeType":"YulIdentifier","src":"3465:34:20"},"nodeType":"YulFunctionCall","src":"3465:74:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3455:6:20"}]},{"nodeType":"YulVariableDeclaration","src":"3548:45:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3578:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"3589:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3574:3:20"},"nodeType":"YulFunctionCall","src":"3574:18:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3561:12:20"},"nodeType":"YulFunctionCall","src":"3561:32:20"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3552:5:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"3626:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3635:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3638:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3628:6:20"},"nodeType":"YulFunctionCall","src":"3628:12:20"},"nodeType":"YulExpressionStatement","src":"3628:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3615:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"3622:1:20","type":"","value":"3"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3612:2:20"},"nodeType":"YulFunctionCall","src":"3612:12:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3605:6:20"},"nodeType":"YulFunctionCall","src":"3605:20:20"},"nodeType":"YulIf","src":"3602:40:20"},{"nodeType":"YulAssignment","src":"3651:15:20","value":{"name":"value","nodeType":"YulIdentifier","src":"3661:5:20"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3651:6:20"}]},{"nodeType":"YulAssignment","src":"3675:42:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3702:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"3713:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3698:3:20"},"nodeType":"YulFunctionCall","src":"3698:18:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3685:12:20"},"nodeType":"YulFunctionCall","src":"3685:32:20"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"3675:6:20"}]},{"nodeType":"YulAssignment","src":"3726:43:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3753:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"3764:3:20","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3749:3:20"},"nodeType":"YulFunctionCall","src":"3749:19:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3736:12:20"},"nodeType":"YulFunctionCall","src":"3736:33:20"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"3726:6:20"}]}]},"name":"abi_decode_tuple_t_addresst_string_memory_ptrt_enum$_VerificationTier_$6389t_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3050:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3061:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3073:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3081:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3089:6:20","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3097:6:20","type":""},{"name":"value4","nodeType":"YulTypedName","src":"3105:6:20","type":""}],"src":"2947:828:20"},{"body":{"nodeType":"YulBlock","src":"3881:76:20","statements":[{"nodeType":"YulAssignment","src":"3891:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3903:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"3914:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3899:3:20"},"nodeType":"YulFunctionCall","src":"3899:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3891:4:20"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3933:9:20"},{"name":"value0","nodeType":"YulIdentifier","src":"3944:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3926:6:20"},"nodeType":"YulFunctionCall","src":"3926:25:20"},"nodeType":"YulExpressionStatement","src":"3926:25:20"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3850:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3861:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3872:4:20","type":""}],"src":"3780:177:20"},{"body":{"nodeType":"YulBlock","src":"4032:116:20","statements":[{"body":{"nodeType":"YulBlock","src":"4078:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4087:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4090:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4080:6:20"},"nodeType":"YulFunctionCall","src":"4080:12:20"},"nodeType":"YulExpressionStatement","src":"4080:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4053:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"4062:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4049:3:20"},"nodeType":"YulFunctionCall","src":"4049:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"4074:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4045:3:20"},"nodeType":"YulFunctionCall","src":"4045:32:20"},"nodeType":"YulIf","src":"4042:52:20"},{"nodeType":"YulAssignment","src":"4103:39:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4132:9:20"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"4113:18:20"},"nodeType":"YulFunctionCall","src":"4113:29:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4103:6:20"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3998:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4009:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4021:6:20","type":""}],"src":"3962:186:20"},{"body":{"nodeType":"YulBlock","src":"4257:224:20","statements":[{"body":{"nodeType":"YulBlock","src":"4303:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4312:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4315:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4305:6:20"},"nodeType":"YulFunctionCall","src":"4305:12:20"},"nodeType":"YulExpressionStatement","src":"4305:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4278:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"4287:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4274:3:20"},"nodeType":"YulFunctionCall","src":"4274:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"4299:2:20","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4270:3:20"},"nodeType":"YulFunctionCall","src":"4270:32:20"},"nodeType":"YulIf","src":"4267:52:20"},{"nodeType":"YulAssignment","src":"4328:39:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4357:9:20"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"4338:18:20"},"nodeType":"YulFunctionCall","src":"4338:29:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4328:6:20"}]},{"nodeType":"YulAssignment","src":"4376:48:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4409:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"4420:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4405:3:20"},"nodeType":"YulFunctionCall","src":"4405:18:20"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"4386:18:20"},"nodeType":"YulFunctionCall","src":"4386:38:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4376:6:20"}]},{"nodeType":"YulAssignment","src":"4433:42:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4460:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"4471:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4456:3:20"},"nodeType":"YulFunctionCall","src":"4456:18:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4443:12:20"},"nodeType":"YulFunctionCall","src":"4443:32:20"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4433:6:20"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4207:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4218:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4230:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4238:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4246:6:20","type":""}],"src":"4153:328:20"},{"body":{"nodeType":"YulBlock","src":"4518:95:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4535:1:20","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4542:3:20","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"4547:10:20","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4538:3:20"},"nodeType":"YulFunctionCall","src":"4538:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4528:6:20"},"nodeType":"YulFunctionCall","src":"4528:31:20"},"nodeType":"YulExpressionStatement","src":"4528:31:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4575:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4578:4:20","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4568:6:20"},"nodeType":"YulFunctionCall","src":"4568:15:20"},"nodeType":"YulExpressionStatement","src":"4568:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4599:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4602:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4592:6:20"},"nodeType":"YulFunctionCall","src":"4592:15:20"},"nodeType":"YulExpressionStatement","src":"4592:15:20"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"4486:127:20"},{"body":{"nodeType":"YulBlock","src":"4783:664:20","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4800:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"4811:2:20","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4793:6:20"},"nodeType":"YulFunctionCall","src":"4793:21:20"},"nodeType":"YulExpressionStatement","src":"4793:21:20"},{"nodeType":"YulVariableDeclaration","src":"4823:33:20","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4849:6:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4843:5:20"},"nodeType":"YulFunctionCall","src":"4843:13:20"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"4827:12:20","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4876:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"4887:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4872:3:20"},"nodeType":"YulFunctionCall","src":"4872:18:20"},{"kind":"number","nodeType":"YulLiteral","src":"4892:4:20","type":"","value":"0xa0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4865:6:20"},"nodeType":"YulFunctionCall","src":"4865:32:20"},"nodeType":"YulExpressionStatement","src":"4865:32:20"},{"nodeType":"YulVariableDeclaration","src":"4906:66:20","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"4938:12:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4956:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"4967:3:20","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4952:3:20"},"nodeType":"YulFunctionCall","src":"4952:19:20"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"4920:17:20"},"nodeType":"YulFunctionCall","src":"4920:52:20"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"4910:6:20","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4992:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"5003:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4988:3:20"},"nodeType":"YulFunctionCall","src":"4988:18:20"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5018:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"5026:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5014:3:20"},"nodeType":"YulFunctionCall","src":"5014:15:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5008:5:20"},"nodeType":"YulFunctionCall","src":"5008:22:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4981:6:20"},"nodeType":"YulFunctionCall","src":"4981:50:20"},"nodeType":"YulExpressionStatement","src":"4981:50:20"},{"nodeType":"YulVariableDeclaration","src":"5040:44:20","value":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5072:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"5080:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5068:3:20"},"nodeType":"YulFunctionCall","src":"5068:15:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5062:5:20"},"nodeType":"YulFunctionCall","src":"5062:22:20"},"variables":[{"name":"memberValue0_1","nodeType":"YulTypedName","src":"5044:14:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"5134:111:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5155:1:20","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5162:3:20","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"5167:10:20","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5158:3:20"},"nodeType":"YulFunctionCall","src":"5158:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5148:6:20"},"nodeType":"YulFunctionCall","src":"5148:31:20"},"nodeType":"YulExpressionStatement","src":"5148:31:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5199:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5202:4:20","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5192:6:20"},"nodeType":"YulFunctionCall","src":"5192:15:20"},"nodeType":"YulExpressionStatement","src":"5192:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5227:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5230:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5220:6:20"},"nodeType":"YulFunctionCall","src":"5220:15:20"},"nodeType":"YulExpressionStatement","src":"5220:15:20"}]},"condition":{"arguments":[{"arguments":[{"name":"memberValue0_1","nodeType":"YulIdentifier","src":"5106:14:20"},{"kind":"number","nodeType":"YulLiteral","src":"5122:1:20","type":"","value":"3"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5103:2:20"},"nodeType":"YulFunctionCall","src":"5103:21:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5096:6:20"},"nodeType":"YulFunctionCall","src":"5096:29:20"},"nodeType":"YulIf","src":"5093:152:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5265:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"5276:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5261:3:20"},"nodeType":"YulFunctionCall","src":"5261:18:20"},{"name":"memberValue0_1","nodeType":"YulIdentifier","src":"5281:14:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5254:6:20"},"nodeType":"YulFunctionCall","src":"5254:42:20"},"nodeType":"YulExpressionStatement","src":"5254:42:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5316:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"5327:3:20","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5312:3:20"},"nodeType":"YulFunctionCall","src":"5312:19:20"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5343:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"5351:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5339:3:20"},"nodeType":"YulFunctionCall","src":"5339:15:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5333:5:20"},"nodeType":"YulFunctionCall","src":"5333:22:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5305:6:20"},"nodeType":"YulFunctionCall","src":"5305:51:20"},"nodeType":"YulExpressionStatement","src":"5305:51:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5376:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"5387:4:20","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5372:3:20"},"nodeType":"YulFunctionCall","src":"5372:20:20"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5404:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"5412:3:20","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5400:3:20"},"nodeType":"YulFunctionCall","src":"5400:16:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5394:5:20"},"nodeType":"YulFunctionCall","src":"5394:23:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5365:6:20"},"nodeType":"YulFunctionCall","src":"5365:53:20"},"nodeType":"YulExpressionStatement","src":"5365:53:20"},{"nodeType":"YulAssignment","src":"5427:14:20","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"5435:6:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5427:4:20"}]}]},"name":"abi_encode_tuple_t_struct$_PolicyMetadata_$7168_memory_ptr__to_t_struct$_PolicyMetadata_$7168_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4752:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4763:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4774:4:20","type":""}],"src":"4618:829:20"},{"body":{"nodeType":"YulBlock","src":"5536:263:20","statements":[{"body":{"nodeType":"YulBlock","src":"5582:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5591:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5594:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5584:6:20"},"nodeType":"YulFunctionCall","src":"5584:12:20"},"nodeType":"YulExpressionStatement","src":"5584:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5557:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"5566:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5553:3:20"},"nodeType":"YulFunctionCall","src":"5553:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"5578:2:20","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5549:3:20"},"nodeType":"YulFunctionCall","src":"5549:32:20"},"nodeType":"YulIf","src":"5546:52:20"},{"nodeType":"YulAssignment","src":"5607:39:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5636:9:20"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"5617:18:20"},"nodeType":"YulFunctionCall","src":"5617:29:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5607:6:20"}]},{"nodeType":"YulVariableDeclaration","src":"5655:45:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5685:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"5696:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5681:3:20"},"nodeType":"YulFunctionCall","src":"5681:18:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5668:12:20"},"nodeType":"YulFunctionCall","src":"5668:32:20"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5659:5:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"5753:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5762:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5765:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5755:6:20"},"nodeType":"YulFunctionCall","src":"5755:12:20"},"nodeType":"YulExpressionStatement","src":"5755:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5722:5:20"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5743:5:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5736:6:20"},"nodeType":"YulFunctionCall","src":"5736:13:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5729:6:20"},"nodeType":"YulFunctionCall","src":"5729:21:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5719:2:20"},"nodeType":"YulFunctionCall","src":"5719:32:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5712:6:20"},"nodeType":"YulFunctionCall","src":"5712:40:20"},"nodeType":"YulIf","src":"5709:60:20"},{"nodeType":"YulAssignment","src":"5778:15:20","value":{"name":"value","nodeType":"YulIdentifier","src":"5788:5:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5778:6:20"}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5494:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5505:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5517:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5525:6:20","type":""}],"src":"5452:347:20"},{"body":{"nodeType":"YulBlock","src":"5934:537:20","statements":[{"body":{"nodeType":"YulBlock","src":"5981:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5990:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5993:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5983:6:20"},"nodeType":"YulFunctionCall","src":"5983:12:20"},"nodeType":"YulExpressionStatement","src":"5983:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5955:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"5964:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5951:3:20"},"nodeType":"YulFunctionCall","src":"5951:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"5976:3:20","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5947:3:20"},"nodeType":"YulFunctionCall","src":"5947:33:20"},"nodeType":"YulIf","src":"5944:53:20"},{"nodeType":"YulAssignment","src":"6006:39:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6035:9:20"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"6016:18:20"},"nodeType":"YulFunctionCall","src":"6016:29:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6006:6:20"}]},{"nodeType":"YulAssignment","src":"6054:48:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6087:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"6098:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6083:3:20"},"nodeType":"YulFunctionCall","src":"6083:18:20"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"6064:18:20"},"nodeType":"YulFunctionCall","src":"6064:38:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6054:6:20"}]},{"nodeType":"YulAssignment","src":"6111:42:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6138:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"6149:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6134:3:20"},"nodeType":"YulFunctionCall","src":"6134:18:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6121:12:20"},"nodeType":"YulFunctionCall","src":"6121:32:20"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"6111:6:20"}]},{"nodeType":"YulVariableDeclaration","src":"6162:46:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6193:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"6204:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6189:3:20"},"nodeType":"YulFunctionCall","src":"6189:18:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6176:12:20"},"nodeType":"YulFunctionCall","src":"6176:32:20"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6166:6:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"6251:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6260:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6263:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6253:6:20"},"nodeType":"YulFunctionCall","src":"6253:12:20"},"nodeType":"YulExpressionStatement","src":"6253:12:20"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6223:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"6231:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6220:2:20"},"nodeType":"YulFunctionCall","src":"6220:30:20"},"nodeType":"YulIf","src":"6217:50:20"},{"nodeType":"YulVariableDeclaration","src":"6276:32:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6290:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"6301:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6286:3:20"},"nodeType":"YulFunctionCall","src":"6286:22:20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"6280:2:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"6356:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6365:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6368:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6358:6:20"},"nodeType":"YulFunctionCall","src":"6358:12:20"},"nodeType":"YulExpressionStatement","src":"6358:12:20"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"6335:2:20"},{"kind":"number","nodeType":"YulLiteral","src":"6339:4:20","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6331:3:20"},"nodeType":"YulFunctionCall","src":"6331:13:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6346:7:20"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6327:3:20"},"nodeType":"YulFunctionCall","src":"6327:27:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6320:6:20"},"nodeType":"YulFunctionCall","src":"6320:35:20"},"nodeType":"YulIf","src":"6317:55:20"},{"nodeType":"YulAssignment","src":"6381:84:20","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"6430:2:20"},{"kind":"number","nodeType":"YulLiteral","src":"6434:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6426:3:20"},"nodeType":"YulFunctionCall","src":"6426:11:20"},{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"6452:2:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6439:12:20"},"nodeType":"YulFunctionCall","src":"6439:16:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6457:7:20"}],"functionName":{"name":"abi_decode_available_length_string","nodeType":"YulIdentifier","src":"6391:34:20"},"nodeType":"YulFunctionCall","src":"6391:74:20"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"6381:6:20"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5876:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5887:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5899:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5907:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5915:6:20","type":""},{"name":"value3","nodeType":"YulTypedName","src":"5923:6:20","type":""}],"src":"5804:667:20"},{"body":{"nodeType":"YulBlock","src":"6563:173:20","statements":[{"body":{"nodeType":"YulBlock","src":"6609:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6618:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6621:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6611:6:20"},"nodeType":"YulFunctionCall","src":"6611:12:20"},"nodeType":"YulExpressionStatement","src":"6611:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6584:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"6593:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6580:3:20"},"nodeType":"YulFunctionCall","src":"6580:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"6605:2:20","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6576:3:20"},"nodeType":"YulFunctionCall","src":"6576:32:20"},"nodeType":"YulIf","src":"6573:52:20"},{"nodeType":"YulAssignment","src":"6634:39:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6663:9:20"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"6644:18:20"},"nodeType":"YulFunctionCall","src":"6644:29:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6634:6:20"}]},{"nodeType":"YulAssignment","src":"6682:48:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6715:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"6726:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6711:3:20"},"nodeType":"YulFunctionCall","src":"6711:18:20"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"6692:18:20"},"nodeType":"YulFunctionCall","src":"6692:38:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6682:6:20"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6521:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6532:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6544:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6552:6:20","type":""}],"src":"6476:260:20"},{"body":{"nodeType":"YulBlock","src":"6796:325:20","statements":[{"nodeType":"YulAssignment","src":"6806:22:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6820:1:20","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"6823:4:20"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6816:3:20"},"nodeType":"YulFunctionCall","src":"6816:12:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6806:6:20"}]},{"nodeType":"YulVariableDeclaration","src":"6837:38:20","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6867:4:20"},{"kind":"number","nodeType":"YulLiteral","src":"6873:1:20","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6863:3:20"},"nodeType":"YulFunctionCall","src":"6863:12:20"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"6841:18:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"6914:31:20","statements":[{"nodeType":"YulAssignment","src":"6916:27:20","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6930:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"6938:4:20","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6926:3:20"},"nodeType":"YulFunctionCall","src":"6926:17:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6916:6:20"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6894:18:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6887:6:20"},"nodeType":"YulFunctionCall","src":"6887:26:20"},"nodeType":"YulIf","src":"6884:61:20"},{"body":{"nodeType":"YulBlock","src":"7004:111:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7025:1:20","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7032:3:20","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"7037:10:20","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7028:3:20"},"nodeType":"YulFunctionCall","src":"7028:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7018:6:20"},"nodeType":"YulFunctionCall","src":"7018:31:20"},"nodeType":"YulExpressionStatement","src":"7018:31:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7069:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7072:4:20","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7062:6:20"},"nodeType":"YulFunctionCall","src":"7062:15:20"},"nodeType":"YulExpressionStatement","src":"7062:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7097:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7100:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7090:6:20"},"nodeType":"YulFunctionCall","src":"7090:15:20"},"nodeType":"YulExpressionStatement","src":"7090:15:20"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6960:18:20"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6983:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"6991:2:20","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6980:2:20"},"nodeType":"YulFunctionCall","src":"6980:14:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6957:2:20"},"nodeType":"YulFunctionCall","src":"6957:38:20"},"nodeType":"YulIf","src":"6954:161:20"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6776:4:20","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"6785:6:20","type":""}],"src":"6741:380:20"},{"body":{"nodeType":"YulBlock","src":"7300:177:20","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7317:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"7328:2:20","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7310:6:20"},"nodeType":"YulFunctionCall","src":"7310:21:20"},"nodeType":"YulExpressionStatement","src":"7310:21:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7351:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"7362:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7347:3:20"},"nodeType":"YulFunctionCall","src":"7347:18:20"},{"kind":"number","nodeType":"YulLiteral","src":"7367:2:20","type":"","value":"27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7340:6:20"},"nodeType":"YulFunctionCall","src":"7340:30:20"},"nodeType":"YulExpressionStatement","src":"7340:30:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7390:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"7401:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7386:3:20"},"nodeType":"YulFunctionCall","src":"7386:18:20"},{"hexValue":"43616c6c6572206973206e6f7420496e737572616e6365436f7265","kind":"string","nodeType":"YulLiteral","src":"7406:29:20","type":"","value":"Caller is not InsuranceCore"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7379:6:20"},"nodeType":"YulFunctionCall","src":"7379:57:20"},"nodeType":"YulExpressionStatement","src":"7379:57:20"},{"nodeType":"YulAssignment","src":"7445:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7457:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"7468:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7453:3:20"},"nodeType":"YulFunctionCall","src":"7453:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7445:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_0588848746f24b7ecbd0725ab3d6ece869f8091407a74cd56eca3bc5c7d9b270__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7277:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7291:4:20","type":""}],"src":"7126:351:20"},{"body":{"nodeType":"YulBlock","src":"7529:185:20","statements":[{"body":{"nodeType":"YulBlock","src":"7568:111:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7589:1:20","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7596:3:20","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"7601:10:20","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7592:3:20"},"nodeType":"YulFunctionCall","src":"7592:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7582:6:20"},"nodeType":"YulFunctionCall","src":"7582:31:20"},"nodeType":"YulExpressionStatement","src":"7582:31:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7633:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7636:4:20","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7626:6:20"},"nodeType":"YulFunctionCall","src":"7626:15:20"},"nodeType":"YulExpressionStatement","src":"7626:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7661:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7664:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7654:6:20"},"nodeType":"YulFunctionCall","src":"7654:15:20"},"nodeType":"YulExpressionStatement","src":"7654:15:20"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7545:5:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7556:1:20","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7552:3:20"},"nodeType":"YulFunctionCall","src":"7552:6:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7542:2:20"},"nodeType":"YulFunctionCall","src":"7542:17:20"},"nodeType":"YulIf","src":"7539:140:20"},{"nodeType":"YulAssignment","src":"7688:20:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7699:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"7706:1:20","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7695:3:20"},"nodeType":"YulFunctionCall","src":"7695:13:20"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"7688:3:20"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7511:5:20","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"7521:3:20","type":""}],"src":"7482:232:20"},{"body":{"nodeType":"YulBlock","src":"7775:65:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7792:1:20","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"7795:3:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7785:6:20"},"nodeType":"YulFunctionCall","src":"7785:14:20"},"nodeType":"YulExpressionStatement","src":"7785:14:20"},{"nodeType":"YulAssignment","src":"7808:26:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7826:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7829:4:20","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"7816:9:20"},"nodeType":"YulFunctionCall","src":"7816:18:20"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"7808:4:20"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"7758:3:20","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"7766:4:20","type":""}],"src":"7719:121:20"},{"body":{"nodeType":"YulBlock","src":"7926:464:20","statements":[{"body":{"nodeType":"YulBlock","src":"7959:425:20","statements":[{"nodeType":"YulVariableDeclaration","src":"7973:11:20","value":{"kind":"number","nodeType":"YulLiteral","src":"7983:1:20","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"7977:2:20","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"8004:2:20"},{"name":"array","nodeType":"YulIdentifier","src":"8008:5:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7997:6:20"},"nodeType":"YulFunctionCall","src":"7997:17:20"},"nodeType":"YulExpressionStatement","src":"7997:17:20"},{"nodeType":"YulVariableDeclaration","src":"8027:31:20","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"8049:2:20"},{"kind":"number","nodeType":"YulLiteral","src":"8053:4:20","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"8039:9:20"},"nodeType":"YulFunctionCall","src":"8039:19:20"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"8031:4:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8071:57:20","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8094:4:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8104:1:20","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"8111:10:20"},{"kind":"number","nodeType":"YulLiteral","src":"8123:2:20","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8107:3:20"},"nodeType":"YulFunctionCall","src":"8107:19:20"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"8100:3:20"},"nodeType":"YulFunctionCall","src":"8100:27:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8090:3:20"},"nodeType":"YulFunctionCall","src":"8090:38:20"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"8075:11:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"8165:23:20","statements":[{"nodeType":"YulAssignment","src":"8167:19:20","value":{"name":"data","nodeType":"YulIdentifier","src":"8182:4:20"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"8167:11:20"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"8147:10:20"},{"kind":"number","nodeType":"YulLiteral","src":"8159:4:20","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8144:2:20"},"nodeType":"YulFunctionCall","src":"8144:20:20"},"nodeType":"YulIf","src":"8141:47:20"},{"nodeType":"YulVariableDeclaration","src":"8201:41:20","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8215:4:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8225:1:20","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"8232:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"8237:2:20","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8228:3:20"},"nodeType":"YulFunctionCall","src":"8228:12:20"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"8221:3:20"},"nodeType":"YulFunctionCall","src":"8221:20:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8211:3:20"},"nodeType":"YulFunctionCall","src":"8211:31:20"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"8205:2:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8255:24:20","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"8268:11:20"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"8259:5:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"8353:21:20","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"8362:5:20"},{"name":"_1","nodeType":"YulIdentifier","src":"8369:2:20"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8355:6:20"},"nodeType":"YulFunctionCall","src":"8355:17:20"},"nodeType":"YulExpressionStatement","src":"8355:17:20"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"8303:5:20"},{"name":"_2","nodeType":"YulIdentifier","src":"8310:2:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8300:2:20"},"nodeType":"YulFunctionCall","src":"8300:13:20"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"8314:26:20","statements":[{"nodeType":"YulAssignment","src":"8316:22:20","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"8329:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"8336:1:20","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8325:3:20"},"nodeType":"YulFunctionCall","src":"8325:13:20"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"8316:5:20"}]}]},"pre":{"nodeType":"YulBlock","src":"8296:3:20","statements":[]},"src":"8292:82:20"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"7942:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"7947:2:20","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7939:2:20"},"nodeType":"YulFunctionCall","src":"7939:11:20"},"nodeType":"YulIf","src":"7936:448:20"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"7898:5:20","type":""},{"name":"len","nodeType":"YulTypedName","src":"7905:3:20","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"7910:10:20","type":""}],"src":"7845:545:20"},{"body":{"nodeType":"YulBlock","src":"8480:81:20","statements":[{"nodeType":"YulAssignment","src":"8490:65:20","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8505:4:20"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8523:1:20","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"8526:3:20"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8519:3:20"},"nodeType":"YulFunctionCall","src":"8519:11:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8536:1:20","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"8532:3:20"},"nodeType":"YulFunctionCall","src":"8532:6:20"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"8515:3:20"},"nodeType":"YulFunctionCall","src":"8515:24:20"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"8511:3:20"},"nodeType":"YulFunctionCall","src":"8511:29:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8501:3:20"},"nodeType":"YulFunctionCall","src":"8501:40:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8547:1:20","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"8550:3:20"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8543:3:20"},"nodeType":"YulFunctionCall","src":"8543:11:20"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"8498:2:20"},"nodeType":"YulFunctionCall","src":"8498:57:20"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"8490:4:20"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"8457:4:20","type":""},{"name":"len","nodeType":"YulTypedName","src":"8463:3:20","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"8471:4:20","type":""}],"src":"8395:166:20"},{"body":{"nodeType":"YulBlock","src":"8662:1256:20","statements":[{"nodeType":"YulVariableDeclaration","src":"8672:24:20","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8692:3:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8686:5:20"},"nodeType":"YulFunctionCall","src":"8686:10:20"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"8676:6:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"8739:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"8741:16:20"},"nodeType":"YulFunctionCall","src":"8741:18:20"},"nodeType":"YulExpressionStatement","src":"8741:18:20"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8711:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"8719:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8708:2:20"},"nodeType":"YulFunctionCall","src":"8708:30:20"},"nodeType":"YulIf","src":"8705:56:20"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8814:4:20"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8852:4:20"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"8846:5:20"},"nodeType":"YulFunctionCall","src":"8846:11:20"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"8820:25:20"},"nodeType":"YulFunctionCall","src":"8820:38:20"},{"name":"newLen","nodeType":"YulIdentifier","src":"8860:6:20"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"8770:43:20"},"nodeType":"YulFunctionCall","src":"8770:97:20"},"nodeType":"YulExpressionStatement","src":"8770:97:20"},{"nodeType":"YulVariableDeclaration","src":"8876:18:20","value":{"kind":"number","nodeType":"YulLiteral","src":"8893:1:20","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"8880:9:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8903:23:20","value":{"kind":"number","nodeType":"YulLiteral","src":"8922:4:20","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"8907:11:20","type":""}]},{"nodeType":"YulAssignment","src":"8935:24:20","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"8948:11:20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8935:9:20"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"9005:656:20","statements":[{"nodeType":"YulVariableDeclaration","src":"9019:35:20","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"9038:6:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9050:2:20","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"9046:3:20"},"nodeType":"YulFunctionCall","src":"9046:7:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9034:3:20"},"nodeType":"YulFunctionCall","src":"9034:20:20"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"9023:7:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9067:49:20","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"9111:4:20"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"9081:29:20"},"nodeType":"YulFunctionCall","src":"9081:35:20"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"9071:6:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9129:10:20","value":{"kind":"number","nodeType":"YulLiteral","src":"9138:1:20","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"9133:1:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"9216:172:20","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"9241:6:20"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9259:3:20"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"9264:9:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9255:3:20"},"nodeType":"YulFunctionCall","src":"9255:19:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9249:5:20"},"nodeType":"YulFunctionCall","src":"9249:26:20"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"9234:6:20"},"nodeType":"YulFunctionCall","src":"9234:42:20"},"nodeType":"YulExpressionStatement","src":"9234:42:20"},{"nodeType":"YulAssignment","src":"9293:24:20","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"9307:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"9315:1:20","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9303:3:20"},"nodeType":"YulFunctionCall","src":"9303:14:20"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"9293:6:20"}]},{"nodeType":"YulAssignment","src":"9334:40:20","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"9351:9:20"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"9362:11:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9347:3:20"},"nodeType":"YulFunctionCall","src":"9347:27:20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"9334:9:20"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9163:1:20"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"9166:7:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9160:2:20"},"nodeType":"YulFunctionCall","src":"9160:14:20"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"9175:28:20","statements":[{"nodeType":"YulAssignment","src":"9177:24:20","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9186:1:20"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"9189:11:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9182:3:20"},"nodeType":"YulFunctionCall","src":"9182:19:20"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"9177:1:20"}]}]},"pre":{"nodeType":"YulBlock","src":"9156:3:20","statements":[]},"src":"9152:236:20"},{"body":{"nodeType":"YulBlock","src":"9436:166:20","statements":[{"nodeType":"YulVariableDeclaration","src":"9454:43:20","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9481:3:20"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"9486:9:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9477:3:20"},"nodeType":"YulFunctionCall","src":"9477:19:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9471:5:20"},"nodeType":"YulFunctionCall","src":"9471:26:20"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"9458:9:20","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"9521:6:20"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"9533:9:20"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9560:1:20","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"9563:6:20"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9556:3:20"},"nodeType":"YulFunctionCall","src":"9556:14:20"},{"kind":"number","nodeType":"YulLiteral","src":"9572:3:20","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9552:3:20"},"nodeType":"YulFunctionCall","src":"9552:24:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9582:1:20","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"9578:3:20"},"nodeType":"YulFunctionCall","src":"9578:6:20"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"9548:3:20"},"nodeType":"YulFunctionCall","src":"9548:37:20"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"9544:3:20"},"nodeType":"YulFunctionCall","src":"9544:42:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9529:3:20"},"nodeType":"YulFunctionCall","src":"9529:58:20"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"9514:6:20"},"nodeType":"YulFunctionCall","src":"9514:74:20"},"nodeType":"YulExpressionStatement","src":"9514:74:20"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"9407:7:20"},{"name":"newLen","nodeType":"YulIdentifier","src":"9416:6:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9404:2:20"},"nodeType":"YulFunctionCall","src":"9404:19:20"},"nodeType":"YulIf","src":"9401:201:20"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"9622:4:20"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9636:1:20","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"9639:6:20"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9632:3:20"},"nodeType":"YulFunctionCall","src":"9632:14:20"},{"kind":"number","nodeType":"YulLiteral","src":"9648:1:20","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9628:3:20"},"nodeType":"YulFunctionCall","src":"9628:22:20"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"9615:6:20"},"nodeType":"YulFunctionCall","src":"9615:36:20"},"nodeType":"YulExpressionStatement","src":"9615:36:20"}]},"nodeType":"YulCase","src":"8998:663:20","value":{"kind":"number","nodeType":"YulLiteral","src":"9003:1:20","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"9678:234:20","statements":[{"nodeType":"YulVariableDeclaration","src":"9692:14:20","value":{"kind":"number","nodeType":"YulLiteral","src":"9705:1:20","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"9696:5:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"9741:67:20","statements":[{"nodeType":"YulAssignment","src":"9759:35:20","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9778:3:20"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"9783:9:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9774:3:20"},"nodeType":"YulFunctionCall","src":"9774:19:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9768:5:20"},"nodeType":"YulFunctionCall","src":"9768:26:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"9759:5:20"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"9722:6:20"},"nodeType":"YulIf","src":"9719:89:20"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"9828:4:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9887:5:20"},{"name":"newLen","nodeType":"YulIdentifier","src":"9894:6:20"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"9834:52:20"},"nodeType":"YulFunctionCall","src":"9834:67:20"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"9821:6:20"},"nodeType":"YulFunctionCall","src":"9821:81:20"},"nodeType":"YulExpressionStatement","src":"9821:81:20"}]},"nodeType":"YulCase","src":"9670:242:20","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8978:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"8986:2:20","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8975:2:20"},"nodeType":"YulFunctionCall","src":"8975:14:20"},"nodeType":"YulSwitch","src":"8968:944:20"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"8647:4:20","type":""},{"name":"src","nodeType":"YulTypedName","src":"8653:3:20","type":""}],"src":"8566:1352:20"},{"body":{"nodeType":"YulBlock","src":"10080:218:20","statements":[{"nodeType":"YulAssignment","src":"10090:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10102:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"10113:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10098:3:20"},"nodeType":"YulFunctionCall","src":"10098:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10090:4:20"}]},{"nodeType":"YulVariableDeclaration","src":"10125:29:20","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10143:3:20","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"10148:1:20","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"10139:3:20"},"nodeType":"YulFunctionCall","src":"10139:11:20"},{"kind":"number","nodeType":"YulLiteral","src":"10152:1:20","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10135:3:20"},"nodeType":"YulFunctionCall","src":"10135:19:20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"10129:2:20","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10170:9:20"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10185:6:20"},{"name":"_1","nodeType":"YulIdentifier","src":"10193:2:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10181:3:20"},"nodeType":"YulFunctionCall","src":"10181:15:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10163:6:20"},"nodeType":"YulFunctionCall","src":"10163:34:20"},"nodeType":"YulExpressionStatement","src":"10163:34:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10217:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"10228:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10213:3:20"},"nodeType":"YulFunctionCall","src":"10213:18:20"},{"name":"value1","nodeType":"YulIdentifier","src":"10233:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10206:6:20"},"nodeType":"YulFunctionCall","src":"10206:34:20"},"nodeType":"YulExpressionStatement","src":"10206:34:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10260:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"10271:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10256:3:20"},"nodeType":"YulFunctionCall","src":"10256:18:20"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"10280:6:20"},{"name":"_1","nodeType":"YulIdentifier","src":"10288:2:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10276:3:20"},"nodeType":"YulFunctionCall","src":"10276:15:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10249:6:20"},"nodeType":"YulFunctionCall","src":"10249:43:20"},"nodeType":"YulExpressionStatement","src":"10249:43:20"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10033:9:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10044:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10052:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10060:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10071:4:20","type":""}],"src":"9923:375:20"},{"body":{"nodeType":"YulBlock","src":"10490:309:20","statements":[{"nodeType":"YulVariableDeclaration","src":"10500:27:20","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10520:6:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10514:5:20"},"nodeType":"YulFunctionCall","src":"10514:13:20"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"10504:6:20","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10575:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"10583:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10571:3:20"},"nodeType":"YulFunctionCall","src":"10571:17:20"},{"name":"pos","nodeType":"YulIdentifier","src":"10590:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"10595:6:20"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"10536:34:20"},"nodeType":"YulFunctionCall","src":"10536:66:20"},"nodeType":"YulExpressionStatement","src":"10536:66:20"},{"nodeType":"YulVariableDeclaration","src":"10611:29:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10628:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"10633:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10624:3:20"},"nodeType":"YulFunctionCall","src":"10624:16:20"},"variables":[{"name":"end_1","nodeType":"YulTypedName","src":"10615:5:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"10649:29:20","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"10671:6:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10665:5:20"},"nodeType":"YulFunctionCall","src":"10665:13:20"},"variables":[{"name":"length_1","nodeType":"YulTypedName","src":"10653:8:20","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"10726:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"10734:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10722:3:20"},"nodeType":"YulFunctionCall","src":"10722:17:20"},{"name":"end_1","nodeType":"YulIdentifier","src":"10741:5:20"},{"name":"length_1","nodeType":"YulIdentifier","src":"10748:8:20"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"10687:34:20"},"nodeType":"YulFunctionCall","src":"10687:70:20"},"nodeType":"YulExpressionStatement","src":"10687:70:20"},{"nodeType":"YulAssignment","src":"10766:27:20","value":{"arguments":[{"name":"end_1","nodeType":"YulIdentifier","src":"10777:5:20"},{"name":"length_1","nodeType":"YulIdentifier","src":"10784:8:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10773:3:20"},"nodeType":"YulFunctionCall","src":"10773:20:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10766:3:20"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10458:3:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10463:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10471:6:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10482:3:20","type":""}],"src":"10303:496:20"},{"body":{"nodeType":"YulBlock","src":"11007:286:20","statements":[{"nodeType":"YulVariableDeclaration","src":"11017:29:20","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11035:3:20","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"11040:1:20","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11031:3:20"},"nodeType":"YulFunctionCall","src":"11031:11:20"},{"kind":"number","nodeType":"YulLiteral","src":"11044:1:20","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11027:3:20"},"nodeType":"YulFunctionCall","src":"11027:19:20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"11021:2:20","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11062:9:20"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11077:6:20"},{"name":"_1","nodeType":"YulIdentifier","src":"11085:2:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11073:3:20"},"nodeType":"YulFunctionCall","src":"11073:15:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11055:6:20"},"nodeType":"YulFunctionCall","src":"11055:34:20"},"nodeType":"YulExpressionStatement","src":"11055:34:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11109:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"11120:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11105:3:20"},"nodeType":"YulFunctionCall","src":"11105:18:20"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11129:6:20"},{"name":"_1","nodeType":"YulIdentifier","src":"11137:2:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11125:3:20"},"nodeType":"YulFunctionCall","src":"11125:15:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11098:6:20"},"nodeType":"YulFunctionCall","src":"11098:43:20"},"nodeType":"YulExpressionStatement","src":"11098:43:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11161:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"11172:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11157:3:20"},"nodeType":"YulFunctionCall","src":"11157:18:20"},{"name":"value2","nodeType":"YulIdentifier","src":"11177:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11150:6:20"},"nodeType":"YulFunctionCall","src":"11150:34:20"},"nodeType":"YulExpressionStatement","src":"11150:34:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11204:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"11215:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11200:3:20"},"nodeType":"YulFunctionCall","src":"11200:18:20"},{"kind":"number","nodeType":"YulLiteral","src":"11220:3:20","type":"","value":"128"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11193:6:20"},"nodeType":"YulFunctionCall","src":"11193:31:20"},"nodeType":"YulExpressionStatement","src":"11193:31:20"},{"nodeType":"YulAssignment","src":"11233:54:20","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"11259:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11271:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"11282:3:20","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11267:3:20"},"nodeType":"YulFunctionCall","src":"11267:19:20"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"11241:17:20"},"nodeType":"YulFunctionCall","src":"11241:46:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11233:4:20"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10952:9:20","type":""},{"name":"value3","nodeType":"YulTypedName","src":"10963:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10971:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10979:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10987:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10998:4:20","type":""}],"src":"10804:489:20"},{"body":{"nodeType":"YulBlock","src":"11378:169:20","statements":[{"body":{"nodeType":"YulBlock","src":"11424:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11433:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11436:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11426:6:20"},"nodeType":"YulFunctionCall","src":"11426:12:20"},"nodeType":"YulExpressionStatement","src":"11426:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11399:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"11408:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11395:3:20"},"nodeType":"YulFunctionCall","src":"11395:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"11420:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11391:3:20"},"nodeType":"YulFunctionCall","src":"11391:32:20"},"nodeType":"YulIf","src":"11388:52:20"},{"nodeType":"YulVariableDeclaration","src":"11449:29:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11468:9:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11462:5:20"},"nodeType":"YulFunctionCall","src":"11462:16:20"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"11453:5:20","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11511:5:20"}],"functionName":{"name":"validator_revert_bytes4","nodeType":"YulIdentifier","src":"11487:23:20"},"nodeType":"YulFunctionCall","src":"11487:30:20"},"nodeType":"YulExpressionStatement","src":"11487:30:20"},{"nodeType":"YulAssignment","src":"11526:15:20","value":{"name":"value","nodeType":"YulIdentifier","src":"11536:5:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11526:6:20"}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11344:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11355:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11367:6:20","type":""}],"src":"11298:249:20"},{"body":{"nodeType":"YulBlock","src":"11584:95:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11601:1:20","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11608:3:20","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"11613:10:20","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11604:3:20"},"nodeType":"YulFunctionCall","src":"11604:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11594:6:20"},"nodeType":"YulFunctionCall","src":"11594:31:20"},"nodeType":"YulExpressionStatement","src":"11594:31:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11641:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"11644:4:20","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11634:6:20"},"nodeType":"YulFunctionCall","src":"11634:15:20"},"nodeType":"YulExpressionStatement","src":"11634:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11665:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11668:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11658:6:20"},"nodeType":"YulFunctionCall","src":"11658:15:20"},"nodeType":"YulExpressionStatement","src":"11658:15:20"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"11552:127:20"},{"body":{"nodeType":"YulBlock","src":"11813:145:20","statements":[{"nodeType":"YulAssignment","src":"11823:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11835:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"11846:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11831:3:20"},"nodeType":"YulFunctionCall","src":"11831:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11823:4:20"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11865:9:20"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11880:6:20"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11896:3:20","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"11901:1:20","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11892:3:20"},"nodeType":"YulFunctionCall","src":"11892:11:20"},{"kind":"number","nodeType":"YulLiteral","src":"11905:1:20","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11888:3:20"},"nodeType":"YulFunctionCall","src":"11888:19:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11876:3:20"},"nodeType":"YulFunctionCall","src":"11876:32:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11858:6:20"},"nodeType":"YulFunctionCall","src":"11858:51:20"},"nodeType":"YulExpressionStatement","src":"11858:51:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11929:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"11940:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11925:3:20"},"nodeType":"YulFunctionCall","src":"11925:18:20"},{"name":"value1","nodeType":"YulIdentifier","src":"11945:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11918:6:20"},"nodeType":"YulFunctionCall","src":"11918:34:20"},"nodeType":"YulExpressionStatement","src":"11918:34:20"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11774:9:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11785:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11793:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11804:4:20","type":""}],"src":"11684:274:20"}]},"contents":"{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_available_length_string(src, length, end) -> array\n    {\n        let _1 := 0xffffffffffffffff\n        if gt(length, _1) { panic_error_0x41() }\n        let _2 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 31), _2), 63), _2))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        array := memPtr\n        mstore(memPtr, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), src, length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n    }\n    function abi_decode_tuple_t_addresst_string_memory_ptrt_enum$_VerificationTier_$6389t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value1 := abi_decode_available_length_string(add(_1, 32), calldataload(_1), dataEnd)\n        let value := calldataload(add(headStart, 64))\n        if iszero(lt(value, 3)) { revert(0, 0) }\n        value2 := value\n        value3 := calldataload(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_struct$_PolicyMetadata_$7168_memory_ptr__to_t_struct$_PolicyMetadata_$7168_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let memberValue0 := mload(value0)\n        mstore(add(headStart, 32), 0xa0)\n        let tail_1 := abi_encode_string(memberValue0, add(headStart, 192))\n        mstore(add(headStart, 64), mload(add(value0, 32)))\n        let memberValue0_1 := mload(add(value0, 64))\n        if iszero(lt(memberValue0_1, 3))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(add(headStart, 96), memberValue0_1)\n        mstore(add(headStart, 128), mload(add(value0, 96)))\n        mstore(add(headStart, 0xa0), mload(add(value0, 128)))\n        tail := tail_1\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value3 := abi_decode_available_length_string(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_0588848746f24b7ecbd0725ab3d6ece869f8091407a74cd56eca3bc5c7d9b270__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Caller is not InsuranceCore\")\n        tail := add(headStart, 96)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        ret := add(value, 1)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, _1))\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), end_1, length_1)\n        end := add(end_1, length_1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n}","id":20,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x137 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0xCA009021 EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x2C6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0xF457A0FE EQ PUSH2 0x2EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0x8CF7A293 EQ PUSH2 0x241 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x27A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x239036C0 GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x239036C0 EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x226 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x179 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0x21A9BFE8 EQ PUSH2 0x1B9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14F PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0x118A JUMP JUMPDEST PUSH2 0x2FF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH2 0x351 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15B SWAP2 SWAP1 PUSH2 0x11F7 JUMP JUMPDEST PUSH2 0x18C PUSH2 0x187 CALLDATASIZE PUSH1 0x4 PUSH2 0x120A JUMP JUMPDEST PUSH2 0x3E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x15B JUMP JUMPDEST PUSH2 0x1B7 PUSH2 0x1B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x123F JUMP JUMPDEST PUSH2 0x40C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CC PUSH2 0x1C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x12F5 JUMP JUMPDEST PUSH2 0x41B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x15B JUMP JUMPDEST PUSH2 0x1B7 PUSH2 0x1E8 CALLDATASIZE PUSH1 0x4 PUSH2 0x137F JUMP JUMPDEST PUSH2 0x54C JUMP JUMPDEST PUSH2 0x1B7 PUSH2 0x1FB CALLDATASIZE PUSH1 0x4 PUSH2 0x139A JUMP JUMPDEST PUSH2 0x576 JUMP JUMPDEST PUSH2 0x1B7 PUSH2 0x20E CALLDATASIZE PUSH1 0x4 PUSH2 0x139A JUMP JUMPDEST PUSH2 0x601 JUMP JUMPDEST PUSH2 0x18C PUSH2 0x221 CALLDATASIZE PUSH1 0x4 PUSH2 0x120A JUMP JUMPDEST PUSH2 0x621 JUMP JUMPDEST PUSH2 0x1CC PUSH2 0x234 CALLDATASIZE PUSH1 0x4 PUSH2 0x137F JUMP JUMPDEST PUSH2 0x62C JUMP JUMPDEST PUSH2 0x1B7 PUSH2 0x674 JUMP JUMPDEST PUSH2 0x254 PUSH2 0x24F CALLDATASIZE PUSH1 0x4 PUSH2 0x120A JUMP JUMPDEST PUSH2 0x688 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15B SWAP2 SWAP1 PUSH2 0x13EC JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x18C JUMP JUMPDEST PUSH2 0x16C PUSH2 0x791 JUMP JUMPDEST PUSH2 0x1B7 PUSH2 0x288 CALLDATASIZE PUSH1 0x4 PUSH2 0x145C JUMP JUMPDEST PUSH2 0x7A0 JUMP JUMPDEST PUSH2 0x1B7 PUSH2 0x29B CALLDATASIZE PUSH1 0x4 PUSH2 0x1498 JUMP JUMPDEST PUSH2 0x7AB JUMP JUMPDEST PUSH2 0x16C PUSH2 0x2AE CALLDATASIZE PUSH1 0x4 PUSH2 0x120A JUMP JUMPDEST PUSH2 0x7C3 JUMP JUMPDEST PUSH2 0x18C PUSH2 0x2C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x120A JUMP JUMPDEST PUSH2 0x838 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x2D4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1514 JUMP JUMPDEST PUSH2 0x843 JUMP JUMPDEST PUSH2 0x1B7 PUSH2 0x2E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x137F JUMP JUMPDEST PUSH2 0x871 JUMP JUMPDEST PUSH2 0x1B7 PUSH2 0x2FA CALLDATASIZE PUSH1 0x4 PUSH2 0x120A JUMP JUMPDEST PUSH2 0x8AF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x330 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x34B JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x360 SWAP1 PUSH2 0x1547 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x38C SWAP1 PUSH2 0x1547 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3D9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3AE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3D9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3BC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EE DUP3 PUSH2 0x951 JUMP JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x34B JUMP JUMPDEST PUSH2 0x417 DUP3 DUP3 CALLER PUSH2 0x98A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x47D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206973206E6F7420496E737572616E6365436F72650000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x0 SWAP2 DUP3 PUSH2 0x48E DUP4 PUSH2 0x1581 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x4BD JUMPI PUSH2 0x4BD PUSH2 0x13D6 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP8 SWAP1 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD DUP7 SWAP1 MSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE KECCAK256 DUP2 MLOAD DUP2 SWAP1 PUSH2 0x4E8 SWAP1 DUP3 PUSH2 0x15EE JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x51D JUMPI PUSH2 0x51D PUSH2 0x13D6 JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0x80 SWAP1 SWAP2 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD SSTORE PUSH2 0x542 DUP8 DUP3 PUSH2 0x997 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x554 PUSH2 0x9B1 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5A0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x474 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5AD DUP4 DUP4 CALLER PUSH2 0x9DE JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x5FB JUMPI PUSH1 0x40 MLOAD PUSH4 0x64283D7B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x474 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x61C DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x7AB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34B DUP3 PUSH2 0x951 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x658 JUMPI PUSH1 0x40 MLOAD PUSH4 0x22718AD9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x474 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x67C PUSH2 0x9B1 JUMP JUMPDEST PUSH2 0x686 PUSH1 0x0 PUSH2 0xAD7 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x690 PUSH2 0x10E6 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP2 MLOAD PUSH1 0xA0 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP3 SWAP1 DUP3 SWAP1 PUSH2 0x6B8 SWAP1 PUSH2 0x1547 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6E4 SWAP1 PUSH2 0x1547 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x731 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x706 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x731 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x714 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2 DUP1 DUP4 ADD SLOAD PUSH1 0x40 SWAP1 SWAP3 ADD SWAP2 PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0x762 JUMPI PUSH2 0x762 PUSH2 0x13D6 JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x773 JUMPI PUSH2 0x773 PUSH2 0x13D6 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x4 SWAP1 SWAP2 ADD SLOAD PUSH1 0x40 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x360 SWAP1 PUSH2 0x1547 JUMP JUMPDEST PUSH2 0x417 CALLER DUP4 DUP4 PUSH2 0xB29 JUMP JUMPDEST PUSH2 0x7B6 DUP5 DUP5 DUP5 PUSH2 0x576 JUMP JUMPDEST PUSH2 0x5FB CALLER DUP6 DUP6 DUP6 DUP6 PUSH2 0xBC8 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x7CE DUP3 PUSH2 0x951 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x7E6 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x806 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x831 JUMP JUMPDEST DUP1 PUSH2 0x810 DUP5 PUSH2 0xCF3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x821 SWAP3 SWAP2 SWAP1 PUSH2 0x16AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34B DUP3 PUSH2 0x621 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x879 PUSH2 0x9B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x8A3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x474 JUMP JUMPDEST PUSH2 0x8AC DUP2 PUSH2 0xAD7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x909 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206973206E6F7420496E737572616E6365436F72650000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x474 JUMP JUMPDEST PUSH2 0x912 DUP2 PUSH2 0xD86 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x92B DUP3 DUP3 PUSH2 0x1126 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x1 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x3 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x4 SWAP1 SWAP2 ADD SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x34B JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x474 JUMP JUMPDEST PUSH2 0x61C DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xDC1 JUMP JUMPDEST PUSH2 0x417 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xEC7 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x686 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x474 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND ISZERO PUSH2 0xA0B JUMPI PUSH2 0xA0B DUP2 DUP5 DUP7 PUSH2 0xEDF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xA49 JUMPI PUSH2 0xA28 PUSH1 0x0 DUP6 PUSH1 0x0 DUP1 PUSH2 0xDC1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH2 0xA78 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP8 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB5B JUMPI PUSH1 0x40 MLOAD PUSH4 0xB611743 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x474 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0xCEC JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xC0A SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x16DD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xC45 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xC42 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1710 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xCAE JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xC73 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xC78 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xCA6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x474 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ PUSH2 0xCEA JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x474 JUMP JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xD00 DUP4 PUSH2 0xF43 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD20 JUMPI PUSH2 0xD20 PUSH2 0x1269 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xD4A JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0xD54 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD95 PUSH1 0x0 DUP4 PUSH1 0x0 PUSH2 0x9DE JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x417 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x474 JUMP JUMPDEST DUP1 DUP1 PUSH2 0xDD5 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0xE97 JUMPI PUSH1 0x0 PUSH2 0xDE5 DUP5 PUSH2 0x951 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xE11 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xE24 JUMPI POP PUSH2 0xE22 DUP2 DUP5 PUSH2 0x843 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xE4D JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9FBF51F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x474 JUMP JUMPDEST DUP2 ISZERO PUSH2 0xE95 JUMPI DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xED1 DUP4 DUP4 PUSH2 0x101B JUMP JUMPDEST PUSH2 0x61C CALLER PUSH1 0x0 DUP6 DUP6 DUP6 PUSH2 0xBC8 JUMP JUMPDEST PUSH2 0xEEA DUP4 DUP4 DUP4 PUSH2 0x1080 JUMP JUMPDEST PUSH2 0x61C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xF18 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x474 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x177E802F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x474 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0xF82 JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0xFAE JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0xFCC JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0xFE4 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0xFF8 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x100A JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x34B JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1045 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x474 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1053 DUP4 DUP4 PUSH1 0x0 PUSH2 0x9DE JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x61C JUMPI PUSH1 0x40 MLOAD PUSH4 0x39E35637 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x474 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x10DE JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x10BA JUMPI POP PUSH2 0x10BA DUP5 DUP5 PUSH2 0x843 JUMP JUMPDEST DUP1 PUSH2 0x10DE JUMPI POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1112 JUMPI PUSH2 0x1112 PUSH2 0x13D6 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x1132 SWAP1 PUSH2 0x1547 JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x1142 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x8AC SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1170 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x115C JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x8AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x119C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x831 DUP2 PUSH2 0x1174 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x11C2 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x11AA JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x11E3 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x11A7 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x831 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x11CB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x121C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x123A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1252 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x125B DUP4 PUSH2 0x1223 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x129A JUMPI PUSH2 0x129A PUSH2 0x1269 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x12C2 JUMPI PUSH2 0x12C2 PUSH2 0x1269 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x12DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x130D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1316 DUP7 PUSH2 0x1223 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1332 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 ADD PUSH1 0x1F DUP2 ADD DUP9 SGT PUSH2 0x1343 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1352 DUP9 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x127F JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH1 0x3 DUP2 LT PUSH2 0x1367 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 SWAP8 SWAP4 SWAP7 POP SWAP4 SWAP5 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1391 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x831 DUP3 PUSH2 0x1223 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x13AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13B8 DUP5 PUSH2 0x1223 JUMP JUMPDEST SWAP3 POP PUSH2 0x13C6 PUSH1 0x20 DUP6 ADD PUSH2 0x1223 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH1 0xA0 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1408 PUSH1 0xC0 DUP5 ADD DUP3 PUSH2 0x11CB JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x3 DUP2 LT PUSH2 0x1437 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 PUSH1 0x60 DUP6 ADD MSTORE POP PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x80 DUP5 ADD MLOAD PUSH1 0xA0 DUP5 ADD MSTORE DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x146F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1478 DUP4 PUSH2 0x1223 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x148D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x14AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14B7 DUP6 PUSH2 0x1223 JUMP JUMPDEST SWAP4 POP PUSH2 0x14C5 PUSH1 0x20 DUP7 ADD PUSH2 0x1223 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x14F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1508 DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x127F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1527 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1530 DUP4 PUSH2 0x1223 JUMP JUMPDEST SWAP2 POP PUSH2 0x153E PUSH1 0x20 DUP5 ADD PUSH2 0x1223 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x155B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x157B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x15A1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x61C JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x15CF JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xCEA JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x15DB JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1608 JUMPI PUSH2 0x1608 PUSH2 0x1269 JUMP JUMPDEST PUSH2 0x161C DUP2 PUSH2 0x1616 DUP5 SLOAD PUSH2 0x1547 JUMP JUMPDEST DUP5 PUSH2 0x15A8 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1651 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1639 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0xCEA JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1680 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x1661 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x169E JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x16C0 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x11A7 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x16D4 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x11A7 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x542 SWAP1 DUP4 ADD DUP5 PUSH2 0x11CB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1722 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x831 DUP2 PUSH2 0x1174 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG4 0xE6 0xED 0xF EQ NOT 0xCD LOG1 DUP2 PUSH24 0xE0686FAD6AB064FB2F49833ADC556B4E199319E7FD896473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"200:1683:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1560:300:2;;;;;;:::i;:::-;;:::i;:::-;;;565:14:20;;558:22;540:41;;528:2;513:18;1560:300:2;;;;;;;;2364:89;;;:::i;:::-;;;;;;;:::i;3496:154::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1697:32:20;;;1679:51;;1667:2;1652:18;3496:154:2;1533:203:20;3322:113:2;;;;;;:::i;:::-;;:::i;:::-;;969:500:18;;;;;;:::i;:::-;;:::i;:::-;;;3926:25:20;;;3914:2;3899:18;969:500:18;3780:177:20;816:143:18;;;;;;:::i;:::-;;:::i;4142:578:2:-;;;;;;:::i;:::-;;:::i;4786:132::-;;;;;;:::i;:::-;;:::i;2184:118::-;;;;;;:::i;:::-;;:::i;1919:208::-;;;;;;:::i;:::-;;:::i;2293:101:0:-;;;:::i;1604:134:18:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1638:85:0:-;1710:6;;-1:-1:-1;;;;;1710:6:0;1638:85;;2517:93:2;;;:::i;3717:144::-;;;;;;:::i;:::-;;:::i;4984:233::-;;;;;;:::i;:::-;;:::i;2676:255::-;;;;;;:::i;:::-;;:::i;1479:115:18:-;;;;;;:::i;:::-;;:::i;3927:153:2:-;;;;;;:::i;:::-;;:::i;2543:215:0:-;;;;;;:::i;:::-;;:::i;1748:133:18:-;;;;;;:::i;:::-;;:::i;1560:300:2:-;1662:4;-1:-1:-1;;;;;;1697:40:2;;-1:-1:-1;;;1697:40:2;;:104;;-1:-1:-1;;;;;;;1753:48:2;;-1:-1:-1;;;1753:48:2;1697:104;:156;;;-1:-1:-1;;;;;;;;;;862:40:11;;;1817:36:2;1678:175;1560:300;-1:-1:-1;;1560:300:2:o;2364:89::-;2409:13;2441:5;2434:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2364:89;:::o;3496:154::-;3563:7;3582:22;3596:7;3582:13;:22::i;:::-;-1:-1:-1;6033:7:2;6059:24;;;:15;:24;;;;;;-1:-1:-1;;;;;6059:24:2;3622:21;5963:127;3322:113;3393:35;3402:2;3406:7;735:10:7;3393:8:2;:35::i;:::-;3322:113;;:::o;969:500:18:-;735:21;;1182:7;;-1:-1:-1;;;;;735:21:18;721:10;:35;713:75;;;;-1:-1:-1;;;713:75:18;;7328:2:20;713:75:18;;;7310:21:20;7367:2;7347:18;;;7340:30;7406:29;7386:18;;;7379:57;7453:18;;713:75:18;;;;;;;;;1220:13:::1;:15:::0;;1201:16:::1;::::0;;1220:15:::1;::::0;::::1;:::i;:::-;;;;;1201:34;;1267:137;;;;;;;;1295:9;1267:137;;;;1318:15;1267:137;;;;1347:4;1267:137;;;;;;;;:::i;:::-;::::0;;::::1;::::0;;::::1;::::0;;;;;;;;;;-1:-1:-1;1245:19:18;;;:9:::1;:19:::0;;;;:159;;:19;;:159:::1;::::0;:19;:159:::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;::::0;;-1:-1:-1;1245:159:18::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;1414:23:::1;1424:2:::0;1428:8;1414:9:::1;:23::i;:::-;1454:8:::0;969:500;-1:-1:-1;;;;;;969:500:18:o;816:143::-;1531:13:0;:11;:13::i;:::-;908:21:18::1;:44:::0;;-1:-1:-1;;;;;;908:44:18::1;-1:-1:-1::0;;;;;908:44:18;;;::::1;::::0;;;::::1;::::0;;816:143::o;4142:578:2:-;-1:-1:-1;;;;;4236:16:2;;4232:87;;4275:33;;-1:-1:-1;;;4275:33:2;;4305:1;4275:33;;;1679:51:20;1652:18;;4275:33:2;1533:203:20;4232:87:2;4537:21;4561:34;4569:2;4573:7;735:10:7;4561:7:2;:34::i;:::-;4537:58;;4626:4;-1:-1:-1;;;;;4609:21:2;:13;-1:-1:-1;;;;;4609:21:2;;4605:109;;4653:50;;-1:-1:-1;;;4653:50:2;;-1:-1:-1;;;;;10181:15:20;;;4653:50:2;;;10163:34:20;10213:18;;;10206:34;;;10276:15;;10256:18;;;10249:43;10098:18;;4653:50:2;9923:375:20;4605:109:2;4222:498;4142:578;;;:::o;4786:132::-;4872:39;4889:4;4895:2;4899:7;4872:39;;;;;;;;;;;;:16;:39::i;:::-;4786:132;;;:::o;2184:118::-;2247:7;2273:22;2287:7;2273:13;:22::i;1919:208::-;1982:7;-1:-1:-1;;;;;2005:19:2;;2001:87;;2047:30;;-1:-1:-1;;;2047:30:2;;2074:1;2047:30;;;1679:51:20;1652:18;;2047:30:2;1533:203:20;2001:87:2;-1:-1:-1;;;;;;2104:16:2;;;;;:9;:16;;;;;;;1919:208::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1604:134:18:-;1672:21;;:::i;:::-;1712:19;;;;:9;:19;;;;;;;1705:26;;;;;;;;;;;;1712:19;;1705:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1705:26:18;;;-1:-1:-1;;1705:26:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;1604:134;-1:-1:-1;;1604:134:18:o;2517:93:2:-;2564:13;2596:7;2589:14;;;;;:::i;3717:144::-;3802:52;735:10:7;3835:8:2;3845;3802:18;:52::i;4984:233::-;5097:31;5110:4;5116:2;5120:7;5097:12;:31::i;:::-;5138:72;735:10:7;5186:4:2;5192:2;5196:7;5205:4;5138:33;:72::i;2676:255::-;2740:13;2765:22;2779:7;2765:13;:22::i;:::-;;2798:21;2822:10;3249:9;;;;;;;;;-1:-1:-1;3249:9:2;;;3173:92;2822:10;2798:34;;2873:1;2855:7;2849:21;:25;:75;;;;;;;;;;;;;;;;;2891:7;2900:18;:7;:16;:18::i;:::-;2877:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2849:75;2842:82;2676:255;-1:-1:-1;;;2676:255:2:o;1479:115:18:-;1544:7;1570:17;1578:8;1570:7;:17::i;3927:153:2:-;-1:-1:-1;;;;;4038:25:2;;;4015:4;4038:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;3927:153::o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;1679:51:20::0;1652:18;;2672:31:0::1;1533:203:20::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1748:133:18:-;735:21;;-1:-1:-1;;;;;735:21:18;721:10;:35;713:75;;;;-1:-1:-1;;;713:75:18;;7328:2:20;713:75:18;;;7310:21:20;7367:2;7347:18;;;7340:30;7406:29;7386:18;;;7379:57;7453:18;;713:75:18;7126:351:20;713:75:18;1823:15:::1;1829:8;1823:5;:15::i;:::-;1855:19;::::0;;;:9:::1;:19;::::0;;;;;1848:26:::1;1855:19:::0;;1848:26:::1;:::i;:::-;-1:-1:-1::0;1848:26:18::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;-1:-1:-1;;1848:26:18::1;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;;::::1;::::0;-1:-1:-1;1748:133:18:o;16212:241:2:-;16275:7;5824:16;;;:7;:16;;;;;;-1:-1:-1;;;;;5824:16:2;;16337:88;;16383:31;;-1:-1:-1;;;16383:31:2;;;;;3926:25:20;;;3899:18;;16383:31:2;3780:177:20;14492:120:2;14572:33;14581:2;14585:7;14594:4;14600;14572:8;:33::i;10656:100::-;10723:26;10733:2;10737:7;10723:26;;;;;;;;;;;;:9;:26::i;1796:162:0:-;1710:6;;-1:-1:-1;;;;;1710:6:0;735:10:7;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:7;1901:40:0;;;1679:51:20;1652:18;;1901:40:0;1533:203:20;8861:795:2;8947:7;5824:16;;;:7;:16;;;;;;-1:-1:-1;;;;;5824:16:2;;;;9058:18;;;9054:86;;9092:37;9109:4;9115;9121:7;9092:16;:37::i;:::-;-1:-1:-1;;;;;9184:18:2;;;9180:256;;9300:48;9317:1;9321:7;9338:1;9342:5;9300:8;:48::i;:::-;-1:-1:-1;;;;;9391:15:2;;;;;;:9;:15;;;;;:20;;-1:-1:-1;;9391:20:2;;;9180:256;-1:-1:-1;;;;;9450:16:2;;;9446:107;;-1:-1:-1;;;;;9510:13:2;;;;;;:9;:13;;;;;:18;;9527:1;9510:18;;;9446:107;9563:16;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9563:21:2;-1:-1:-1;;;;;9563:21:2;;;;;;;;;9600:27;;9563:16;;9600:27;;;;;;;9645:4;8861:795;-1:-1:-1;;;;8861:795:2:o;2912:187:0:-;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;15665:312:2:-;-1:-1:-1;;;;;15772:22:2;;15768:91;;15817:31;;-1:-1:-1;;;15817:31:2;;-1:-1:-1;;;;;1697:32:20;;15817:31:2;;;1679:51:20;1652:18;;15817:31:2;1533:203:20;15768:91:2;-1:-1:-1;;;;;15868:25:2;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;15868:46:2;;;;;;;;;;15929:41;;540::20;;;15929::2;;513:18:20;15929:41:2;;;;;;;15665:312;;;:::o;985:924:6:-;-1:-1:-1;;;;;1165:14:6;;;:18;1161:742;;1203:67;;-1:-1:-1;;;1203:67:6;;-1:-1:-1;;;;;1203:36:6;;;;;:67;;1240:8;;1250:4;;1256:7;;1265:4;;1203:67;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1203:67:6;;;;;;;;-1:-1:-1;;1203:67:6;;;;;;;;;;;;:::i;:::-;;;1199:694;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1560:6;:13;1577:1;1560:18;1556:323;;1664:39;;-1:-1:-1;;;1664:39:6;;-1:-1:-1;;;;;1697:32:20;;1664:39:6;;;1679:51:20;1652:18;;1664:39:6;1533:203:20;1556:323:6;1831:6;1825:13;1816:6;1812:2;1808:15;1801:38;1199:694;-1:-1:-1;;;;;;1317:51:6;;-1:-1:-1;;;1317:51:6;1313:182;;1437:39;;-1:-1:-1;;;1437:39:6;;-1:-1:-1;;;;;1697:32:20;;1437:39:6;;;1679:51:20;1652:18;;1437:39:6;1533:203:20;1313:182:6;1271:238;1199:694;985:924;;;;;:::o;987:632:10:-;1043:13;1092:14;1109:17;1120:5;1109:10;:17::i;:::-;1129:1;1109:21;1092:38;;1144:20;1178:6;1167:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1167:18:10;-1:-1:-1;1144:41:10;-1:-1:-1;1274:28:10;;;1290:2;1274:28;1329:247;-1:-1:-1;;1360:5:10;-1:-1:-1;;;1459:2:10;1448:14;;1443:32;1360:5;1430:46;1520:2;1511:11;;;-1:-1:-1;1540:21:10;1329:247;1540:21;-1:-1:-1;1596:6:10;987:632;-1:-1:-1;;;987:632:10:o;11510:227:2:-;11561:21;11585:40;11601:1;11605:7;11622:1;11585:7;:40::i;:::-;11561:64;-1:-1:-1;;;;;;11639:27:2;;11635:96;;11689:31;;-1:-1:-1;;;11689:31:2;;;;;3926:25:20;;;3899:18;;11689:31:2;3780:177:20;14794:662:2;14954:9;:31;;;-1:-1:-1;;;;;;14967:18:2;;;;14954:31;14950:460;;;15001:13;15017:22;15031:7;15017:13;:22::i;:::-;15001:38;-1:-1:-1;;;;;;15167:18:2;;;;;;:35;;;15198:4;-1:-1:-1;;;;;15189:13:2;:5;-1:-1:-1;;;;;15189:13:2;;;15167:35;:69;;;;;15207:29;15224:5;15231:4;15207:16;:29::i;:::-;15206:30;15167:69;15163:142;;;15263:27;;-1:-1:-1;;;15263:27:2;;-1:-1:-1;;;;;1697:32:20;;15263:27:2;;;1679:51:20;1652:18;;15263:27:2;1533:203:20;15163:142:2;15323:9;15319:81;;;15377:7;15373:2;-1:-1:-1;;;;;15357:28:2;15366:5;-1:-1:-1;;;;;15357:28:2;;;;;;;;;;;15319:81;14987:423;14950:460;-1:-1:-1;;15420:24:2;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;15420:29:2;-1:-1:-1;;;;;15420:29:2;;;;;;;;;;14794:662::o;10977:207::-;11071:18;11077:2;11081:7;11071:5;:18::i;:::-;11099:78;735:10:7;11155:1:2;11159:2;11163:7;11172:4;11099:33;:78::i;7105:368::-;7217:38;7231:5;7238:7;7247;7217:13;:38::i;:::-;7212:255;;-1:-1:-1;;;;;7275:19:2;;7271:186;;7321:31;;-1:-1:-1;;;7321:31:2;;;;;3926:25:20;;;3899:18;;7321:31:2;3780:177:20;7271:186:2;7398:44;;-1:-1:-1;;;7398:44:2;;-1:-1:-1;;;;;11876:32:20;;7398:44:2;;;11858:51:20;11925:18;;;11918:34;;;11831:18;;7398:44:2;11684:274:20;25316:916:13;25369:7;;-1:-1:-1;;;25444:17:13;;25440:103;;-1:-1:-1;;;25481:17:13;;;-1:-1:-1;25526:2:13;25516:12;25440:103;25569:8;25560:5;:17;25556:103;;25606:8;25597:17;;;-1:-1:-1;25642:2:13;25632:12;25556:103;25685:8;25676:5;:17;25672:103;;25722:8;25713:17;;;-1:-1:-1;25758:2:13;25748:12;25672:103;25801:7;25792:5;:16;25788:100;;25837:7;25828:16;;;-1:-1:-1;25872:1:13;25862:11;25788:100;25914:7;25905:5;:16;25901:100;;25950:7;25941:16;;;-1:-1:-1;25985:1:13;25975:11;25901:100;26027:7;26018:5;:16;26014:100;;26063:7;26054:16;;;-1:-1:-1;26098:1:13;26088:11;26014:100;26140:7;26131:5;:16;26127:66;;26177:1;26167:11;26219:6;25316:916;-1:-1:-1;;25316:916:13:o;9978:327:2:-;-1:-1:-1;;;;;10045:16:2;;10041:87;;10084:33;;-1:-1:-1;;;10084:33:2;;10114:1;10084:33;;;1679:51:20;1652:18;;10084:33:2;1533:203:20;10041:87:2;10137:21;10161:32;10169:2;10173:7;10190:1;10161:7;:32::i;:::-;10137:56;-1:-1:-1;;;;;;10207:27:2;;;10203:96;;10257:31;;-1:-1:-1;;;10257:31:2;;10285:1;10257:31;;;1679:51:20;1652:18;;10257:31:2;1533:203:20;6401:272:2;6504:4;-1:-1:-1;;;;;6539:21:2;;;;;;:127;;;6586:7;-1:-1:-1;;;;;6577:16:2;:5;-1:-1:-1;;;;;6577:16:2;;:52;;;;6597:32;6614:5;6621:7;6597:16;:32::i;:::-;6577:88;;;-1:-1:-1;6033:7:2;6059:24;;;:15;:24;;;;;;-1:-1:-1;;;;;6633:32:2;;;6059:24;;6633:32;6577:88;6520:146;6401:272;-1:-1:-1;;;;6401:272:2:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:131:20:-;-1:-1:-1;;;;;;88:32:20;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:250::-;677:1;687:113;701:6;698:1;695:13;687:113;;;777:11;;;771:18;758:11;;;751:39;723:2;716:10;687:113;;;-1:-1:-1;;834:1:20;816:16;;809:27;592:250::o;847:271::-;889:3;927:5;921:12;954:6;949:3;942:19;970:76;1039:6;1032:4;1027:3;1023:14;1016:4;1009:5;1005:16;970:76;:::i;:::-;1100:2;1079:15;-1:-1:-1;;1075:29:20;1066:39;;;;1107:4;1062:50;;847:271;-1:-1:-1;;847:271:20:o;1123:220::-;1272:2;1261:9;1254:21;1235:4;1292:45;1333:2;1322:9;1318:18;1310:6;1292:45;:::i;1348:180::-;1407:6;1460:2;1448:9;1439:7;1435:23;1431:32;1428:52;;;1476:1;1473;1466:12;1428:52;-1:-1:-1;1499:23:20;;1348:180;-1:-1:-1;1348:180:20:o;1741:173::-;1809:20;;-1:-1:-1;;;;;1858:31:20;;1848:42;;1838:70;;1904:1;1901;1894:12;1838:70;1741:173;;;:::o;1919:254::-;1987:6;1995;2048:2;2036:9;2027:7;2023:23;2019:32;2016:52;;;2064:1;2061;2054:12;2016:52;2087:29;2106:9;2087:29;:::i;:::-;2077:39;2163:2;2148:18;;;;2135:32;;-1:-1:-1;;;1919:254:20:o;2178:127::-;2239:10;2234:3;2230:20;2227:1;2220:31;2270:4;2267:1;2260:15;2294:4;2291:1;2284:15;2310:632;2375:5;2405:18;2446:2;2438:6;2435:14;2432:40;;;2452:18;;:::i;:::-;2527:2;2521:9;2495:2;2581:15;;-1:-1:-1;;2577:24:20;;;2603:2;2573:33;2569:42;2557:55;;;2627:18;;;2647:22;;;2624:46;2621:72;;;2673:18;;:::i;:::-;2713:10;2709:2;2702:22;2742:6;2733:15;;2772:6;2764;2757:22;2812:3;2803:6;2798:3;2794:16;2791:25;2788:45;;;2829:1;2826;2819:12;2788:45;2879:6;2874:3;2867:4;2859:6;2855:17;2842:44;2934:1;2927:4;2918:6;2910;2906:19;2902:30;2895:41;;;;2310:632;;;;;:::o;2947:828::-;3073:6;3081;3089;3097;3105;3158:3;3146:9;3137:7;3133:23;3129:33;3126:53;;;3175:1;3172;3165:12;3126:53;3198:29;3217:9;3198:29;:::i;:::-;3188:39;;3278:2;3267:9;3263:18;3250:32;3305:18;3297:6;3294:30;3291:50;;;3337:1;3334;3327:12;3291:50;3360:22;;3413:4;3405:13;;3401:27;-1:-1:-1;3391:55:20;;3442:1;3439;3432:12;3391:55;3465:74;3531:7;3526:2;3513:16;3508:2;3504;3500:11;3465:74;:::i;:::-;3455:84;;;3589:2;3578:9;3574:18;3561:32;3622:1;3615:5;3612:12;3602:40;;3638:1;3635;3628:12;3602:40;2947:828;;;;-1:-1:-1;3661:5:20;;3713:2;3698:18;;3685:32;;-1:-1:-1;3764:3:20;3749:19;3736:33;;2947:828;-1:-1:-1;;2947:828:20:o;3962:186::-;4021:6;4074:2;4062:9;4053:7;4049:23;4045:32;4042:52;;;4090:1;4087;4080:12;4042:52;4113:29;4132:9;4113:29;:::i;4153:328::-;4230:6;4238;4246;4299:2;4287:9;4278:7;4274:23;4270:32;4267:52;;;4315:1;4312;4305:12;4267:52;4338:29;4357:9;4338:29;:::i;:::-;4328:39;;4386:38;4420:2;4409:9;4405:18;4386:38;:::i;:::-;4376:48;;4471:2;4460:9;4456:18;4443:32;4433:42;;4153:328;;;;;:::o;4486:127::-;4547:10;4542:3;4538:20;4535:1;4528:31;4578:4;4575:1;4568:15;4602:4;4599:1;4592:15;4618:829;4811:2;4800:9;4793:21;4774:4;4849:6;4843:13;4892:4;4887:2;4876:9;4872:18;4865:32;4920:52;4967:3;4956:9;4952:19;4938:12;4920:52;:::i;:::-;4906:66;;5026:2;5018:6;5014:15;5008:22;5003:2;4992:9;4988:18;4981:50;5080:2;5072:6;5068:15;5062:22;5122:1;5106:14;5103:21;5093:152;;5167:10;5162:3;5158:20;5155:1;5148:31;5202:4;5199:1;5192:15;5230:4;5227:1;5220:15;5093:152;5281:14;5276:2;5265:9;5261:18;5254:42;;5351:2;5343:6;5339:15;5333:22;5327:3;5316:9;5312:19;5305:51;5412:3;5404:6;5400:16;5394:23;5387:4;5376:9;5372:20;5365:53;5435:6;5427:14;;;4618:829;;;;:::o;5452:347::-;5517:6;5525;5578:2;5566:9;5557:7;5553:23;5549:32;5546:52;;;5594:1;5591;5584:12;5546:52;5617:29;5636:9;5617:29;:::i;:::-;5607:39;;5696:2;5685:9;5681:18;5668:32;5743:5;5736:13;5729:21;5722:5;5719:32;5709:60;;5765:1;5762;5755:12;5709:60;5788:5;5778:15;;;5452:347;;;;;:::o;5804:667::-;5899:6;5907;5915;5923;5976:3;5964:9;5955:7;5951:23;5947:33;5944:53;;;5993:1;5990;5983:12;5944:53;6016:29;6035:9;6016:29;:::i;:::-;6006:39;;6064:38;6098:2;6087:9;6083:18;6064:38;:::i;:::-;6054:48;;6149:2;6138:9;6134:18;6121:32;6111:42;;6204:2;6193:9;6189:18;6176:32;6231:18;6223:6;6220:30;6217:50;;;6263:1;6260;6253:12;6217:50;6286:22;;6339:4;6331:13;;6327:27;-1:-1:-1;6317:55:20;;6368:1;6365;6358:12;6317:55;6391:74;6457:7;6452:2;6439:16;6434:2;6430;6426:11;6391:74;:::i;:::-;6381:84;;;5804:667;;;;;;;:::o;6476:260::-;6544:6;6552;6605:2;6593:9;6584:7;6580:23;6576:32;6573:52;;;6621:1;6618;6611:12;6573:52;6644:29;6663:9;6644:29;:::i;:::-;6634:39;;6692:38;6726:2;6715:9;6711:18;6692:38;:::i;:::-;6682:48;;6476:260;;;;;:::o;6741:380::-;6820:1;6816:12;;;;6863;;;6884:61;;6938:4;6930:6;6926:17;6916:27;;6884:61;6991:2;6983:6;6980:14;6960:18;6957:38;6954:161;;7037:10;7032:3;7028:20;7025:1;7018:31;7072:4;7069:1;7062:15;7100:4;7097:1;7090:15;6954:161;;6741:380;;;:::o;7482:232::-;7521:3;7542:17;;;7539:140;;7601:10;7596:3;7592:20;7589:1;7582:31;7636:4;7633:1;7626:15;7664:4;7661:1;7654:15;7539:140;-1:-1:-1;7706:1:20;7695:13;;7482:232::o;7845:545::-;7947:2;7942:3;7939:11;7936:448;;;7983:1;8008:5;8004:2;7997:17;8053:4;8049:2;8039:19;8123:2;8111:10;8107:19;8104:1;8100:27;8094:4;8090:38;8159:4;8147:10;8144:20;8141:47;;;-1:-1:-1;8182:4:20;8141:47;8237:2;8232:3;8228:12;8225:1;8221:20;8215:4;8211:31;8201:41;;8292:82;8310:2;8303:5;8300:13;8292:82;;;8355:17;;;8336:1;8325:13;8292:82;;8566:1352;8692:3;8686:10;8719:18;8711:6;8708:30;8705:56;;;8741:18;;:::i;:::-;8770:97;8860:6;8820:38;8852:4;8846:11;8820:38;:::i;:::-;8814:4;8770:97;:::i;:::-;8922:4;;8986:2;8975:14;;9003:1;8998:663;;;;9705:1;9722:6;9719:89;;;-1:-1:-1;9774:19:20;;;9768:26;9719:89;-1:-1:-1;;8523:1:20;8519:11;;;8515:24;8511:29;8501:40;8547:1;8543:11;;;8498:57;9821:81;;8968:944;;8998:663;7792:1;7785:14;;;7829:4;7816:18;;-1:-1:-1;;9034:20:20;;;9152:236;9166:7;9163:1;9160:14;9152:236;;;9255:19;;;9249:26;9234:42;;9347:27;;;;9315:1;9303:14;;;;9182:19;;9152:236;;;9156:3;9416:6;9407:7;9404:19;9401:201;;;9477:19;;;9471:26;-1:-1:-1;;9560:1:20;9556:14;;;9572:3;9552:24;9548:37;9544:42;9529:58;9514:74;;9401:201;-1:-1:-1;;;;;9648:1:20;9632:14;;;9628:22;9615:36;;-1:-1:-1;8566:1352:20:o;10303:496::-;10482:3;10520:6;10514:13;10536:66;10595:6;10590:3;10583:4;10575:6;10571:17;10536:66;:::i;:::-;10665:13;;10624:16;;;;10687:70;10665:13;10624:16;10734:4;10722:17;;10687:70;:::i;:::-;10773:20;;10303:496;-1:-1:-1;;;;10303:496:20:o;10804:489::-;-1:-1:-1;;;;;11073:15:20;;;11055:34;;11125:15;;11120:2;11105:18;;11098:43;11172:2;11157:18;;11150:34;;;11220:3;11215:2;11200:18;;11193:31;;;10998:4;;11241:46;;11267:19;;11259:6;11241:46;:::i;11298:249::-;11367:6;11420:2;11408:9;11399:7;11395:23;11391:32;11388:52;;;11436:1;11433;11426:12;11388:52;11468:9;11462:16;11487:30;11511:5;11487:30;:::i"},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burnPolicy(uint256)":"f457a0fe","getApproved(uint256)":"081812fc","getPolicyMetadata(uint256)":"8cf7a293","getPolicyOwner(uint256)":"ca009021","isApprovedForAll(address,address)":"e985e9c5","mintPolicy(address,string,uint8,uint256,uint256)":"21a9bfe8","name()":"06fdde03","owner()":"8da5cb5b","ownerOf(uint256)":"6352211e","renounceOwnership()":"715018a6","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","setInsuranceCoreAddress(address)":"239036c0","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"policyId\",\"type\":\"uint256\"}],\"name\":\"burnPolicy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"policyId\",\"type\":\"uint256\"}],\"name\":\"getPolicyMetadata\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"vehicleId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"enum IVehicleShield.VerificationTier\",\"name\":\"tier\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"coverage\",\"type\":\"uint256\"}],\"internalType\":\"struct PolicyNFT.PolicyMetadata\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"policyId\",\"type\":\"uint256\"}],\"name\":\"getPolicyOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"vehicleId\",\"type\":\"string\"},{\"internalType\":\"enum IVehicleShield.VerificationTier\",\"name\":\"tier\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"coverage\",\"type\":\"uint256\"}],\"name\":\"mintPolicy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"insuranceCoreAddress\",\"type\":\"address\"}],\"name\":\"setInsuranceCoreAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PolicyNFT.sol\":\"PolicyNFT\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x39ed367e54765186281efcfe83e47cf0ad62cc879f10e191360712507125f29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c5ae6d85bd48cca8d6d2fcec8c63efd86f56f8a5832577a47e403ce0e65cb09\",\"dweb:/ipfs/QmUtcS8AbRSWhuc61puYet58os8FvSqm329ChoW8wwZXZk\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0x40399695922383778f9f540a620bec475a2f8e0f08d41f0005682842e28a9855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746d295e403931aeb9d6065fd5a0871f43ab5459814a60623611e4b6641a09fd\",\"dweb:/ipfs/QmWrgT8YJrQ9FfD1o3YYArwo57e7MGdpFKuM74qJ4qE34E\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/IVehicleShield.sol\":{\"keccak256\":\"0x9797150cb75e8673cf23309964621d0323843e13fd0431f4b4b829f71bac3885\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5f0d54e5945cded1dc87c8f47610d1171f2755f7fb499bda738f9b45a7e3085\",\"dweb:/ipfs/Qmdv2XYtJNedoff4W4yfXRqwqfaExpu6Eb9y4WG57nEtg3\"]},\"contracts/PolicyNFT.sol\":{\"keccak256\":\"0xacf03e081a26311a642d521bbe9f5c0fff17a6deb03bf70116a68a051f2ea427\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3cdf9b7c62ee3aeaf9f077d963f981a31860134f1910eb49e13520d2592a5ad\",\"dweb:/ipfs/QmduDi9MCEqeTvv8eg6Mtg2Wt93aHNo2FqAmwkcaPsGPaY\"]}},\"version\":1}"}},"contracts/RiskAssessment.sol":{"RiskAssessment":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"regPlate","type":"string"},{"indexed":false,"internalType":"uint8","name":"riskScore","type":"uint8"},{"indexed":false,"internalType":"enum IVehicleShield.VerificationTier","name":"tier","type":"uint8"}],"name":"RiskAssessed","type":"event"},{"inputs":[{"internalType":"string","name":"_regPlate","type":"string"},{"internalType":"uint256","name":"_baseValue","type":"uint256"},{"internalType":"uint256","name":"_age","type":"uint256"},{"internalType":"uint256","name":"_mileage","type":"uint256"},{"internalType":"uint8","name":"_condition","type":"uint8"},{"internalType":"bool","name":"_hasAccidentHistory","type":"bool"}],"name":"assessVehicle","outputs":[{"internalType":"enum IVehicleShield.VerificationTier","name":"","type":"uint8"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_regPlate","type":"string"},{"internalType":"enum IVehicleShield.VerificationTier","name":"_tier","type":"uint8"}],"name":"calculatePremium","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_age","type":"uint256"},{"internalType":"uint256","name":"_mileage","type":"uint256"},{"internalType":"uint8","name":"_condition","type":"uint8"},{"internalType":"bool","name":"_hasAccidentHistory","type":"bool"}],"name":"calculateRiskScore","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"_baseValue","type":"uint256"},{"internalType":"uint8","name":"_riskScore","type":"uint8"}],"name":"determineTier","outputs":[{"internalType":"enum IVehicleShield.VerificationTier","name":"","type":"uint8"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"string","name":"_regPlate","type":"string"}],"name":"getVehicleRisk","outputs":[{"components":[{"internalType":"uint256","name":"baseValue","type":"uint256"},{"internalType":"uint256","name":"age","type":"uint256"},{"internalType":"uint256","name":"mileage","type":"uint256"},{"internalType":"uint8","name":"condition","type":"uint8"},{"internalType":"uint8","name":"riskScore","type":"uint8"},{"internalType":"bool","name":"hasAccidentHistory","type":"bool"},{"internalType":"uint256","name":"lastAssessment","type":"uint256"}],"internalType":"struct RiskAssessment.VehicleRisk","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"enum IVehicleShield.VerificationTier","name":"","type":"uint8"}],"name":"tierPremiums","outputs":[{"internalType":"uint256","name":"baseRate","type":"uint256"},{"internalType":"uint256","name":"ageMultiplier","type":"uint256"},{"internalType":"uint256","name":"conditionMultiplier","type":"uint256"},{"internalType":"uint256","name":"accidentPenalty","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"enum IVehicleShield.VerificationTier","name":"_tier","type":"uint8"},{"internalType":"uint256","name":"_baseRate","type":"uint256"},{"internalType":"uint256","name":"_ageMultiplier","type":"uint256"},{"internalType":"uint256","name":"_conditionMultiplier","type":"uint256"},{"internalType":"uint256","name":"_accidentPenalty","type":"uint256"}],"name":"updatePremiumFactors","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"","type":"string"}],"name":"vehicleRisks","outputs":[{"internalType":"uint256","name":"baseValue","type":"uint256"},{"internalType":"uint256","name":"age","type":"uint256"},{"internalType":"uint256","name":"mileage","type":"uint256"},{"internalType":"uint8","name":"condition","type":"uint8"},{"internalType":"uint8","name":"riskScore","type":"uint8"},{"internalType":"bool","name":"hasAccidentHistory","type":"bool"},{"internalType":"uint256","name":"lastAssessment","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_7400":{"entryPoint":null,"id":7400,"parameterSlots":0,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":506,"id":146,"parameterSlots":1,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x21":{"entryPoint":586,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:351:20","statements":[{"nodeType":"YulBlock","src":"6:3:20","statements":[]},{"body":{"nodeType":"YulBlock","src":"115:102:20","statements":[{"nodeType":"YulAssignment","src":"125:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"137:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"148:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"133:3:20"},"nodeType":"YulFunctionCall","src":"133:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"125:4:20"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"167:9:20"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"182:6:20"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"198:3:20","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"203:1:20","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"194:3:20"},"nodeType":"YulFunctionCall","src":"194:11:20"},{"kind":"number","nodeType":"YulLiteral","src":"207:1:20","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"190:3:20"},"nodeType":"YulFunctionCall","src":"190:19:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"178:3:20"},"nodeType":"YulFunctionCall","src":"178:32:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"160:6:20"},"nodeType":"YulFunctionCall","src":"160:51:20"},"nodeType":"YulExpressionStatement","src":"160:51:20"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"84:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"95:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"106:4:20","type":""}],"src":"14:203:20"},{"body":{"nodeType":"YulBlock","src":"254:95:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"271:1:20","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"278:3:20","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"283:10:20","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"274:3:20"},"nodeType":"YulFunctionCall","src":"274:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"264:6:20"},"nodeType":"YulFunctionCall","src":"264:31:20"},"nodeType":"YulExpressionStatement","src":"264:31:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"311:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"314:4:20","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"304:6:20"},"nodeType":"YulFunctionCall","src":"304:15:20"},"nodeType":"YulExpressionStatement","src":"304:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"335:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"338:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"328:6:20"},"nodeType":"YulFunctionCall","src":"328:15:20"},"nodeType":"YulExpressionStatement","src":"328:15:20"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"222:127:20"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n}","id":20,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER DUP1 PUSH3 0x39 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x44 DUP2 PUSH3 0x1FA JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH7 0x2386F26FC10000 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA DUP2 MSTORE POP PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x2 DUP2 GT ISZERO PUSH3 0x89 JUMPI PUSH3 0x89 PUSH3 0x24A JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH3 0x9D JUMPI PUSH3 0x9D PUSH3 0x24A JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE SWAP1 POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH7 0x470DE4DF820000 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP2 MSTORE POP PUSH1 0x2 PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH3 0x11B JUMPI PUSH3 0x11B PUSH3 0x24A JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH3 0x12F JUMPI PUSH3 0x12F PUSH3 0x24A JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE SWAP1 POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH7 0x6A94D74F430000 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP2 MSTORE POP PUSH1 0x2 PUSH1 0x0 PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH3 0x1AC JUMPI PUSH3 0x1AC PUSH3 0x24A JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH3 0x1C0 JUMPI PUSH3 0x1C0 PUSH3 0x24A JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 KECCAK256 DUP4 MLOAD DUP2 SSTORE SWAP2 DUP4 ADD MLOAD PUSH1 0x1 DUP4 ADD SSTORE DUP3 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x60 SWAP1 SWAP2 ADD MLOAD PUSH1 0x3 SWAP1 SWAP2 ADD SSTORE PUSH3 0x260 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xD44 DUP1 PUSH3 0x270 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9B1E19A7 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x9B1E19A7 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0xA870AFCD EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0xAF27C152 EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0xE51267C7 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0xEDE77D5D EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x944A8CA EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x69C27E14 EQ PUSH2 0xD8 JUMPI DUP1 PUSH4 0x70AC03D8 EQ PUSH2 0xF9 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x128 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0xBC CALLDATASIZE PUSH1 0x4 PUSH2 0x977 JUMP JUMPDEST PUSH2 0x2EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCF SWAP3 SWAP2 SWAP1 PUSH2 0xA29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEB PUSH2 0xE6 CALLDATASIZE PUSH1 0x4 PUSH2 0xA53 JUMP JUMPDEST PUSH2 0x4C5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCF JUMP JUMPDEST PUSH2 0x10C PUSH2 0x107 CALLDATASIZE PUSH1 0x4 PUSH2 0xAA1 JUMP JUMPDEST PUSH2 0x5AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCF JUMP JUMPDEST PUSH2 0x126 PUSH2 0x632 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCF JUMP JUMPDEST PUSH2 0x156 PUSH2 0x151 CALLDATASIZE PUSH1 0x4 PUSH2 0xAE7 JUMP JUMPDEST PUSH2 0x646 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCF SWAP2 SWAP1 PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP DUP3 MLOAD DUP3 MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0xFF PUSH1 0x60 DUP5 ADD MLOAD AND PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0xFF PUSH1 0x80 DUP5 ADD MLOAD AND PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP4 ADD MLOAD ISZERO ISZERO PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0xC0 DUP4 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1EB PUSH2 0x1C2 CALLDATASIZE PUSH1 0x4 PUSH2 0xB1C JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP3 ADD SLOAD PUSH1 0x3 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP3 SWAP2 SWAP1 DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0xCF JUMP JUMPDEST PUSH2 0x21E PUSH2 0x219 CALLDATASIZE PUSH1 0x4 PUSH2 0xB3E JUMP JUMPDEST PUSH2 0x70B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCF SWAP2 SWAP1 PUSH2 0xB61 JUMP JUMPDEST PUSH2 0x28E PUSH2 0x239 CALLDATASIZE PUSH1 0x4 PUSH2 0xAE7 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD DUP1 MLOAD PUSH1 0x1 DUP1 DUP4 MSTORE SWAP4 DUP4 ADD SWAP3 SWAP1 SWAP5 ADD SWAP2 SWAP1 SWAP2 KECCAK256 SWAP3 SWAP1 MSTORE DUP2 SLOAD SWAP1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 SWAP1 SWAP5 ADD SLOAD SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 PUSH1 0xFF DUP1 DUP3 AND SWAP3 PUSH2 0x100 DUP4 DIV DUP3 AND SWAP3 PUSH3 0x10000 SWAP1 DIV SWAP1 SWAP2 AND SWAP1 DUP8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP8 DUP9 MSTORE PUSH1 0x20 DUP9 ADD SWAP7 SWAP1 SWAP7 MSTORE SWAP5 DUP7 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0xFF SWAP2 DUP3 AND PUSH1 0x60 DUP7 ADD MSTORE AND PUSH1 0x80 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 ADD PUSH2 0xCF JUMP JUMPDEST PUSH2 0x126 PUSH2 0x2D6 CALLDATASIZE PUSH1 0x4 PUSH2 0xB6F JUMP JUMPDEST PUSH2 0x768 JUMP JUMPDEST PUSH2 0x126 PUSH2 0x2E9 CALLDATASIZE PUSH1 0x4 PUSH2 0xBB1 JUMP JUMPDEST PUSH2 0x7F3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xA DUP5 PUSH1 0xFF AND GT ISZERO PUSH2 0x343 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x436F6E646974696F6E206D75737420626520312D313 PUSH1 0x54 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xF4240 DUP6 GT ISZERO PUSH2 0x388 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C6964206D696C65616765 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x33A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x396 DUP8 DUP8 DUP8 DUP8 PUSH2 0x5AE JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE POP PUSH1 0x1 DUP11 PUSH1 0x40 MLOAD PUSH2 0x3E3 SWAP2 SWAP1 PUSH2 0xBFE JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x20 SWAP1 DUP2 ADD SWAP1 SWAP3 KECCAK256 DUP4 MLOAD DUP2 SSTORE SWAP2 DUP4 ADD MLOAD PUSH1 0x1 DUP4 ADD SSTORE DUP3 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 DUP3 ADD DUP1 SLOAD PUSH1 0x80 DUP6 ADD MLOAD PUSH1 0xA0 DUP7 ADD MLOAD ISZERO ISZERO PUSH3 0x10000 MUL PUSH3 0xFF0000 NOT PUSH1 0xFF SWAP3 DUP4 AND PUSH2 0x100 MUL PUSH2 0xFFFF NOT SWAP1 SWAP5 AND SWAP3 SWAP1 SWAP6 AND SWAP2 SWAP1 SWAP2 OR SWAP2 SWAP1 SWAP2 OR SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xC0 SWAP1 SWAP2 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD SSTORE PUSH1 0x0 PUSH2 0x46A DUP10 DUP4 PUSH2 0x70B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x478 DUP12 DUP4 PUSH2 0x4C5 JUMP JUMPDEST SWAP1 POP PUSH32 0x3D95572704130BB661D2805806F913C134F4CB017E58BDF1C7041DB1055001E1 DUP12 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x4AD SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xC1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP1 SWAP11 SWAP1 SWAP10 POP SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP5 PUSH1 0x40 MLOAD PUSH2 0x4D8 SWAP2 SWAP1 PUSH2 0xBFE JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x500 JUMPI PUSH2 0x500 PUSH2 0x9F1 JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x511 JUMPI PUSH2 0x511 PUSH2 0x9F1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP DUP2 PUSH1 0x1 ADD SLOAD DUP4 PUSH1 0x1 ADD SLOAD PUSH2 0x53E SWAP2 SWAP1 PUSH2 0xC73 JUMP JUMPDEST PUSH2 0x548 SWAP1 DUP3 PUSH2 0xC8A JUMP JUMPDEST PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP6 ADD SLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0x564 SWAP1 PUSH1 0xFF AND PUSH1 0xA PUSH2 0xC9D JUMP JUMPDEST PUSH1 0xFF AND PUSH2 0x571 SWAP2 SWAP1 PUSH2 0xC73 JUMP JUMPDEST PUSH2 0x57B SWAP1 DUP3 PUSH2 0xC8A JUMP JUMPDEST PUSH1 0x3 DUP5 ADD SLOAD SWAP1 SWAP2 POP PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x5A3 JUMPI PUSH1 0x3 DUP3 ADD SLOAD PUSH2 0x5A0 SWAP1 DUP3 PUSH2 0xC8A JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH2 0x5BD DUP7 PUSH1 0x2 PUSH2 0xC73 JUMP JUMPDEST PUSH2 0x5C7 SWAP1 DUP3 PUSH2 0xCB6 JUMP JUMPDEST SWAP1 POP PUSH2 0x5D5 PUSH2 0x2710 DUP7 PUSH2 0xCC9 JUMP JUMPDEST PUSH2 0x5E0 SWAP1 PUSH1 0x3 PUSH2 0xC73 JUMP JUMPDEST PUSH2 0x5EA SWAP1 DUP3 PUSH2 0xCB6 JUMP JUMPDEST SWAP1 POP PUSH2 0x5F7 DUP5 PUSH1 0x5 PUSH2 0xCEB JUMP JUMPDEST PUSH2 0x604 SWAP1 PUSH1 0xFF AND DUP3 PUSH2 0xC8A JUMP JUMPDEST SWAP1 POP DUP3 ISZERO PUSH2 0x61A JUMPI PUSH2 0x617 PUSH1 0x14 DUP3 PUSH2 0xCB6 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x64 DUP2 GT ISZERO PUSH2 0x627 JUMPI POP PUSH1 0x64 JUMPDEST SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x63A PUSH2 0x831 JUMP JUMPDEST PUSH2 0x644 PUSH1 0x0 PUSH2 0x85E JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x68E PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x40 MLOAD PUSH2 0x69E SWAP2 SWAP1 PUSH2 0xBFE JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x20 SWAP1 DUP2 ADD DUP4 KECCAK256 PUSH1 0xE0 DUP5 ADD DUP4 MSTORE DUP1 SLOAD DUP5 MSTORE PUSH1 0x1 DUP2 ADD SLOAD SWAP2 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND PUSH1 0x60 DUP6 ADD MSTORE PUSH2 0x100 DUP3 DIV DUP2 AND PUSH1 0x80 DUP6 ADD MSTORE PUSH3 0x10000 SWAP1 SWAP2 DIV AND ISZERO ISZERO PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x4 ADD SLOAD PUSH1 0xC0 DUP3 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0x2C68AF0BB140000 DUP4 LT ISZERO DUP1 ISZERO PUSH2 0x729 JUMPI POP PUSH1 0x50 DUP3 PUSH1 0xFF AND LT ISZERO JUMPDEST ISZERO PUSH2 0x736 JUMPI POP PUSH1 0x2 PUSH2 0x5A8 JUMP JUMPDEST PUSH8 0x16345785D8A0000 DUP4 LT ISZERO DUP1 ISZERO PUSH2 0x752 JUMPI POP PUSH1 0x3C DUP3 PUSH1 0xFF AND LT ISZERO JUMPDEST ISZERO PUSH2 0x75F JUMPI POP PUSH1 0x1 PUSH2 0x5A8 JUMP JUMPDEST POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x770 PUSH2 0x831 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0x2 PUSH1 0x0 DUP8 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x7A7 JUMPI PUSH2 0x7A7 PUSH2 0x9F1 JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x7B8 JUMPI PUSH2 0x7B8 PUSH2 0x9F1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 KECCAK256 DUP4 MLOAD DUP2 SSTORE SWAP2 DUP4 ADD MLOAD PUSH1 0x1 DUP4 ADD SSTORE DUP3 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x60 SWAP1 SWAP2 ADD MLOAD PUSH1 0x3 SWAP1 SWAP2 ADD SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x7FB PUSH2 0x831 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x825 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x33A JUMP JUMPDEST PUSH2 0x82E DUP2 PUSH2 0x85E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x644 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x33A JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x8D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x8F0 JUMPI PUSH2 0x8F0 PUSH2 0x8AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x918 JUMPI PUSH2 0x918 PUSH2 0x8AE JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x931 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x962 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x962 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x990 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9B3 DUP10 DUP3 DUP11 ADD PUSH2 0x8C4 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP3 POP PUSH2 0x9D7 PUSH1 0x80 DUP9 ADD PUSH2 0x951 JUMP JUMPDEST SWAP2 POP PUSH2 0x9E5 PUSH1 0xA0 DUP9 ADD PUSH2 0x967 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0xA25 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x40 DUP2 ADD PUSH2 0xA37 DUP3 DUP6 PUSH2 0xA07 JUMP JUMPDEST DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x3 DUP2 LT PUSH2 0x962 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA89 DUP6 DUP3 DUP7 ADD PUSH2 0x8C4 JUMP JUMPDEST SWAP3 POP POP PUSH2 0xA98 PUSH1 0x20 DUP5 ADD PUSH2 0xA44 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xAB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH2 0xACE PUSH1 0x40 DUP7 ADD PUSH2 0x951 JUMP JUMPDEST SWAP2 POP PUSH2 0xADC PUSH1 0x60 DUP7 ADD PUSH2 0x967 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x62A DUP5 DUP3 DUP6 ADD PUSH2 0x8C4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB2E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB37 DUP3 PUSH2 0xA44 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0xA98 PUSH1 0x20 DUP5 ADD PUSH2 0x951 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x5A8 DUP3 DUP5 PUSH2 0xA07 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xB87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB90 DUP7 PUSH2 0xA44 JUMP JUMPDEST SWAP8 PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP8 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP7 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP7 POP PUSH1 0x80 ADD CALLDATALOAD SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xBF5 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xBDD JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0xC10 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0xBDA JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 DUP5 MLOAD DUP1 PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0xC39 DUP2 PUSH1 0x80 DUP6 ADD PUSH1 0x20 DUP10 ADD PUSH2 0xBDA JUMP JUMPDEST PUSH1 0xFF DUP6 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x80 ADD SWAP1 POP PUSH2 0x62A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xA07 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x5A8 JUMPI PUSH2 0x5A8 PUSH2 0xC5D JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x5A8 JUMPI PUSH2 0x5A8 PUSH2 0xC5D JUMP JUMPDEST PUSH1 0xFF DUP3 DUP2 AND DUP3 DUP3 AND SUB SWAP1 DUP2 GT ISZERO PUSH2 0x5A8 JUMPI PUSH2 0x5A8 PUSH2 0xC5D JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x5A8 JUMPI PUSH2 0x5A8 PUSH2 0xC5D JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xCE6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0xFF DUP2 DUP2 AND DUP4 DUP3 AND MUL SWAP1 DUP2 AND SWAP1 DUP2 DUP2 EQ PUSH2 0xD07 JUMPI PUSH2 0xD07 PUSH2 0xC5D JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLVALUE 0x28 SUB 0x2D DUP15 0xF9 0xB1 BYTE SWAP9 DUP1 0xBE PUSH11 0x98EE2DD0FB4E1B47231C33 SWAP10 SLT 0xCA PUSH12 0x724D4F748964736F6C634300 ADDMOD EQ STOP CALLER ","sourceMap":"142:4304:19:-:0;;;832:342;;;;;;;;;-1:-1:-1;854:10:19;;1269:95:0;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;160:51:20;133:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;1225:187;930:36:19::1;;;;;;;;945:10;930:36;;;;957:1;930:36;;;;960:1;930:36;;;;963:2;930:36;;::::0;876:12:::1;:51;889:37:::0;876:51:::1;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1031:35;;;;;;;;1046:10;1031:35;;;;1058:1;1031:35;;;;1061:1;1031:35;;;;1064:1;1031:35;;::::0;976:12:::1;:52;989:38;976:52;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1132:35;;;;;;;;1147:10;1132:35;;;;1159:1;1132:35;;;;1162:1;1132:35;;;;1165:1;1132:35;;::::0;1076:12:::1;:53;1089:39;1076:53:::0;::::1;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;::::0;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;1076:53:19;:91;;;;;;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;142:4304;;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;222:127:20:-;283:10;278:3;274:20;271:1;264:31;314:4;311:1;304:15;338:4;335:1;328:15;222:127;142:4304:19;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_checkOwner_84":{"entryPoint":2097,"id":84,"parameterSlots":0,"returnSlots":0},"@_msgSender_1493":{"entryPoint":null,"id":1493,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_146":{"entryPoint":2142,"id":146,"parameterSlots":1,"returnSlots":0},"@assessVehicle_7486":{"entryPoint":750,"id":7486,"parameterSlots":6,"returnSlots":2},"@calculatePremium_7667":{"entryPoint":1221,"id":7667,"parameterSlots":2,"returnSlots":1},"@calculateRiskScore_7564":{"entryPoint":1454,"id":7564,"parameterSlots":4,"returnSlots":1},"@determineTier_7605":{"entryPoint":1803,"id":7605,"parameterSlots":2,"returnSlots":1},"@getVehicleRisk_7708":{"entryPoint":1606,"id":7708,"parameterSlots":1,"returnSlots":1},"@owner_67":{"entryPoint":null,"id":67,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":1586,"id":98,"parameterSlots":0,"returnSlots":0},"@tierPremiums_7344":{"entryPoint":null,"id":7344,"parameterSlots":0,"returnSlots":0},"@transferOwnership_126":{"entryPoint":2035,"id":126,"parameterSlots":1,"returnSlots":0},"@updatePremiumFactors_7695":{"entryPoint":1896,"id":7695,"parameterSlots":5,"returnSlots":0},"@vehicleRisks_7338":{"entryPoint":null,"id":7338,"parameterSlots":0,"returnSlots":0},"abi_decode_bool":{"entryPoint":2407,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_enum_VerificationTier":{"entryPoint":2628,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_string":{"entryPoint":2244,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":2993,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_enum$_VerificationTier_$6389":{"entryPoint":2844,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_enum$_VerificationTier_$6389t_uint256t_uint256t_uint256t_uint256":{"entryPoint":2927,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_string_memory_ptr":{"entryPoint":2791,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_enum$_VerificationTier_$6389":{"entryPoint":2643,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_string_memory_ptrt_uint256t_uint256t_uint256t_uint8t_bool":{"entryPoint":2423,"id":null,"parameterSlots":2,"returnSlots":6},"abi_decode_tuple_t_uint256t_uint256t_uint8t_bool":{"entryPoint":2721,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_uint256t_uint8":{"entryPoint":2878,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_uint8":{"entryPoint":2385,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_enum_VerificationTier":{"entryPoint":2567,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":3070,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_enum$_VerificationTier_$6389__to_t_uint8__fromStack_reversed":{"entryPoint":2913,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_enum$_VerificationTier_$6389_t_uint256__to_t_uint8_t_uint256__fromStack_reversed":{"entryPoint":2601,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr_t_uint8_t_enum$_VerificationTier_$6389__to_t_string_memory_ptr_t_uint8_t_uint8__fromStack_reversed":{"entryPoint":3098,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_stringliteral_240f2cb56ab5d552ae68690a8e5deef2a9c45637fcc1f8de554c4218753ac3a7__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a0cdf71dbdc54f4514cca7f791da40224dcc7f2b64e85da63bfb02a2785baf3b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_VehicleRisk_$7324_memory_ptr__to_t_struct$_VehicleRisk_$7324_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint8_t_uint8_t_bool_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint8_t_uint8_t_bool_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3210,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":3273,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":3187,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint8":{"entryPoint":3307,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":3254,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint8":{"entryPoint":3229,"id":null,"parameterSlots":2,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":3034,"id":null,"parameterSlots":3,"returnSlots":0},"panic_error_0x11":{"entryPoint":3165,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":2545,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":2222,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:10656:20","statements":[{"nodeType":"YulBlock","src":"6:3:20","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:95:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:20","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"70:3:20","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"75:10:20","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"66:3:20"},"nodeType":"YulFunctionCall","src":"66:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:20"},"nodeType":"YulFunctionCall","src":"56:31:20"},"nodeType":"YulExpressionStatement","src":"56:31:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"106:4:20","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"96:6:20"},"nodeType":"YulFunctionCall","src":"96:15:20"},"nodeType":"YulExpressionStatement","src":"96:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"127:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"130:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"120:6:20"},"nodeType":"YulFunctionCall","src":"120:15:20"},"nodeType":"YulExpressionStatement","src":"120:15:20"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14:127:20"},{"body":{"nodeType":"YulBlock","src":"199:666:20","statements":[{"body":{"nodeType":"YulBlock","src":"248:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"257:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"260:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"250:6:20"},"nodeType":"YulFunctionCall","src":"250:12:20"},"nodeType":"YulExpressionStatement","src":"250:12:20"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"227:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"235:4:20","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"223:3:20"},"nodeType":"YulFunctionCall","src":"223:17:20"},{"name":"end","nodeType":"YulIdentifier","src":"242:3:20"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"219:3:20"},"nodeType":"YulFunctionCall","src":"219:27:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"212:6:20"},"nodeType":"YulFunctionCall","src":"212:35:20"},"nodeType":"YulIf","src":"209:55:20"},{"nodeType":"YulVariableDeclaration","src":"273:30:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"296:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"283:12:20"},"nodeType":"YulFunctionCall","src":"283:20:20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"277:2:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"312:28:20","value":{"kind":"number","nodeType":"YulLiteral","src":"322:18:20","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"316:2:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"363:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"365:16:20"},"nodeType":"YulFunctionCall","src":"365:18:20"},"nodeType":"YulExpressionStatement","src":"365:18:20"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"355:2:20"},{"name":"_2","nodeType":"YulIdentifier","src":"359:2:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"352:2:20"},"nodeType":"YulFunctionCall","src":"352:10:20"},"nodeType":"YulIf","src":"349:36:20"},{"nodeType":"YulVariableDeclaration","src":"394:17:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"408:2:20","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"404:3:20"},"nodeType":"YulFunctionCall","src":"404:7:20"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"398:2:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"420:23:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:2:20","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"434:5:20"},"nodeType":"YulFunctionCall","src":"434:9:20"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"424:6:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"452:71:20","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"474:6:20"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"498:2:20"},{"kind":"number","nodeType":"YulLiteral","src":"502:4:20","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"494:3:20"},"nodeType":"YulFunctionCall","src":"494:13:20"},{"name":"_3","nodeType":"YulIdentifier","src":"509:2:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"490:3:20"},"nodeType":"YulFunctionCall","src":"490:22:20"},{"kind":"number","nodeType":"YulLiteral","src":"514:2:20","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"486:3:20"},"nodeType":"YulFunctionCall","src":"486:31:20"},{"name":"_3","nodeType":"YulIdentifier","src":"519:2:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"482:3:20"},"nodeType":"YulFunctionCall","src":"482:40:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"470:3:20"},"nodeType":"YulFunctionCall","src":"470:53:20"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"456:10:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"582:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"584:16:20"},"nodeType":"YulFunctionCall","src":"584:18:20"},"nodeType":"YulExpressionStatement","src":"584:18:20"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"541:10:20"},{"name":"_2","nodeType":"YulIdentifier","src":"553:2:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"538:2:20"},"nodeType":"YulFunctionCall","src":"538:18:20"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"561:10:20"},{"name":"memPtr","nodeType":"YulIdentifier","src":"573:6:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"558:2:20"},"nodeType":"YulFunctionCall","src":"558:22:20"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"535:2:20"},"nodeType":"YulFunctionCall","src":"535:46:20"},"nodeType":"YulIf","src":"532:72:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"620:2:20","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"624:10:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"613:6:20"},"nodeType":"YulFunctionCall","src":"613:22:20"},"nodeType":"YulExpressionStatement","src":"613:22:20"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"651:6:20"},{"name":"_1","nodeType":"YulIdentifier","src":"659:2:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"644:6:20"},"nodeType":"YulFunctionCall","src":"644:18:20"},"nodeType":"YulExpressionStatement","src":"644:18:20"},{"body":{"nodeType":"YulBlock","src":"710:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"719:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"722:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"712:6:20"},"nodeType":"YulFunctionCall","src":"712:12:20"},"nodeType":"YulExpressionStatement","src":"712:12:20"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"685:6:20"},{"name":"_1","nodeType":"YulIdentifier","src":"693:2:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"681:3:20"},"nodeType":"YulFunctionCall","src":"681:15:20"},{"kind":"number","nodeType":"YulLiteral","src":"698:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"677:3:20"},"nodeType":"YulFunctionCall","src":"677:26:20"},{"name":"end","nodeType":"YulIdentifier","src":"705:3:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"674:2:20"},"nodeType":"YulFunctionCall","src":"674:35:20"},"nodeType":"YulIf","src":"671:55:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"752:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"760:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"748:3:20"},"nodeType":"YulFunctionCall","src":"748:17:20"},{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"771:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"779:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"767:3:20"},"nodeType":"YulFunctionCall","src":"767:17:20"},{"name":"_1","nodeType":"YulIdentifier","src":"786:2:20"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"735:12:20"},"nodeType":"YulFunctionCall","src":"735:54:20"},"nodeType":"YulExpressionStatement","src":"735:54:20"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"813:6:20"},{"name":"_1","nodeType":"YulIdentifier","src":"821:2:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"809:3:20"},"nodeType":"YulFunctionCall","src":"809:15:20"},{"kind":"number","nodeType":"YulLiteral","src":"826:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"805:3:20"},"nodeType":"YulFunctionCall","src":"805:26:20"},{"kind":"number","nodeType":"YulLiteral","src":"833:1:20","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"798:6:20"},"nodeType":"YulFunctionCall","src":"798:37:20"},"nodeType":"YulExpressionStatement","src":"798:37:20"},{"nodeType":"YulAssignment","src":"844:15:20","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"853:6:20"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"844:5:20"}]}]},"name":"abi_decode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"173:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"181:3:20","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"189:5:20","type":""}],"src":"146:719:20"},{"body":{"nodeType":"YulBlock","src":"917:109:20","statements":[{"nodeType":"YulAssignment","src":"927:29:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"949:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"936:12:20"},"nodeType":"YulFunctionCall","src":"936:20:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"927:5:20"}]},{"body":{"nodeType":"YulBlock","src":"1004:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1013:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1016:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1006:6:20"},"nodeType":"YulFunctionCall","src":"1006:12:20"},"nodeType":"YulExpressionStatement","src":"1006:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"978:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"989:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"996:4:20","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"985:3:20"},"nodeType":"YulFunctionCall","src":"985:16:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"975:2:20"},"nodeType":"YulFunctionCall","src":"975:27:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"968:6:20"},"nodeType":"YulFunctionCall","src":"968:35:20"},"nodeType":"YulIf","src":"965:55:20"}]},"name":"abi_decode_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"896:6:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"907:5:20","type":""}],"src":"870:156:20"},{"body":{"nodeType":"YulBlock","src":"1077:114:20","statements":[{"nodeType":"YulAssignment","src":"1087:29:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1109:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1096:12:20"},"nodeType":"YulFunctionCall","src":"1096:20:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1087:5:20"}]},{"body":{"nodeType":"YulBlock","src":"1169:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1178:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1181:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1171:6:20"},"nodeType":"YulFunctionCall","src":"1171:12:20"},"nodeType":"YulExpressionStatement","src":"1171:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1138:5:20"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1159:5:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1152:6:20"},"nodeType":"YulFunctionCall","src":"1152:13:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1145:6:20"},"nodeType":"YulFunctionCall","src":"1145:21:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1135:2:20"},"nodeType":"YulFunctionCall","src":"1135:32:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1128:6:20"},"nodeType":"YulFunctionCall","src":"1128:40:20"},"nodeType":"YulIf","src":"1125:60:20"}]},"name":"abi_decode_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1056:6:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1067:5:20","type":""}],"src":"1031:160:20"},{"body":{"nodeType":"YulBlock","src":"1356:507:20","statements":[{"body":{"nodeType":"YulBlock","src":"1403:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1412:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1415:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1405:6:20"},"nodeType":"YulFunctionCall","src":"1405:12:20"},"nodeType":"YulExpressionStatement","src":"1405:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1377:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"1386:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1373:3:20"},"nodeType":"YulFunctionCall","src":"1373:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"1398:3:20","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1369:3:20"},"nodeType":"YulFunctionCall","src":"1369:33:20"},"nodeType":"YulIf","src":"1366:53:20"},{"nodeType":"YulVariableDeclaration","src":"1428:37:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1455:9:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1442:12:20"},"nodeType":"YulFunctionCall","src":"1442:23:20"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1432:6:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"1508:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1517:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1520:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1510:6:20"},"nodeType":"YulFunctionCall","src":"1510:12:20"},"nodeType":"YulExpressionStatement","src":"1510:12:20"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1480:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"1488:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1477:2:20"},"nodeType":"YulFunctionCall","src":"1477:30:20"},"nodeType":"YulIf","src":"1474:50:20"},{"nodeType":"YulAssignment","src":"1533:60:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1565:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"1576:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1561:3:20"},"nodeType":"YulFunctionCall","src":"1561:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1585:7:20"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"1543:17:20"},"nodeType":"YulFunctionCall","src":"1543:50:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1533:6:20"}]},{"nodeType":"YulAssignment","src":"1602:42:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1629:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"1640:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1625:3:20"},"nodeType":"YulFunctionCall","src":"1625:18:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1612:12:20"},"nodeType":"YulFunctionCall","src":"1612:32:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1602:6:20"}]},{"nodeType":"YulAssignment","src":"1653:42:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1680:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"1691:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1676:3:20"},"nodeType":"YulFunctionCall","src":"1676:18:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1663:12:20"},"nodeType":"YulFunctionCall","src":"1663:32:20"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1653:6:20"}]},{"nodeType":"YulAssignment","src":"1704:42:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1731:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"1742:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1727:3:20"},"nodeType":"YulFunctionCall","src":"1727:18:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1714:12:20"},"nodeType":"YulFunctionCall","src":"1714:32:20"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"1704:6:20"}]},{"nodeType":"YulAssignment","src":"1755:47:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1786:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"1797:3:20","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1782:3:20"},"nodeType":"YulFunctionCall","src":"1782:19:20"}],"functionName":{"name":"abi_decode_uint8","nodeType":"YulIdentifier","src":"1765:16:20"},"nodeType":"YulFunctionCall","src":"1765:37:20"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"1755:6:20"}]},{"nodeType":"YulAssignment","src":"1811:46:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1841:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"1852:3:20","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1837:3:20"},"nodeType":"YulFunctionCall","src":"1837:19:20"}],"functionName":{"name":"abi_decode_bool","nodeType":"YulIdentifier","src":"1821:15:20"},"nodeType":"YulFunctionCall","src":"1821:36:20"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"1811:6:20"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_uint256t_uint256t_uint256t_uint8t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1282:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1293:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1305:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1313:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1321:6:20","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1329:6:20","type":""},{"name":"value4","nodeType":"YulTypedName","src":"1337:6:20","type":""},{"name":"value5","nodeType":"YulTypedName","src":"1345:6:20","type":""}],"src":"1196:667:20"},{"body":{"nodeType":"YulBlock","src":"1900:95:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1917:1:20","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1924:3:20","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1929:10:20","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1920:3:20"},"nodeType":"YulFunctionCall","src":"1920:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1910:6:20"},"nodeType":"YulFunctionCall","src":"1910:31:20"},"nodeType":"YulExpressionStatement","src":"1910:31:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1957:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1960:4:20","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1950:6:20"},"nodeType":"YulFunctionCall","src":"1950:15:20"},"nodeType":"YulExpressionStatement","src":"1950:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1981:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1984:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1974:6:20"},"nodeType":"YulFunctionCall","src":"1974:15:20"},"nodeType":"YulExpressionStatement","src":"1974:15:20"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"1868:127:20"},{"body":{"nodeType":"YulBlock","src":"2058:186:20","statements":[{"body":{"nodeType":"YulBlock","src":"2100:111:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2121:1:20","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2128:3:20","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2133:10:20","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2124:3:20"},"nodeType":"YulFunctionCall","src":"2124:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2114:6:20"},"nodeType":"YulFunctionCall","src":"2114:31:20"},"nodeType":"YulExpressionStatement","src":"2114:31:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2165:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2168:4:20","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2158:6:20"},"nodeType":"YulFunctionCall","src":"2158:15:20"},"nodeType":"YulExpressionStatement","src":"2158:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2193:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2196:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2186:6:20"},"nodeType":"YulFunctionCall","src":"2186:15:20"},"nodeType":"YulExpressionStatement","src":"2186:15:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2081:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"2088:1:20","type":"","value":"3"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2078:2:20"},"nodeType":"YulFunctionCall","src":"2078:12:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2071:6:20"},"nodeType":"YulFunctionCall","src":"2071:20:20"},"nodeType":"YulIf","src":"2068:143:20"},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2227:3:20"},{"name":"value","nodeType":"YulIdentifier","src":"2232:5:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2220:6:20"},"nodeType":"YulFunctionCall","src":"2220:18:20"},"nodeType":"YulExpressionStatement","src":"2220:18:20"}]},"name":"abi_encode_enum_VerificationTier","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2042:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2049:3:20","type":""}],"src":"2000:244:20"},{"body":{"nodeType":"YulBlock","src":"2397:145:20","statements":[{"nodeType":"YulAssignment","src":"2407:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2419:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"2430:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2415:3:20"},"nodeType":"YulFunctionCall","src":"2415:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2407:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2475:6:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"2483:9:20"}],"functionName":{"name":"abi_encode_enum_VerificationTier","nodeType":"YulIdentifier","src":"2442:32:20"},"nodeType":"YulFunctionCall","src":"2442:51:20"},"nodeType":"YulExpressionStatement","src":"2442:51:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2513:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"2524:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2509:3:20"},"nodeType":"YulFunctionCall","src":"2509:18:20"},{"name":"value1","nodeType":"YulIdentifier","src":"2529:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2502:6:20"},"nodeType":"YulFunctionCall","src":"2502:34:20"},"nodeType":"YulExpressionStatement","src":"2502:34:20"}]},"name":"abi_encode_tuple_t_enum$_VerificationTier_$6389_t_uint256__to_t_uint8_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2358:9:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2369:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2377:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2388:4:20","type":""}],"src":"2249:293:20"},{"body":{"nodeType":"YulBlock","src":"2610:94:20","statements":[{"nodeType":"YulAssignment","src":"2620:29:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2642:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2629:12:20"},"nodeType":"YulFunctionCall","src":"2629:20:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2620:5:20"}]},{"body":{"nodeType":"YulBlock","src":"2682:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2691:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2694:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2684:6:20"},"nodeType":"YulFunctionCall","src":"2684:12:20"},"nodeType":"YulExpressionStatement","src":"2684:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2671:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"2678:1:20","type":"","value":"3"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2668:2:20"},"nodeType":"YulFunctionCall","src":"2668:12:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2661:6:20"},"nodeType":"YulFunctionCall","src":"2661:20:20"},"nodeType":"YulIf","src":"2658:40:20"}]},"name":"abi_decode_enum_VerificationTier","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2589:6:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2600:5:20","type":""}],"src":"2547:157:20"},{"body":{"nodeType":"YulBlock","src":"2827:313:20","statements":[{"body":{"nodeType":"YulBlock","src":"2873:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2882:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2885:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2875:6:20"},"nodeType":"YulFunctionCall","src":"2875:12:20"},"nodeType":"YulExpressionStatement","src":"2875:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2848:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"2857:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2844:3:20"},"nodeType":"YulFunctionCall","src":"2844:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"2869:2:20","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2840:3:20"},"nodeType":"YulFunctionCall","src":"2840:32:20"},"nodeType":"YulIf","src":"2837:52:20"},{"nodeType":"YulVariableDeclaration","src":"2898:37:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2925:9:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2912:12:20"},"nodeType":"YulFunctionCall","src":"2912:23:20"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2902:6:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"2978:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2987:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2990:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2980:6:20"},"nodeType":"YulFunctionCall","src":"2980:12:20"},"nodeType":"YulExpressionStatement","src":"2980:12:20"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2950:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"2958:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2947:2:20"},"nodeType":"YulFunctionCall","src":"2947:30:20"},"nodeType":"YulIf","src":"2944:50:20"},{"nodeType":"YulAssignment","src":"3003:60:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3035:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"3046:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3031:3:20"},"nodeType":"YulFunctionCall","src":"3031:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3055:7:20"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"3013:17:20"},"nodeType":"YulFunctionCall","src":"3013:50:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3003:6:20"}]},{"nodeType":"YulAssignment","src":"3072:62:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3119:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"3130:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3115:3:20"},"nodeType":"YulFunctionCall","src":"3115:18:20"}],"functionName":{"name":"abi_decode_enum_VerificationTier","nodeType":"YulIdentifier","src":"3082:32:20"},"nodeType":"YulFunctionCall","src":"3082:52:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3072:6:20"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_enum$_VerificationTier_$6389","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2785:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2796:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2808:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2816:6:20","type":""}],"src":"2709:431:20"},{"body":{"nodeType":"YulBlock","src":"3246:76:20","statements":[{"nodeType":"YulAssignment","src":"3256:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3268:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"3279:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3264:3:20"},"nodeType":"YulFunctionCall","src":"3264:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3256:4:20"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3298:9:20"},{"name":"value0","nodeType":"YulIdentifier","src":"3309:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3291:6:20"},"nodeType":"YulFunctionCall","src":"3291:25:20"},"nodeType":"YulExpressionStatement","src":"3291:25:20"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3215:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3226:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3237:4:20","type":""}],"src":"3145:177:20"},{"body":{"nodeType":"YulBlock","src":"3443:271:20","statements":[{"body":{"nodeType":"YulBlock","src":"3490:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3499:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3502:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3492:6:20"},"nodeType":"YulFunctionCall","src":"3492:12:20"},"nodeType":"YulExpressionStatement","src":"3492:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3464:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"3473:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3460:3:20"},"nodeType":"YulFunctionCall","src":"3460:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"3485:3:20","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3456:3:20"},"nodeType":"YulFunctionCall","src":"3456:33:20"},"nodeType":"YulIf","src":"3453:53:20"},{"nodeType":"YulAssignment","src":"3515:33:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3538:9:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3525:12:20"},"nodeType":"YulFunctionCall","src":"3525:23:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3515:6:20"}]},{"nodeType":"YulAssignment","src":"3557:42:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3584:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"3595:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3580:3:20"},"nodeType":"YulFunctionCall","src":"3580:18:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3567:12:20"},"nodeType":"YulFunctionCall","src":"3567:32:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3557:6:20"}]},{"nodeType":"YulAssignment","src":"3608:46:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3639:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"3650:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3635:3:20"},"nodeType":"YulFunctionCall","src":"3635:18:20"}],"functionName":{"name":"abi_decode_uint8","nodeType":"YulIdentifier","src":"3618:16:20"},"nodeType":"YulFunctionCall","src":"3618:36:20"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3608:6:20"}]},{"nodeType":"YulAssignment","src":"3663:45:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3693:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"3704:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3689:3:20"},"nodeType":"YulFunctionCall","src":"3689:18:20"}],"functionName":{"name":"abi_decode_bool","nodeType":"YulIdentifier","src":"3673:15:20"},"nodeType":"YulFunctionCall","src":"3673:35:20"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"3663:6:20"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_uint8t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3385:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3396:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3408:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3416:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3424:6:20","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3432:6:20","type":""}],"src":"3327:387:20"},{"body":{"nodeType":"YulBlock","src":"3816:87:20","statements":[{"nodeType":"YulAssignment","src":"3826:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3838:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"3849:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3834:3:20"},"nodeType":"YulFunctionCall","src":"3834:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3826:4:20"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3868:9:20"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3883:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"3891:4:20","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3879:3:20"},"nodeType":"YulFunctionCall","src":"3879:17:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3861:6:20"},"nodeType":"YulFunctionCall","src":"3861:36:20"},"nodeType":"YulExpressionStatement","src":"3861:36:20"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3785:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3796:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3807:4:20","type":""}],"src":"3719:184:20"},{"body":{"nodeType":"YulBlock","src":"4009:102:20","statements":[{"nodeType":"YulAssignment","src":"4019:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4031:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"4042:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4027:3:20"},"nodeType":"YulFunctionCall","src":"4027:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4019:4:20"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4061:9:20"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4076:6:20"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4092:3:20","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"4097:1:20","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4088:3:20"},"nodeType":"YulFunctionCall","src":"4088:11:20"},{"kind":"number","nodeType":"YulLiteral","src":"4101:1:20","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4084:3:20"},"nodeType":"YulFunctionCall","src":"4084:19:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4072:3:20"},"nodeType":"YulFunctionCall","src":"4072:32:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4054:6:20"},"nodeType":"YulFunctionCall","src":"4054:51:20"},"nodeType":"YulExpressionStatement","src":"4054:51:20"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3978:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3989:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4000:4:20","type":""}],"src":"3908:203:20"},{"body":{"nodeType":"YulBlock","src":"4196:242:20","statements":[{"body":{"nodeType":"YulBlock","src":"4242:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4251:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4254:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4244:6:20"},"nodeType":"YulFunctionCall","src":"4244:12:20"},"nodeType":"YulExpressionStatement","src":"4244:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4217:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"4226:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4213:3:20"},"nodeType":"YulFunctionCall","src":"4213:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"4238:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4209:3:20"},"nodeType":"YulFunctionCall","src":"4209:32:20"},"nodeType":"YulIf","src":"4206:52:20"},{"nodeType":"YulVariableDeclaration","src":"4267:37:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4294:9:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4281:12:20"},"nodeType":"YulFunctionCall","src":"4281:23:20"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4271:6:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"4347:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4356:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4359:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4349:6:20"},"nodeType":"YulFunctionCall","src":"4349:12:20"},"nodeType":"YulExpressionStatement","src":"4349:12:20"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4319:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"4327:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4316:2:20"},"nodeType":"YulFunctionCall","src":"4316:30:20"},"nodeType":"YulIf","src":"4313:50:20"},{"nodeType":"YulAssignment","src":"4372:60:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4404:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"4415:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4400:3:20"},"nodeType":"YulFunctionCall","src":"4400:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4424:7:20"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"4382:17:20"},"nodeType":"YulFunctionCall","src":"4382:50:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4372:6:20"}]}]},"name":"abi_decode_tuple_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4162:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4173:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4185:6:20","type":""}],"src":"4116:322:20"},{"body":{"nodeType":"YulBlock","src":"4602:500:20","statements":[{"nodeType":"YulAssignment","src":"4612:27:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4624:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"4635:3:20","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4620:3:20"},"nodeType":"YulFunctionCall","src":"4620:19:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4612:4:20"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4655:9:20"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4672:6:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4666:5:20"},"nodeType":"YulFunctionCall","src":"4666:13:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4648:6:20"},"nodeType":"YulFunctionCall","src":"4648:32:20"},"nodeType":"YulExpressionStatement","src":"4648:32:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4700:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"4711:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4696:3:20"},"nodeType":"YulFunctionCall","src":"4696:20:20"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4728:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"4736:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4724:3:20"},"nodeType":"YulFunctionCall","src":"4724:17:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4718:5:20"},"nodeType":"YulFunctionCall","src":"4718:24:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4689:6:20"},"nodeType":"YulFunctionCall","src":"4689:54:20"},"nodeType":"YulExpressionStatement","src":"4689:54:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4763:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"4774:4:20","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4759:3:20"},"nodeType":"YulFunctionCall","src":"4759:20:20"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4791:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"4799:4:20","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4787:3:20"},"nodeType":"YulFunctionCall","src":"4787:17:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4781:5:20"},"nodeType":"YulFunctionCall","src":"4781:24:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4752:6:20"},"nodeType":"YulFunctionCall","src":"4752:54:20"},"nodeType":"YulExpressionStatement","src":"4752:54:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4826:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"4837:4:20","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4822:3:20"},"nodeType":"YulFunctionCall","src":"4822:20:20"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4858:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"4866:4:20","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4854:3:20"},"nodeType":"YulFunctionCall","src":"4854:17:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4848:5:20"},"nodeType":"YulFunctionCall","src":"4848:24:20"},{"kind":"number","nodeType":"YulLiteral","src":"4874:4:20","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4844:3:20"},"nodeType":"YulFunctionCall","src":"4844:35:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4815:6:20"},"nodeType":"YulFunctionCall","src":"4815:65:20"},"nodeType":"YulExpressionStatement","src":"4815:65:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4900:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"4911:4:20","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4896:3:20"},"nodeType":"YulFunctionCall","src":"4896:20:20"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4932:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"4940:4:20","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4928:3:20"},"nodeType":"YulFunctionCall","src":"4928:17:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4922:5:20"},"nodeType":"YulFunctionCall","src":"4922:24:20"},{"kind":"number","nodeType":"YulLiteral","src":"4948:4:20","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4918:3:20"},"nodeType":"YulFunctionCall","src":"4918:35:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4889:6:20"},"nodeType":"YulFunctionCall","src":"4889:65:20"},"nodeType":"YulExpressionStatement","src":"4889:65:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4974:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"4985:4:20","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4970:3:20"},"nodeType":"YulFunctionCall","src":"4970:20:20"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5016:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"5024:4:20","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5012:3:20"},"nodeType":"YulFunctionCall","src":"5012:17:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5006:5:20"},"nodeType":"YulFunctionCall","src":"5006:24:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4999:6:20"},"nodeType":"YulFunctionCall","src":"4999:32:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4992:6:20"},"nodeType":"YulFunctionCall","src":"4992:40:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4963:6:20"},"nodeType":"YulFunctionCall","src":"4963:70:20"},"nodeType":"YulExpressionStatement","src":"4963:70:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5053:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"5064:4:20","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5049:3:20"},"nodeType":"YulFunctionCall","src":"5049:20:20"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5081:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"5089:4:20","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5077:3:20"},"nodeType":"YulFunctionCall","src":"5077:17:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5071:5:20"},"nodeType":"YulFunctionCall","src":"5071:24:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5042:6:20"},"nodeType":"YulFunctionCall","src":"5042:54:20"},"nodeType":"YulExpressionStatement","src":"5042:54:20"}]},"name":"abi_encode_tuple_t_struct$_VehicleRisk_$7324_memory_ptr__to_t_struct$_VehicleRisk_$7324_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4571:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4582:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4593:4:20","type":""}],"src":"4443:659:20"},{"body":{"nodeType":"YulBlock","src":"5198:130:20","statements":[{"body":{"nodeType":"YulBlock","src":"5244:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5253:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5256:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5246:6:20"},"nodeType":"YulFunctionCall","src":"5246:12:20"},"nodeType":"YulExpressionStatement","src":"5246:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5219:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"5228:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5215:3:20"},"nodeType":"YulFunctionCall","src":"5215:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"5240:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5211:3:20"},"nodeType":"YulFunctionCall","src":"5211:32:20"},"nodeType":"YulIf","src":"5208:52:20"},{"nodeType":"YulAssignment","src":"5269:53:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5312:9:20"}],"functionName":{"name":"abi_decode_enum_VerificationTier","nodeType":"YulIdentifier","src":"5279:32:20"},"nodeType":"YulFunctionCall","src":"5279:43:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5269:6:20"}]}]},"name":"abi_decode_tuple_t_enum$_VerificationTier_$6389","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5164:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5175:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5187:6:20","type":""}],"src":"5107:221:20"},{"body":{"nodeType":"YulBlock","src":"5518:206:20","statements":[{"nodeType":"YulAssignment","src":"5528:27:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5540:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"5551:3:20","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5536:3:20"},"nodeType":"YulFunctionCall","src":"5536:19:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5528:4:20"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5571:9:20"},{"name":"value0","nodeType":"YulIdentifier","src":"5582:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5564:6:20"},"nodeType":"YulFunctionCall","src":"5564:25:20"},"nodeType":"YulExpressionStatement","src":"5564:25:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5609:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"5620:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5605:3:20"},"nodeType":"YulFunctionCall","src":"5605:18:20"},{"name":"value1","nodeType":"YulIdentifier","src":"5625:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5598:6:20"},"nodeType":"YulFunctionCall","src":"5598:34:20"},"nodeType":"YulExpressionStatement","src":"5598:34:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5652:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"5663:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5648:3:20"},"nodeType":"YulFunctionCall","src":"5648:18:20"},{"name":"value2","nodeType":"YulIdentifier","src":"5668:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5641:6:20"},"nodeType":"YulFunctionCall","src":"5641:34:20"},"nodeType":"YulExpressionStatement","src":"5641:34:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5695:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"5706:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5691:3:20"},"nodeType":"YulFunctionCall","src":"5691:18:20"},{"name":"value3","nodeType":"YulIdentifier","src":"5711:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5684:6:20"},"nodeType":"YulFunctionCall","src":"5684:34:20"},"nodeType":"YulExpressionStatement","src":"5684:34:20"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5463:9:20","type":""},{"name":"value3","nodeType":"YulTypedName","src":"5474:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5482:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5490:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5498:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5509:4:20","type":""}],"src":"5333:391:20"},{"body":{"nodeType":"YulBlock","src":"5814:165:20","statements":[{"body":{"nodeType":"YulBlock","src":"5860:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5869:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5872:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5862:6:20"},"nodeType":"YulFunctionCall","src":"5862:12:20"},"nodeType":"YulExpressionStatement","src":"5862:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5835:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"5844:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5831:3:20"},"nodeType":"YulFunctionCall","src":"5831:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"5856:2:20","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5827:3:20"},"nodeType":"YulFunctionCall","src":"5827:32:20"},"nodeType":"YulIf","src":"5824:52:20"},{"nodeType":"YulAssignment","src":"5885:33:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5908:9:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5895:12:20"},"nodeType":"YulFunctionCall","src":"5895:23:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5885:6:20"}]},{"nodeType":"YulAssignment","src":"5927:46:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5958:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"5969:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5954:3:20"},"nodeType":"YulFunctionCall","src":"5954:18:20"}],"functionName":{"name":"abi_decode_uint8","nodeType":"YulIdentifier","src":"5937:16:20"},"nodeType":"YulFunctionCall","src":"5937:36:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5927:6:20"}]}]},"name":"abi_decode_tuple_t_uint256t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5772:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5783:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5795:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5803:6:20","type":""}],"src":"5729:250:20"},{"body":{"nodeType":"YulBlock","src":"6104:102:20","statements":[{"nodeType":"YulAssignment","src":"6114:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6126:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"6137:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6122:3:20"},"nodeType":"YulFunctionCall","src":"6122:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6114:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6182:6:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"6190:9:20"}],"functionName":{"name":"abi_encode_enum_VerificationTier","nodeType":"YulIdentifier","src":"6149:32:20"},"nodeType":"YulFunctionCall","src":"6149:51:20"},"nodeType":"YulExpressionStatement","src":"6149:51:20"}]},"name":"abi_encode_tuple_t_enum$_VerificationTier_$6389__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6073:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6084:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6095:4:20","type":""}],"src":"5984:222:20"},{"body":{"nodeType":"YulBlock","src":"6466:376:20","statements":[{"nodeType":"YulAssignment","src":"6476:27:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6488:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"6499:3:20","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6484:3:20"},"nodeType":"YulFunctionCall","src":"6484:19:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6476:4:20"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6519:9:20"},{"name":"value0","nodeType":"YulIdentifier","src":"6530:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6512:6:20"},"nodeType":"YulFunctionCall","src":"6512:25:20"},"nodeType":"YulExpressionStatement","src":"6512:25:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6557:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"6568:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6553:3:20"},"nodeType":"YulFunctionCall","src":"6553:18:20"},{"name":"value1","nodeType":"YulIdentifier","src":"6573:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6546:6:20"},"nodeType":"YulFunctionCall","src":"6546:34:20"},"nodeType":"YulExpressionStatement","src":"6546:34:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6600:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"6611:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6596:3:20"},"nodeType":"YulFunctionCall","src":"6596:18:20"},{"name":"value2","nodeType":"YulIdentifier","src":"6616:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6589:6:20"},"nodeType":"YulFunctionCall","src":"6589:34:20"},"nodeType":"YulExpressionStatement","src":"6589:34:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6643:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"6654:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6639:3:20"},"nodeType":"YulFunctionCall","src":"6639:18:20"},{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"6663:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"6671:4:20","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6659:3:20"},"nodeType":"YulFunctionCall","src":"6659:17:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6632:6:20"},"nodeType":"YulFunctionCall","src":"6632:45:20"},"nodeType":"YulExpressionStatement","src":"6632:45:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6697:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"6708:3:20","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6693:3:20"},"nodeType":"YulFunctionCall","src":"6693:19:20"},{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"6718:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"6726:4:20","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6714:3:20"},"nodeType":"YulFunctionCall","src":"6714:17:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6686:6:20"},"nodeType":"YulFunctionCall","src":"6686:46:20"},"nodeType":"YulExpressionStatement","src":"6686:46:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6752:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"6763:3:20","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6748:3:20"},"nodeType":"YulFunctionCall","src":"6748:19:20"},{"arguments":[{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"6783:6:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6776:6:20"},"nodeType":"YulFunctionCall","src":"6776:14:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6769:6:20"},"nodeType":"YulFunctionCall","src":"6769:22:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6741:6:20"},"nodeType":"YulFunctionCall","src":"6741:51:20"},"nodeType":"YulExpressionStatement","src":"6741:51:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6812:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"6823:3:20","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6808:3:20"},"nodeType":"YulFunctionCall","src":"6808:19:20"},{"name":"value6","nodeType":"YulIdentifier","src":"6829:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6801:6:20"},"nodeType":"YulFunctionCall","src":"6801:35:20"},"nodeType":"YulExpressionStatement","src":"6801:35:20"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint8_t_uint8_t_bool_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint8_t_uint8_t_bool_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6387:9:20","type":""},{"name":"value6","nodeType":"YulTypedName","src":"6398:6:20","type":""},{"name":"value5","nodeType":"YulTypedName","src":"6406:6:20","type":""},{"name":"value4","nodeType":"YulTypedName","src":"6414:6:20","type":""},{"name":"value3","nodeType":"YulTypedName","src":"6422:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6430:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6438:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6446:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6457:4:20","type":""}],"src":"6211:631:20"},{"body":{"nodeType":"YulBlock","src":"7006:336:20","statements":[{"body":{"nodeType":"YulBlock","src":"7053:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7062:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7065:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7055:6:20"},"nodeType":"YulFunctionCall","src":"7055:12:20"},"nodeType":"YulExpressionStatement","src":"7055:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7027:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"7036:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7023:3:20"},"nodeType":"YulFunctionCall","src":"7023:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"7048:3:20","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7019:3:20"},"nodeType":"YulFunctionCall","src":"7019:33:20"},"nodeType":"YulIf","src":"7016:53:20"},{"nodeType":"YulAssignment","src":"7078:53:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7121:9:20"}],"functionName":{"name":"abi_decode_enum_VerificationTier","nodeType":"YulIdentifier","src":"7088:32:20"},"nodeType":"YulFunctionCall","src":"7088:43:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7078:6:20"}]},{"nodeType":"YulAssignment","src":"7140:42:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7167:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"7178:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7163:3:20"},"nodeType":"YulFunctionCall","src":"7163:18:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7150:12:20"},"nodeType":"YulFunctionCall","src":"7150:32:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7140:6:20"}]},{"nodeType":"YulAssignment","src":"7191:42:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7218:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"7229:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7214:3:20"},"nodeType":"YulFunctionCall","src":"7214:18:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7201:12:20"},"nodeType":"YulFunctionCall","src":"7201:32:20"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"7191:6:20"}]},{"nodeType":"YulAssignment","src":"7242:42:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7269:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"7280:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7265:3:20"},"nodeType":"YulFunctionCall","src":"7265:18:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7252:12:20"},"nodeType":"YulFunctionCall","src":"7252:32:20"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"7242:6:20"}]},{"nodeType":"YulAssignment","src":"7293:43:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7320:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"7331:3:20","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7316:3:20"},"nodeType":"YulFunctionCall","src":"7316:19:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7303:12:20"},"nodeType":"YulFunctionCall","src":"7303:33:20"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"7293:6:20"}]}]},"name":"abi_decode_tuple_t_enum$_VerificationTier_$6389t_uint256t_uint256t_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6940:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6951:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6963:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6971:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6979:6:20","type":""},{"name":"value3","nodeType":"YulTypedName","src":"6987:6:20","type":""},{"name":"value4","nodeType":"YulTypedName","src":"6995:6:20","type":""}],"src":"6847:495:20"},{"body":{"nodeType":"YulBlock","src":"7417:216:20","statements":[{"body":{"nodeType":"YulBlock","src":"7463:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7472:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7475:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7465:6:20"},"nodeType":"YulFunctionCall","src":"7465:12:20"},"nodeType":"YulExpressionStatement","src":"7465:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7438:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"7447:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7434:3:20"},"nodeType":"YulFunctionCall","src":"7434:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"7459:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7430:3:20"},"nodeType":"YulFunctionCall","src":"7430:32:20"},"nodeType":"YulIf","src":"7427:52:20"},{"nodeType":"YulVariableDeclaration","src":"7488:36:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7514:9:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7501:12:20"},"nodeType":"YulFunctionCall","src":"7501:23:20"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"7492:5:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"7587:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7596:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7599:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7589:6:20"},"nodeType":"YulFunctionCall","src":"7589:12:20"},"nodeType":"YulExpressionStatement","src":"7589:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7546:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7557:5:20"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7572:3:20","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"7577:1:20","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7568:3:20"},"nodeType":"YulFunctionCall","src":"7568:11:20"},{"kind":"number","nodeType":"YulLiteral","src":"7581:1:20","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7564:3:20"},"nodeType":"YulFunctionCall","src":"7564:19:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7553:3:20"},"nodeType":"YulFunctionCall","src":"7553:31:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7543:2:20"},"nodeType":"YulFunctionCall","src":"7543:42:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7536:6:20"},"nodeType":"YulFunctionCall","src":"7536:50:20"},"nodeType":"YulIf","src":"7533:70:20"},{"nodeType":"YulAssignment","src":"7612:15:20","value":{"name":"value","nodeType":"YulIdentifier","src":"7622:5:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7612:6:20"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7383:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7394:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7406:6:20","type":""}],"src":"7347:286:20"},{"body":{"nodeType":"YulBlock","src":"7812:172:20","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7829:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"7840:2:20","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7822:6:20"},"nodeType":"YulFunctionCall","src":"7822:21:20"},"nodeType":"YulExpressionStatement","src":"7822:21:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7863:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"7874:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7859:3:20"},"nodeType":"YulFunctionCall","src":"7859:18:20"},{"kind":"number","nodeType":"YulLiteral","src":"7879:2:20","type":"","value":"22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7852:6:20"},"nodeType":"YulFunctionCall","src":"7852:30:20"},"nodeType":"YulExpressionStatement","src":"7852:30:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7902:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"7913:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7898:3:20"},"nodeType":"YulFunctionCall","src":"7898:18:20"},{"hexValue":"436f6e646974696f6e206d75737420626520312d3130","kind":"string","nodeType":"YulLiteral","src":"7918:24:20","type":"","value":"Condition must be 1-10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7891:6:20"},"nodeType":"YulFunctionCall","src":"7891:52:20"},"nodeType":"YulExpressionStatement","src":"7891:52:20"},{"nodeType":"YulAssignment","src":"7952:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7964:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"7975:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7960:3:20"},"nodeType":"YulFunctionCall","src":"7960:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7952:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_240f2cb56ab5d552ae68690a8e5deef2a9c45637fcc1f8de554c4218753ac3a7__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7789:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7803:4:20","type":""}],"src":"7638:346:20"},{"body":{"nodeType":"YulBlock","src":"8163:165:20","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8180:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"8191:2:20","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8173:6:20"},"nodeType":"YulFunctionCall","src":"8173:21:20"},"nodeType":"YulExpressionStatement","src":"8173:21:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8214:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"8225:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8210:3:20"},"nodeType":"YulFunctionCall","src":"8210:18:20"},{"kind":"number","nodeType":"YulLiteral","src":"8230:2:20","type":"","value":"15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8203:6:20"},"nodeType":"YulFunctionCall","src":"8203:30:20"},"nodeType":"YulExpressionStatement","src":"8203:30:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8253:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"8264:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8249:3:20"},"nodeType":"YulFunctionCall","src":"8249:18:20"},{"hexValue":"496e76616c6964206d696c65616765","kind":"string","nodeType":"YulLiteral","src":"8269:17:20","type":"","value":"Invalid mileage"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8242:6:20"},"nodeType":"YulFunctionCall","src":"8242:45:20"},"nodeType":"YulExpressionStatement","src":"8242:45:20"},{"nodeType":"YulAssignment","src":"8296:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8308:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"8319:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8304:3:20"},"nodeType":"YulFunctionCall","src":"8304:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8296:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_a0cdf71dbdc54f4514cca7f791da40224dcc7f2b64e85da63bfb02a2785baf3b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8140:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8154:4:20","type":""}],"src":"7989:339:20"},{"body":{"nodeType":"YulBlock","src":"8399:184:20","statements":[{"nodeType":"YulVariableDeclaration","src":"8409:10:20","value":{"kind":"number","nodeType":"YulLiteral","src":"8418:1:20","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"8413:1:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"8478:63:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8503:3:20"},{"name":"i","nodeType":"YulIdentifier","src":"8508:1:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8499:3:20"},"nodeType":"YulFunctionCall","src":"8499:11:20"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8522:3:20"},{"name":"i","nodeType":"YulIdentifier","src":"8527:1:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8518:3:20"},"nodeType":"YulFunctionCall","src":"8518:11:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8512:5:20"},"nodeType":"YulFunctionCall","src":"8512:18:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8492:6:20"},"nodeType":"YulFunctionCall","src":"8492:39:20"},"nodeType":"YulExpressionStatement","src":"8492:39:20"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8439:1:20"},{"name":"length","nodeType":"YulIdentifier","src":"8442:6:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8436:2:20"},"nodeType":"YulFunctionCall","src":"8436:13:20"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"8450:19:20","statements":[{"nodeType":"YulAssignment","src":"8452:15:20","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8461:1:20"},{"kind":"number","nodeType":"YulLiteral","src":"8464:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8457:3:20"},"nodeType":"YulFunctionCall","src":"8457:10:20"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"8452:1:20"}]}]},"pre":{"nodeType":"YulBlock","src":"8432:3:20","statements":[]},"src":"8428:113:20"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8561:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"8566:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8557:3:20"},"nodeType":"YulFunctionCall","src":"8557:16:20"},{"kind":"number","nodeType":"YulLiteral","src":"8575:1:20","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8550:6:20"},"nodeType":"YulFunctionCall","src":"8550:27:20"},"nodeType":"YulExpressionStatement","src":"8550:27:20"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8377:3:20","type":""},{"name":"dst","nodeType":"YulTypedName","src":"8382:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"8387:6:20","type":""}],"src":"8333:250:20"},{"body":{"nodeType":"YulBlock","src":"8727:150:20","statements":[{"nodeType":"YulVariableDeclaration","src":"8737:27:20","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8757:6:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8751:5:20"},"nodeType":"YulFunctionCall","src":"8751:13:20"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8741:6:20","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8812:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"8820:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8808:3:20"},"nodeType":"YulFunctionCall","src":"8808:17:20"},{"name":"pos","nodeType":"YulIdentifier","src":"8827:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"8832:6:20"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"8773:34:20"},"nodeType":"YulFunctionCall","src":"8773:66:20"},"nodeType":"YulExpressionStatement","src":"8773:66:20"},{"nodeType":"YulAssignment","src":"8848:23:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8859:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"8864:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8855:3:20"},"nodeType":"YulFunctionCall","src":"8855:16:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8848:3:20"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8703:3:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8708:6:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8719:3:20","type":""}],"src":"8588:289:20"},{"body":{"nodeType":"YulBlock","src":"9074:404:20","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9091:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"9102:2:20","type":"","value":"96"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9084:6:20"},"nodeType":"YulFunctionCall","src":"9084:21:20"},"nodeType":"YulExpressionStatement","src":"9084:21:20"},{"nodeType":"YulVariableDeclaration","src":"9114:27:20","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9134:6:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9128:5:20"},"nodeType":"YulFunctionCall","src":"9128:13:20"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"9118:6:20","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9161:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"9172:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9157:3:20"},"nodeType":"YulFunctionCall","src":"9157:18:20"},{"name":"length","nodeType":"YulIdentifier","src":"9177:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9150:6:20"},"nodeType":"YulFunctionCall","src":"9150:34:20"},"nodeType":"YulExpressionStatement","src":"9150:34:20"},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9232:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"9240:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9228:3:20"},"nodeType":"YulFunctionCall","src":"9228:17:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9251:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"9262:3:20","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9247:3:20"},"nodeType":"YulFunctionCall","src":"9247:19:20"},{"name":"length","nodeType":"YulIdentifier","src":"9268:6:20"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"9193:34:20"},"nodeType":"YulFunctionCall","src":"9193:82:20"},"nodeType":"YulExpressionStatement","src":"9193:82:20"},{"nodeType":"YulAssignment","src":"9284:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9300:9:20"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9319:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"9327:2:20","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9315:3:20"},"nodeType":"YulFunctionCall","src":"9315:15:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9336:2:20","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"9332:3:20"},"nodeType":"YulFunctionCall","src":"9332:7:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9311:3:20"},"nodeType":"YulFunctionCall","src":"9311:29:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9296:3:20"},"nodeType":"YulFunctionCall","src":"9296:45:20"},{"kind":"number","nodeType":"YulLiteral","src":"9343:3:20","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9292:3:20"},"nodeType":"YulFunctionCall","src":"9292:55:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9284:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9367:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"9378:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9363:3:20"},"nodeType":"YulFunctionCall","src":"9363:20:20"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"9389:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"9397:4:20","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9385:3:20"},"nodeType":"YulFunctionCall","src":"9385:17:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9356:6:20"},"nodeType":"YulFunctionCall","src":"9356:47:20"},"nodeType":"YulExpressionStatement","src":"9356:47:20"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"9445:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9457:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"9468:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9453:3:20"},"nodeType":"YulFunctionCall","src":"9453:18:20"}],"functionName":{"name":"abi_encode_enum_VerificationTier","nodeType":"YulIdentifier","src":"9412:32:20"},"nodeType":"YulFunctionCall","src":"9412:60:20"},"nodeType":"YulExpressionStatement","src":"9412:60:20"}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_uint8_t_enum$_VerificationTier_$6389__to_t_string_memory_ptr_t_uint8_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9027:9:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9038:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9046:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9054:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9065:4:20","type":""}],"src":"8882:596:20"},{"body":{"nodeType":"YulBlock","src":"9515:95:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9532:1:20","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9539:3:20","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"9544:10:20","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9535:3:20"},"nodeType":"YulFunctionCall","src":"9535:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9525:6:20"},"nodeType":"YulFunctionCall","src":"9525:31:20"},"nodeType":"YulExpressionStatement","src":"9525:31:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9572:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"9575:4:20","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9565:6:20"},"nodeType":"YulFunctionCall","src":"9565:15:20"},"nodeType":"YulExpressionStatement","src":"9565:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9596:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9599:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9589:6:20"},"nodeType":"YulFunctionCall","src":"9589:15:20"},"nodeType":"YulExpressionStatement","src":"9589:15:20"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"9483:127:20"},{"body":{"nodeType":"YulBlock","src":"9667:116:20","statements":[{"nodeType":"YulAssignment","src":"9677:20:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9692:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"9695:1:20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"9688:3:20"},"nodeType":"YulFunctionCall","src":"9688:9:20"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"9677:7:20"}]},{"body":{"nodeType":"YulBlock","src":"9755:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"9757:16:20"},"nodeType":"YulFunctionCall","src":"9757:18:20"},"nodeType":"YulExpressionStatement","src":"9757:18:20"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9726:1:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9719:6:20"},"nodeType":"YulFunctionCall","src":"9719:9:20"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"9733:1:20"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"9740:7:20"},{"name":"x","nodeType":"YulIdentifier","src":"9749:1:20"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9736:3:20"},"nodeType":"YulFunctionCall","src":"9736:15:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"9730:2:20"},"nodeType":"YulFunctionCall","src":"9730:22:20"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"9716:2:20"},"nodeType":"YulFunctionCall","src":"9716:37:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9709:6:20"},"nodeType":"YulFunctionCall","src":"9709:45:20"},"nodeType":"YulIf","src":"9706:71:20"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"9646:1:20","type":""},{"name":"y","nodeType":"YulTypedName","src":"9649:1:20","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"9655:7:20","type":""}],"src":"9615:168:20"},{"body":{"nodeType":"YulBlock","src":"9836:77:20","statements":[{"nodeType":"YulAssignment","src":"9846:16:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9857:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"9860:1:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9853:3:20"},"nodeType":"YulFunctionCall","src":"9853:9:20"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"9846:3:20"}]},{"body":{"nodeType":"YulBlock","src":"9885:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"9887:16:20"},"nodeType":"YulFunctionCall","src":"9887:18:20"},"nodeType":"YulExpressionStatement","src":"9887:18:20"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9877:1:20"},{"name":"sum","nodeType":"YulIdentifier","src":"9880:3:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9874:2:20"},"nodeType":"YulFunctionCall","src":"9874:10:20"},"nodeType":"YulIf","src":"9871:36:20"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"9819:1:20","type":""},{"name":"y","nodeType":"YulTypedName","src":"9822:1:20","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"9828:3:20","type":""}],"src":"9788:125:20"},{"body":{"nodeType":"YulBlock","src":"9965:104:20","statements":[{"nodeType":"YulAssignment","src":"9975:39:20","value":{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9991:1:20"},{"kind":"number","nodeType":"YulLiteral","src":"9994:4:20","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9987:3:20"},"nodeType":"YulFunctionCall","src":"9987:12:20"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"10005:1:20"},{"kind":"number","nodeType":"YulLiteral","src":"10008:4:20","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10001:3:20"},"nodeType":"YulFunctionCall","src":"10001:12:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9983:3:20"},"nodeType":"YulFunctionCall","src":"9983:31:20"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"9975:4:20"}]},{"body":{"nodeType":"YulBlock","src":"10041:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"10043:16:20"},"nodeType":"YulFunctionCall","src":"10043:18:20"},"nodeType":"YulExpressionStatement","src":"10043:18:20"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"10029:4:20"},{"kind":"number","nodeType":"YulLiteral","src":"10035:4:20","type":"","value":"0xff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10026:2:20"},"nodeType":"YulFunctionCall","src":"10026:14:20"},"nodeType":"YulIf","src":"10023:40:20"}]},"name":"checked_sub_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"9947:1:20","type":""},{"name":"y","nodeType":"YulTypedName","src":"9950:1:20","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"9956:4:20","type":""}],"src":"9918:151:20"},{"body":{"nodeType":"YulBlock","src":"10123:79:20","statements":[{"nodeType":"YulAssignment","src":"10133:17:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10145:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"10148:1:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10141:3:20"},"nodeType":"YulFunctionCall","src":"10141:9:20"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"10133:4:20"}]},{"body":{"nodeType":"YulBlock","src":"10174:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"10176:16:20"},"nodeType":"YulFunctionCall","src":"10176:18:20"},"nodeType":"YulExpressionStatement","src":"10176:18:20"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"10165:4:20"},{"name":"x","nodeType":"YulIdentifier","src":"10171:1:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10162:2:20"},"nodeType":"YulFunctionCall","src":"10162:11:20"},"nodeType":"YulIf","src":"10159:37:20"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"10105:1:20","type":""},{"name":"y","nodeType":"YulTypedName","src":"10108:1:20","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"10114:4:20","type":""}],"src":"10074:128:20"},{"body":{"nodeType":"YulBlock","src":"10253:171:20","statements":[{"body":{"nodeType":"YulBlock","src":"10284:111:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10305:1:20","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10312:3:20","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"10317:10:20","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"10308:3:20"},"nodeType":"YulFunctionCall","src":"10308:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10298:6:20"},"nodeType":"YulFunctionCall","src":"10298:31:20"},"nodeType":"YulExpressionStatement","src":"10298:31:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10349:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10352:4:20","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10342:6:20"},"nodeType":"YulFunctionCall","src":"10342:15:20"},"nodeType":"YulExpressionStatement","src":"10342:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10377:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10380:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10370:6:20"},"nodeType":"YulFunctionCall","src":"10370:15:20"},"nodeType":"YulExpressionStatement","src":"10370:15:20"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"10273:1:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10266:6:20"},"nodeType":"YulFunctionCall","src":"10266:9:20"},"nodeType":"YulIf","src":"10263:132:20"},{"nodeType":"YulAssignment","src":"10404:14:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10413:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"10416:1:20"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"10409:3:20"},"nodeType":"YulFunctionCall","src":"10409:9:20"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"10404:1:20"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"10238:1:20","type":""},{"name":"y","nodeType":"YulTypedName","src":"10241:1:20","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"10247:1:20","type":""}],"src":"10207:217:20"},{"body":{"nodeType":"YulBlock","src":"10479:175:20","statements":[{"nodeType":"YulVariableDeclaration","src":"10489:50:20","value":{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10516:1:20"},{"kind":"number","nodeType":"YulLiteral","src":"10519:4:20","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10512:3:20"},"nodeType":"YulFunctionCall","src":"10512:12:20"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"10530:1:20"},{"kind":"number","nodeType":"YulLiteral","src":"10533:4:20","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10526:3:20"},"nodeType":"YulFunctionCall","src":"10526:12:20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"10508:3:20"},"nodeType":"YulFunctionCall","src":"10508:31:20"},"variables":[{"name":"product_raw","nodeType":"YulTypedName","src":"10493:11:20","type":""}]},{"nodeType":"YulAssignment","src":"10548:33:20","value":{"arguments":[{"name":"product_raw","nodeType":"YulIdentifier","src":"10563:11:20"},{"kind":"number","nodeType":"YulLiteral","src":"10576:4:20","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10559:3:20"},"nodeType":"YulFunctionCall","src":"10559:22:20"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"10548:7:20"}]},{"body":{"nodeType":"YulBlock","src":"10626:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"10628:16:20"},"nodeType":"YulFunctionCall","src":"10628:18:20"},"nodeType":"YulExpressionStatement","src":"10628:18:20"}]},"condition":{"arguments":[{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"10603:7:20"},{"name":"product_raw","nodeType":"YulIdentifier","src":"10612:11:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10600:2:20"},"nodeType":"YulFunctionCall","src":"10600:24:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10593:6:20"},"nodeType":"YulFunctionCall","src":"10593:32:20"},"nodeType":"YulIf","src":"10590:58:20"}]},"name":"checked_mul_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"10458:1:20","type":""},{"name":"y","nodeType":"YulTypedName","src":"10461:1:20","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"10467:7:20","type":""}],"src":"10429:225:20"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_uint8(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n    }\n    function abi_decode_bool(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_uint256t_uint256t_uint256t_uint8t_bool(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := abi_decode_uint8(add(headStart, 128))\n        value5 := abi_decode_bool(add(headStart, 160))\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_enum_VerificationTier(value, pos)\n    {\n        if iszero(lt(value, 3))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(pos, value)\n    }\n    function abi_encode_tuple_t_enum$_VerificationTier_$6389_t_uint256__to_t_uint8_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        abi_encode_enum_VerificationTier(value0, headStart)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_enum_VerificationTier(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(lt(value, 3)) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_enum$_VerificationTier_$6389(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        value1 := abi_decode_enum_VerificationTier(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint8t_bool(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := abi_decode_uint8(add(headStart, 64))\n        value3 := abi_decode_bool(add(headStart, 96))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_struct$_VehicleRisk_$7324_memory_ptr__to_t_struct$_VehicleRisk_$7324_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 224)\n        mstore(headStart, mload(value0))\n        mstore(add(headStart, 0x20), mload(add(value0, 0x20)))\n        mstore(add(headStart, 0x40), mload(add(value0, 0x40)))\n        mstore(add(headStart, 0x60), and(mload(add(value0, 0x60)), 0xff))\n        mstore(add(headStart, 0x80), and(mload(add(value0, 0x80)), 0xff))\n        mstore(add(headStart, 0xa0), iszero(iszero(mload(add(value0, 0xa0)))))\n        mstore(add(headStart, 0xc0), mload(add(value0, 0xc0)))\n    }\n    function abi_decode_tuple_t_enum$_VerificationTier_$6389(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_enum_VerificationTier(headStart)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_decode_tuple_t_uint256t_uint8(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_uint8(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_enum$_VerificationTier_$6389__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        abi_encode_enum_VerificationTier(value0, headStart)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint8_t_uint8_t_bool_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint8_t_uint8_t_bool_t_uint256__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 224)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), and(value3, 0xff))\n        mstore(add(headStart, 128), and(value4, 0xff))\n        mstore(add(headStart, 160), iszero(iszero(value5)))\n        mstore(add(headStart, 192), value6)\n    }\n    function abi_decode_tuple_t_enum$_VerificationTier_$6389t_uint256t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_enum_VerificationTier(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_240f2cb56ab5d552ae68690a8e5deef2a9c45637fcc1f8de554c4218753ac3a7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Condition must be 1-10\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a0cdf71dbdc54f4514cca7f791da40224dcc7f2b64e85da63bfb02a2785baf3b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Invalid mileage\")\n        tail := add(headStart, 96)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_uint8_t_enum$_VerificationTier_$6389__to_t_string_memory_ptr_t_uint8_t_uint8__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 96)\n        let length := mload(value0)\n        mstore(add(headStart, 96), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), add(headStart, 128), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 128)\n        mstore(add(headStart, 0x20), and(value1, 0xff))\n        abi_encode_enum_VerificationTier(value2, add(headStart, 64))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function checked_sub_t_uint8(x, y) -> diff\n    {\n        diff := sub(and(x, 0xff), and(y, 0xff))\n        if gt(diff, 0xff) { panic_error_0x11() }\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint8(x, y) -> product\n    {\n        let product_raw := mul(and(x, 0xff), and(y, 0xff))\n        product := and(product_raw, 0xff)\n        if iszero(eq(product, product_raw)) { panic_error_0x11() }\n    }\n}","id":20,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100a95760003560e01c80639b1e19a7116100715780639b1e19a714610143578063a870afcd146101b4578063af27c1521461020b578063e51267c71461022b578063ede77d5d146102c8578063f2fde38b146102db57600080fd5b80630944a8ca146100ae57806369c27e14146100d857806370ac03d8146100f9578063715018a61461011e5780638da5cb5b14610128575b600080fd5b6100c16100bc366004610977565b6102ee565b6040516100cf929190610a29565b60405180910390f35b6100eb6100e6366004610a53565b6104c5565b6040519081526020016100cf565b61010c610107366004610aa1565b6105ae565b60405160ff90911681526020016100cf565b610126610632565b005b6000546040516001600160a01b0390911681526020016100cf565b610156610151366004610ae7565b610646565b6040516100cf9190600060e08201905082518252602083015160208301526040830151604083015260ff606084015116606083015260ff608084015116608083015260a0830151151560a083015260c083015160c083015292915050565b6101eb6101c2366004610b1c565b600260208190526000918252604090912080546001820154928201546003909201549092919084565b6040805194855260208501939093529183015260608201526080016100cf565b61021e610219366004610b3e565b61070b565b6040516100cf9190610b61565b61028e610239366004610ae7565b8051602081830181018051600180835293830192909401919091209290528154908201546002830154600384015460049094015492939192909160ff8082169261010083048216926201000090049091169087565b6040805197885260208801969096529486019390935260ff9182166060860152166080840152151560a083015260c082015260e0016100cf565b6101266102d6366004610b6f565b610768565b6101266102e9366004610bb1565b6107f3565b600080600a8460ff1611156103435760405162461bcd60e51b81526020600482015260166024820152750436f6e646974696f6e206d75737420626520312d31360541b60448201526064015b60405180910390fd5b620f42408511156103885760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206d696c6561676560881b604482015260640161033a565b6000610396878787876105ae565b90506040518060e001604052808981526020018881526020018781526020018660ff1681526020018260ff16815260200185151581526020014281525060018a6040516103e39190610bfe565b908152604080519182900360209081019092208351815591830151600183015582015160028201556060820151600382018054608085015160a08601511515620100000262ff00001960ff9283166101000261ffff199094169290951691909117919091179290921691909117905560c090910151600490910155600061046a898361070b565b905060006104788b836104c5565b90507f3d95572704130bb661d2805806f913c134f4cb017e58bdf1c7041db1055001e18b84846040516104ad93929190610c1a565b60405180910390a1909a909950975050505050505050565b6000806001846040516104d89190610bfe565b90815260200160405180910390209050600060026000856002811115610500576105006109f1565b6002811115610511576105116109f1565b815260200190815260200160002090506000816000015490508160010154836001015461053e9190610c73565b6105489082610c8a565b60028301546003850154919250906105649060ff16600a610c9d565b60ff166105719190610c73565b61057b9082610c8a565b600384015490915062010000900460ff16156105a35760038201546105a09082610c8a565b90505b925050505b92915050565b600060646105bd866002610c73565b6105c79082610cb6565b90506105d561271086610cc9565b6105e0906003610c73565b6105ea9082610cb6565b90506105f7846005610ceb565b6106049060ff1682610c8a565b9050821561061a57610617601482610cb6565b90505b6064811115610627575060645b90505b949350505050565b61063a610831565b610644600061085e565b565b61068e6040518060e00160405280600081526020016000815260200160008152602001600060ff168152602001600060ff168152602001600015158152602001600081525090565b60018260405161069e9190610bfe565b90815260408051918290036020908101832060e08401835280548452600181015491840191909152600281015491830191909152600381015460ff80821660608501526101008204811660808501526201000090910416151560a08301526004015460c082015292915050565b60006702c68af0bb1400008310158015610729575060508260ff1610155b15610736575060026105a8565b67016345785d8a000083101580156107525750603c8260ff1610155b1561075f575060016105a8565b50600092915050565b610770610831565b604051806080016040528085815260200184815260200183815260200182815250600260008760028111156107a7576107a76109f1565b60028111156107b8576107b86109f1565b815260208082019290925260409081016000208351815591830151600183015582015160028201556060909101516003909101555050505050565b6107fb610831565b6001600160a01b03811661082557604051631e4fbdf760e01b81526000600482015260240161033a565b61082e8161085e565b50565b6000546001600160a01b031633146106445760405163118cdaa760e01b815233600482015260240161033a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126108d557600080fd5b813567ffffffffffffffff808211156108f0576108f06108ae565b604051601f8301601f19908116603f01168101908282118183101715610918576109186108ae565b8160405283815286602085880101111561093157600080fd5b836020870160208301376000602085830101528094505050505092915050565b803560ff8116811461096257600080fd5b919050565b8035801515811461096257600080fd5b60008060008060008060c0878903121561099057600080fd5b863567ffffffffffffffff8111156109a757600080fd5b6109b389828a016108c4565b9650506020870135945060408701359350606087013592506109d760808801610951565b91506109e560a08801610967565b90509295509295509295565b634e487b7160e01b600052602160045260246000fd5b60038110610a2557634e487b7160e01b600052602160045260246000fd5b9052565b60408101610a378285610a07565b8260208301529392505050565b80356003811061096257600080fd5b60008060408385031215610a6657600080fd5b823567ffffffffffffffff811115610a7d57600080fd5b610a89858286016108c4565b925050610a9860208401610a44565b90509250929050565b60008060008060808587031215610ab757600080fd5b8435935060208501359250610ace60408601610951565b9150610adc60608601610967565b905092959194509250565b600060208284031215610af957600080fd5b813567ffffffffffffffff811115610b1057600080fd5b61062a848285016108c4565b600060208284031215610b2e57600080fd5b610b3782610a44565b9392505050565b60008060408385031215610b5157600080fd5b82359150610a9860208401610951565b602081016105a88284610a07565b600080600080600060a08688031215610b8757600080fd5b610b9086610a44565b97602087013597506040870135966060810135965060800135945092505050565b600060208284031215610bc357600080fd5b81356001600160a01b0381168114610b3757600080fd5b60005b83811015610bf5578181015183820152602001610bdd565b50506000910152565b60008251610c10818460208701610bda565b9190910192915050565b6060815260008451806060840152610c39816080850160208901610bda565b60ff85166020840152601f01601f19168201608001905061062a6040830184610a07565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176105a8576105a8610c5d565b808201808211156105a8576105a8610c5d565b60ff82811682821603908111156105a8576105a8610c5d565b818103818111156105a8576105a8610c5d565b600082610ce657634e487b7160e01b600052601260045260246000fd5b500490565b60ff8181168382160290811690818114610d0757610d07610c5d565b509291505056fea26469706673582212203428032d8ef9b11a9880be6a98ee2dd0fb4e1b47231c339912ca6b724d4f748964736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9B1E19A7 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x9B1E19A7 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0xA870AFCD EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0xAF27C152 EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0xE51267C7 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0xEDE77D5D EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x944A8CA EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x69C27E14 EQ PUSH2 0xD8 JUMPI DUP1 PUSH4 0x70AC03D8 EQ PUSH2 0xF9 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x128 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0xBC CALLDATASIZE PUSH1 0x4 PUSH2 0x977 JUMP JUMPDEST PUSH2 0x2EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCF SWAP3 SWAP2 SWAP1 PUSH2 0xA29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEB PUSH2 0xE6 CALLDATASIZE PUSH1 0x4 PUSH2 0xA53 JUMP JUMPDEST PUSH2 0x4C5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCF JUMP JUMPDEST PUSH2 0x10C PUSH2 0x107 CALLDATASIZE PUSH1 0x4 PUSH2 0xAA1 JUMP JUMPDEST PUSH2 0x5AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCF JUMP JUMPDEST PUSH2 0x126 PUSH2 0x632 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCF JUMP JUMPDEST PUSH2 0x156 PUSH2 0x151 CALLDATASIZE PUSH1 0x4 PUSH2 0xAE7 JUMP JUMPDEST PUSH2 0x646 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCF SWAP2 SWAP1 PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP DUP3 MLOAD DUP3 MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0xFF PUSH1 0x60 DUP5 ADD MLOAD AND PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0xFF PUSH1 0x80 DUP5 ADD MLOAD AND PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP4 ADD MLOAD ISZERO ISZERO PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0xC0 DUP4 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1EB PUSH2 0x1C2 CALLDATASIZE PUSH1 0x4 PUSH2 0xB1C JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP3 ADD SLOAD PUSH1 0x3 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP3 SWAP2 SWAP1 DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0xCF JUMP JUMPDEST PUSH2 0x21E PUSH2 0x219 CALLDATASIZE PUSH1 0x4 PUSH2 0xB3E JUMP JUMPDEST PUSH2 0x70B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCF SWAP2 SWAP1 PUSH2 0xB61 JUMP JUMPDEST PUSH2 0x28E PUSH2 0x239 CALLDATASIZE PUSH1 0x4 PUSH2 0xAE7 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD DUP1 MLOAD PUSH1 0x1 DUP1 DUP4 MSTORE SWAP4 DUP4 ADD SWAP3 SWAP1 SWAP5 ADD SWAP2 SWAP1 SWAP2 KECCAK256 SWAP3 SWAP1 MSTORE DUP2 SLOAD SWAP1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 SWAP1 SWAP5 ADD SLOAD SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 PUSH1 0xFF DUP1 DUP3 AND SWAP3 PUSH2 0x100 DUP4 DIV DUP3 AND SWAP3 PUSH3 0x10000 SWAP1 DIV SWAP1 SWAP2 AND SWAP1 DUP8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP8 DUP9 MSTORE PUSH1 0x20 DUP9 ADD SWAP7 SWAP1 SWAP7 MSTORE SWAP5 DUP7 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0xFF SWAP2 DUP3 AND PUSH1 0x60 DUP7 ADD MSTORE AND PUSH1 0x80 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 ADD PUSH2 0xCF JUMP JUMPDEST PUSH2 0x126 PUSH2 0x2D6 CALLDATASIZE PUSH1 0x4 PUSH2 0xB6F JUMP JUMPDEST PUSH2 0x768 JUMP JUMPDEST PUSH2 0x126 PUSH2 0x2E9 CALLDATASIZE PUSH1 0x4 PUSH2 0xBB1 JUMP JUMPDEST PUSH2 0x7F3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xA DUP5 PUSH1 0xFF AND GT ISZERO PUSH2 0x343 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x436F6E646974696F6E206D75737420626520312D313 PUSH1 0x54 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xF4240 DUP6 GT ISZERO PUSH2 0x388 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C6964206D696C65616765 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x33A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x396 DUP8 DUP8 DUP8 DUP8 PUSH2 0x5AE JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE POP PUSH1 0x1 DUP11 PUSH1 0x40 MLOAD PUSH2 0x3E3 SWAP2 SWAP1 PUSH2 0xBFE JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x20 SWAP1 DUP2 ADD SWAP1 SWAP3 KECCAK256 DUP4 MLOAD DUP2 SSTORE SWAP2 DUP4 ADD MLOAD PUSH1 0x1 DUP4 ADD SSTORE DUP3 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 DUP3 ADD DUP1 SLOAD PUSH1 0x80 DUP6 ADD MLOAD PUSH1 0xA0 DUP7 ADD MLOAD ISZERO ISZERO PUSH3 0x10000 MUL PUSH3 0xFF0000 NOT PUSH1 0xFF SWAP3 DUP4 AND PUSH2 0x100 MUL PUSH2 0xFFFF NOT SWAP1 SWAP5 AND SWAP3 SWAP1 SWAP6 AND SWAP2 SWAP1 SWAP2 OR SWAP2 SWAP1 SWAP2 OR SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xC0 SWAP1 SWAP2 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD SSTORE PUSH1 0x0 PUSH2 0x46A DUP10 DUP4 PUSH2 0x70B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x478 DUP12 DUP4 PUSH2 0x4C5 JUMP JUMPDEST SWAP1 POP PUSH32 0x3D95572704130BB661D2805806F913C134F4CB017E58BDF1C7041DB1055001E1 DUP12 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x4AD SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xC1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP1 SWAP11 SWAP1 SWAP10 POP SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP5 PUSH1 0x40 MLOAD PUSH2 0x4D8 SWAP2 SWAP1 PUSH2 0xBFE JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x500 JUMPI PUSH2 0x500 PUSH2 0x9F1 JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x511 JUMPI PUSH2 0x511 PUSH2 0x9F1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP DUP2 PUSH1 0x1 ADD SLOAD DUP4 PUSH1 0x1 ADD SLOAD PUSH2 0x53E SWAP2 SWAP1 PUSH2 0xC73 JUMP JUMPDEST PUSH2 0x548 SWAP1 DUP3 PUSH2 0xC8A JUMP JUMPDEST PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP6 ADD SLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0x564 SWAP1 PUSH1 0xFF AND PUSH1 0xA PUSH2 0xC9D JUMP JUMPDEST PUSH1 0xFF AND PUSH2 0x571 SWAP2 SWAP1 PUSH2 0xC73 JUMP JUMPDEST PUSH2 0x57B SWAP1 DUP3 PUSH2 0xC8A JUMP JUMPDEST PUSH1 0x3 DUP5 ADD SLOAD SWAP1 SWAP2 POP PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x5A3 JUMPI PUSH1 0x3 DUP3 ADD SLOAD PUSH2 0x5A0 SWAP1 DUP3 PUSH2 0xC8A JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH2 0x5BD DUP7 PUSH1 0x2 PUSH2 0xC73 JUMP JUMPDEST PUSH2 0x5C7 SWAP1 DUP3 PUSH2 0xCB6 JUMP JUMPDEST SWAP1 POP PUSH2 0x5D5 PUSH2 0x2710 DUP7 PUSH2 0xCC9 JUMP JUMPDEST PUSH2 0x5E0 SWAP1 PUSH1 0x3 PUSH2 0xC73 JUMP JUMPDEST PUSH2 0x5EA SWAP1 DUP3 PUSH2 0xCB6 JUMP JUMPDEST SWAP1 POP PUSH2 0x5F7 DUP5 PUSH1 0x5 PUSH2 0xCEB JUMP JUMPDEST PUSH2 0x604 SWAP1 PUSH1 0xFF AND DUP3 PUSH2 0xC8A JUMP JUMPDEST SWAP1 POP DUP3 ISZERO PUSH2 0x61A JUMPI PUSH2 0x617 PUSH1 0x14 DUP3 PUSH2 0xCB6 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x64 DUP2 GT ISZERO PUSH2 0x627 JUMPI POP PUSH1 0x64 JUMPDEST SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x63A PUSH2 0x831 JUMP JUMPDEST PUSH2 0x644 PUSH1 0x0 PUSH2 0x85E JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x68E PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x40 MLOAD PUSH2 0x69E SWAP2 SWAP1 PUSH2 0xBFE JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x20 SWAP1 DUP2 ADD DUP4 KECCAK256 PUSH1 0xE0 DUP5 ADD DUP4 MSTORE DUP1 SLOAD DUP5 MSTORE PUSH1 0x1 DUP2 ADD SLOAD SWAP2 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND PUSH1 0x60 DUP6 ADD MSTORE PUSH2 0x100 DUP3 DIV DUP2 AND PUSH1 0x80 DUP6 ADD MSTORE PUSH3 0x10000 SWAP1 SWAP2 DIV AND ISZERO ISZERO PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x4 ADD SLOAD PUSH1 0xC0 DUP3 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0x2C68AF0BB140000 DUP4 LT ISZERO DUP1 ISZERO PUSH2 0x729 JUMPI POP PUSH1 0x50 DUP3 PUSH1 0xFF AND LT ISZERO JUMPDEST ISZERO PUSH2 0x736 JUMPI POP PUSH1 0x2 PUSH2 0x5A8 JUMP JUMPDEST PUSH8 0x16345785D8A0000 DUP4 LT ISZERO DUP1 ISZERO PUSH2 0x752 JUMPI POP PUSH1 0x3C DUP3 PUSH1 0xFF AND LT ISZERO JUMPDEST ISZERO PUSH2 0x75F JUMPI POP PUSH1 0x1 PUSH2 0x5A8 JUMP JUMPDEST POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x770 PUSH2 0x831 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0x2 PUSH1 0x0 DUP8 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x7A7 JUMPI PUSH2 0x7A7 PUSH2 0x9F1 JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x7B8 JUMPI PUSH2 0x7B8 PUSH2 0x9F1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 KECCAK256 DUP4 MLOAD DUP2 SSTORE SWAP2 DUP4 ADD MLOAD PUSH1 0x1 DUP4 ADD SSTORE DUP3 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x60 SWAP1 SWAP2 ADD MLOAD PUSH1 0x3 SWAP1 SWAP2 ADD SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x7FB PUSH2 0x831 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x825 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x33A JUMP JUMPDEST PUSH2 0x82E DUP2 PUSH2 0x85E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x644 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x33A JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x8D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x8F0 JUMPI PUSH2 0x8F0 PUSH2 0x8AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x918 JUMPI PUSH2 0x918 PUSH2 0x8AE JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x931 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x962 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x962 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x990 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9B3 DUP10 DUP3 DUP11 ADD PUSH2 0x8C4 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP3 POP PUSH2 0x9D7 PUSH1 0x80 DUP9 ADD PUSH2 0x951 JUMP JUMPDEST SWAP2 POP PUSH2 0x9E5 PUSH1 0xA0 DUP9 ADD PUSH2 0x967 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0xA25 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x40 DUP2 ADD PUSH2 0xA37 DUP3 DUP6 PUSH2 0xA07 JUMP JUMPDEST DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x3 DUP2 LT PUSH2 0x962 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA89 DUP6 DUP3 DUP7 ADD PUSH2 0x8C4 JUMP JUMPDEST SWAP3 POP POP PUSH2 0xA98 PUSH1 0x20 DUP5 ADD PUSH2 0xA44 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xAB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH2 0xACE PUSH1 0x40 DUP7 ADD PUSH2 0x951 JUMP JUMPDEST SWAP2 POP PUSH2 0xADC PUSH1 0x60 DUP7 ADD PUSH2 0x967 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x62A DUP5 DUP3 DUP6 ADD PUSH2 0x8C4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB2E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB37 DUP3 PUSH2 0xA44 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0xA98 PUSH1 0x20 DUP5 ADD PUSH2 0x951 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x5A8 DUP3 DUP5 PUSH2 0xA07 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xB87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB90 DUP7 PUSH2 0xA44 JUMP JUMPDEST SWAP8 PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP8 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP7 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP7 POP PUSH1 0x80 ADD CALLDATALOAD SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xBF5 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xBDD JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0xC10 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0xBDA JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 DUP5 MLOAD DUP1 PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0xC39 DUP2 PUSH1 0x80 DUP6 ADD PUSH1 0x20 DUP10 ADD PUSH2 0xBDA JUMP JUMPDEST PUSH1 0xFF DUP6 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x80 ADD SWAP1 POP PUSH2 0x62A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xA07 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x5A8 JUMPI PUSH2 0x5A8 PUSH2 0xC5D JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x5A8 JUMPI PUSH2 0x5A8 PUSH2 0xC5D JUMP JUMPDEST PUSH1 0xFF DUP3 DUP2 AND DUP3 DUP3 AND SUB SWAP1 DUP2 GT ISZERO PUSH2 0x5A8 JUMPI PUSH2 0x5A8 PUSH2 0xC5D JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x5A8 JUMPI PUSH2 0x5A8 PUSH2 0xC5D JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xCE6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0xFF DUP2 DUP2 AND DUP4 DUP3 AND MUL SWAP1 DUP2 AND SWAP1 DUP2 DUP2 EQ PUSH2 0xD07 JUMPI PUSH2 0xD07 PUSH2 0xC5D JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLVALUE 0x28 SUB 0x2D DUP15 0xF9 0xB1 BYTE SWAP9 DUP1 0xBE PUSH11 0x98EE2DD0FB4E1B47231C33 SWAP10 SLT 0xCA PUSH12 0x724D4F748964736F6C634300 ADDMOD EQ STOP CALLER ","sourceMap":"142:4304:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1180:1063;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;3215:575;;;;;;:::i;:::-;;:::i;:::-;;;3291:25:20;;;3279:2;3264:18;3215:575:19;3145:177:20;2253:512:19;;;;;;:::i;:::-;;:::i;:::-;;;3891:4:20;3879:17;;;3861:36;;3849:2;3834:18;2253:512:19;3719:184:20;2293:101:0;;;:::i;:::-;;1638:85;1684:7;1710:6;1638:85;;-1:-1:-1;;;;;1710:6:0;;;4054:51:20;;4042:2;4027:18;1638:85:0;3908:203:20;4278:166:19;;;;;;:::i;:::-;;:::i;:::-;;;;;;4593:4:20;4635:3;4624:9;4620:19;4612:27;;4672:6;4666:13;4655:9;4648:32;4736:4;4728:6;4724:17;4718:24;4711:4;4700:9;4696:20;4689:54;4799:4;4791:6;4787:17;4781:24;4774:4;4763:9;4759:20;4752:54;4874:4;4866;4858:6;4854:17;4848:24;4844:35;4837:4;4826:9;4822:20;4815:65;4948:4;4940;4932:6;4928:17;4922:24;4918:35;4911:4;4900:9;4896:20;4889:65;5024:4;5016:6;5012:17;5006:24;4999:32;4992:40;4985:4;4974:9;4970:20;4963:70;5089:4;5081:6;5077:17;5071:24;5064:4;5053:9;5049:20;5042:54;4443:659;;;;;642:78:19;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5564:25:20;;;5620:2;5605:18;;5598:34;;;;5648:18;;;5641:34;5706:2;5691:18;;5684:34;5551:3;5536:19;642:78:19;5333:391:20;2775:430:19;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;586:50::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6512:25:20;;;6568:2;6553:18;;6546:34;;;;6596:18;;;6589:34;;;;6671:4;6659:17;;;6654:2;6639:18;;6632:45;6714:17;6708:3;6693:19;;6686:46;6776:14;6769:22;6763:3;6748:19;;6741:51;6823:3;6808:19;;6801:35;6499:3;6484:19;586:50:19;6211:631:20;3796:476:19;;;;;;:::i;:::-;;:::i;2543:215:0:-;;;;;;:::i;:::-;;:::i;1180:1063:19:-;1396:31;1429:7;1470:2;1456:10;:16;;;;1448:51;;;;-1:-1:-1;;;1448:51:19;;7840:2:20;1448:51:19;;;7822:21:20;7879:2;7859:18;;;7852:30;-1:-1:-1;;;7898:18:20;;;7891:52;7960:18;;1448:51:19;;;;;;;;;1529:7;1517:8;:19;;1509:47;;;;-1:-1:-1;;;1509:47:19;;8191:2:20;1509:47:19;;;8173:21:20;8230:2;8210:18;;;8203:30;-1:-1:-1;;;8249:18:20;;;8242:45;8304:18;;1509:47:19;7989:339:20;1509:47:19;1575:15;1593:67;1612:4;1618:8;1628:10;1640:19;1593:18;:67::i;:::-;1575:85;;1705:279;;;;;;;;1742:10;1705:279;;;;1771:4;1705:279;;;;1798:8;1705:279;;;;1831:10;1705:279;;;;;;1866:9;1705:279;;;;;;1909:19;1705:279;;;;;;1958:15;1705:279;;;1679:12;1692:9;1679:23;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:305;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1679:305:19;;;;;;-1:-1:-1;;1679:305:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2034:36;2048:10;2060:9;2034:13;:36::i;:::-;1995:75;;2080:15;2098:33;2115:9;2126:4;2098:16;:33::i;:::-;2080:51;;2155:40;2168:9;2179;2190:4;2155:40;;;;;;;;:::i;:::-;;;;;;;;2222:4;;;;-1:-1:-1;1180:1063:19;-1:-1:-1;;;;;;;;1180:1063:19:o;3215:575::-;3349:7;3368:24;3395:12;3408:9;3395:23;;;;;;:::i;:::-;;;;;;;;;;;;;3368:50;;3428:30;3461:12;:19;3474:5;3461:19;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;3428:52;;3499:15;3517:7;:16;;;3499:34;;3566:7;:21;;;3555:4;:8;;;:32;;;;:::i;:::-;3543:45;;;;:::i;:::-;3634:27;;;;3616:14;;;;3543:45;;-1:-1:-1;3634:27:19;3611:19;;3616:14;;3611:2;:19;:::i;:::-;3610:51;;;;;;:::i;:::-;3598:64;;;;:::i;:::-;3676:23;;;;3598:64;;-1:-1:-1;3676:23:19;;;;;3672:88;;;3726:23;;;;3715:34;;;;:::i;:::-;;;3672:88;3776:7;-1:-1:-1;;;3215:575:19;;;;;:::o;2253:512::-;2416:5;2449:3;2479:8;:4;2486:1;2479:8;:::i;:::-;2470:18;;:5;:18;:::i;:::-;2462:26;-1:-1:-1;2516:16:19;2527:5;2516:8;:16;:::i;:::-;2515:22;;2536:1;2515:22;:::i;:::-;2506:32;;:5;:32;:::i;:::-;2498:40;-1:-1:-1;2565:14:19;:10;2578:1;2565:14;:::i;:::-;2556:24;;;;:5;:24;:::i;:::-;2548:32;;2594:19;2590:68;;;2637:10;2645:2;2637:5;:10;:::i;:::-;2629:18;;2590:68;2679:3;2671:5;:11;2667:28;;;-1:-1:-1;2692:3:19;2667:28;2752:5;-1:-1:-1;2253:512:19;;;;;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;4278:166:19:-;4377:18;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4377:18:19;4414:12;4427:9;4414:23;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;4407:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4414:23;4278:166;-1:-1:-1;;4278:166:19:o;2775:430::-;2857:31;2918:9;2904:10;:23;;:43;;;;;2945:2;2931:10;:16;;;;2904:43;2900:245;;;-1:-1:-1;2970:39:19;2963:46;;2900:245;3044:9;3030:10;:23;;:43;;;;;3071:2;3057:10;:16;;;;3030:43;3026:119;;;-1:-1:-1;3096:38:19;3089:45;;3026:119;-1:-1:-1;3161:37:19;2775:430;;;;:::o;3796:476::-;1531:13:0;:11;:13::i;:::-;4061:204:19::1;;;;;;;;4100:9;4061:204;;;;4138:14;4061:204;;;;4187:20;4061:204;;;;4238:16;4061:204;;::::0;4039:12:::1;:19;4052:5;4039:19;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;::::0;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;4039:19:19;:226;;;;;;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;-1:-1:-1;;;;;3796:476:19:o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;4054:51:20::0;4027:18;;2672:31:0::1;3908:203:20::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;735:10:7;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:7;1901:40:0;;;4054:51:20;4027:18;;1901:40:0;3908:203:20;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:127:20:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:719;189:5;242:3;235:4;227:6;223:17;219:27;209:55;;260:1;257;250:12;209:55;296:6;283:20;322:18;359:2;355;352:10;349:36;;;365:18;;:::i;:::-;440:2;434:9;408:2;494:13;;-1:-1:-1;;490:22:20;;;514:2;486:31;482:40;470:53;;;538:18;;;558:22;;;535:46;532:72;;;584:18;;:::i;:::-;624:10;620:2;613:22;659:2;651:6;644:18;705:3;698:4;693:2;685:6;681:15;677:26;674:35;671:55;;;722:1;719;712:12;671:55;786:2;779:4;771:6;767:17;760:4;752:6;748:17;735:54;833:1;826:4;821:2;813:6;809:15;805:26;798:37;853:6;844:15;;;;;;146:719;;;;:::o;870:156::-;936:20;;996:4;985:16;;975:27;;965:55;;1016:1;1013;1006:12;965:55;870:156;;;:::o;1031:160::-;1096:20;;1152:13;;1145:21;1135:32;;1125:60;;1181:1;1178;1171:12;1196:667;1305:6;1313;1321;1329;1337;1345;1398:3;1386:9;1377:7;1373:23;1369:33;1366:53;;;1415:1;1412;1405:12;1366:53;1455:9;1442:23;1488:18;1480:6;1477:30;1474:50;;;1520:1;1517;1510:12;1474:50;1543;1585:7;1576:6;1565:9;1561:22;1543:50;:::i;:::-;1533:60;;;1640:2;1629:9;1625:18;1612:32;1602:42;;1691:2;1680:9;1676:18;1663:32;1653:42;;1742:2;1731:9;1727:18;1714:32;1704:42;;1765:37;1797:3;1786:9;1782:19;1765:37;:::i;:::-;1755:47;;1821:36;1852:3;1841:9;1837:19;1821:36;:::i;:::-;1811:46;;1196:667;;;;;;;;:::o;1868:127::-;1929:10;1924:3;1920:20;1917:1;1910:31;1960:4;1957:1;1950:15;1984:4;1981:1;1974:15;2000:244;2088:1;2081:5;2078:12;2068:143;;2133:10;2128:3;2124:20;2121:1;2114:31;2168:4;2165:1;2158:15;2196:4;2193:1;2186:15;2068:143;2220:18;;2000:244::o;2249:293::-;2430:2;2415:18;;2442:51;2419:9;2475:6;2442:51;:::i;:::-;2529:6;2524:2;2513:9;2509:18;2502:34;2249:293;;;;;:::o;2547:157::-;2629:20;;2678:1;2668:12;;2658:40;;2694:1;2691;2684:12;2709:431;2808:6;2816;2869:2;2857:9;2848:7;2844:23;2840:32;2837:52;;;2885:1;2882;2875:12;2837:52;2925:9;2912:23;2958:18;2950:6;2947:30;2944:50;;;2990:1;2987;2980:12;2944:50;3013;3055:7;3046:6;3035:9;3031:22;3013:50;:::i;:::-;3003:60;;;3082:52;3130:2;3119:9;3115:18;3082:52;:::i;:::-;3072:62;;2709:431;;;;;:::o;3327:387::-;3408:6;3416;3424;3432;3485:3;3473:9;3464:7;3460:23;3456:33;3453:53;;;3502:1;3499;3492:12;3453:53;3538:9;3525:23;3515:33;;3595:2;3584:9;3580:18;3567:32;3557:42;;3618:36;3650:2;3639:9;3635:18;3618:36;:::i;:::-;3608:46;;3673:35;3704:2;3693:9;3689:18;3673:35;:::i;:::-;3663:45;;3327:387;;;;;;;:::o;4116:322::-;4185:6;4238:2;4226:9;4217:7;4213:23;4209:32;4206:52;;;4254:1;4251;4244:12;4206:52;4294:9;4281:23;4327:18;4319:6;4316:30;4313:50;;;4359:1;4356;4349:12;4313:50;4382;4424:7;4415:6;4404:9;4400:22;4382:50;:::i;5107:221::-;5187:6;5240:2;5228:9;5219:7;5215:23;5211:32;5208:52;;;5256:1;5253;5246:12;5208:52;5279:43;5312:9;5279:43;:::i;:::-;5269:53;5107:221;-1:-1:-1;;;5107:221:20:o;5729:250::-;5795:6;5803;5856:2;5844:9;5835:7;5831:23;5827:32;5824:52;;;5872:1;5869;5862:12;5824:52;5908:9;5895:23;5885:33;;5937:36;5969:2;5958:9;5954:18;5937:36;:::i;5984:222::-;6137:2;6122:18;;6149:51;6126:9;6182:6;6149:51;:::i;6847:495::-;6963:6;6971;6979;6987;6995;7048:3;7036:9;7027:7;7023:23;7019:33;7016:53;;;7065:1;7062;7055:12;7016:53;7088:43;7121:9;7088:43;:::i;:::-;7078:53;7178:2;7163:18;;7150:32;;-1:-1:-1;7229:2:20;7214:18;;7201:32;;7280:2;7265:18;;7252:32;;-1:-1:-1;7331:3:20;7316:19;7303:33;;-1:-1:-1;6847:495:20;-1:-1:-1;;;6847:495:20:o;7347:286::-;7406:6;7459:2;7447:9;7438:7;7434:23;7430:32;7427:52;;;7475:1;7472;7465:12;7427:52;7501:23;;-1:-1:-1;;;;;7553:31:20;;7543:42;;7533:70;;7599:1;7596;7589:12;8333:250;8418:1;8428:113;8442:6;8439:1;8436:13;8428:113;;;8518:11;;;8512:18;8499:11;;;8492:39;8464:2;8457:10;8428:113;;;-1:-1:-1;;8575:1:20;8557:16;;8550:27;8333:250::o;8588:289::-;8719:3;8757:6;8751:13;8773:66;8832:6;8827:3;8820:4;8812:6;8808:17;8773:66;:::i;:::-;8855:16;;;;;8588:289;-1:-1:-1;;8588:289:20:o;8882:596::-;9102:2;9091:9;9084:21;9065:4;9134:6;9128:13;9177:6;9172:2;9161:9;9157:18;9150:34;9193:82;9268:6;9262:3;9251:9;9247:19;9240:4;9232:6;9228:17;9193:82;:::i;:::-;9397:4;9385:17;;9378:4;9363:20;;9356:47;9336:2;9315:15;-1:-1:-1;;9311:29:20;9296:45;;9343:3;9292:55;;-1:-1:-1;9412:60:20;9468:2;9453:18;;9445:6;9412:60;:::i;9483:127::-;9544:10;9539:3;9535:20;9532:1;9525:31;9575:4;9572:1;9565:15;9599:4;9596:1;9589:15;9615:168;9688:9;;;9719;;9736:15;;;9730:22;;9716:37;9706:71;;9757:18;;:::i;9788:125::-;9853:9;;;9874:10;;;9871:36;;;9887:18;;:::i;9918:151::-;10008:4;10001:12;;;9987;;;9983:31;;10026:14;;10023:40;;;10043:18;;:::i;10074:128::-;10141:9;;;10162:11;;;10159:37;;;10176:18;;:::i;10207:217::-;10247:1;10273;10263:132;;10317:10;10312:3;10308:20;10305:1;10298:31;10352:4;10349:1;10342:15;10380:4;10377:1;10370:15;10263:132;-1:-1:-1;10409:9:20;;10207:217::o;10429:225::-;10533:4;10512:12;;;10526;;;10508:31;10559:22;;;;10600:24;;;10590:58;;10628:18;;:::i;:::-;10590:58;10429:225;;;;:::o"},"methodIdentifiers":{"assessVehicle(string,uint256,uint256,uint256,uint8,bool)":"0944a8ca","calculatePremium(string,uint8)":"69c27e14","calculateRiskScore(uint256,uint256,uint8,bool)":"70ac03d8","determineTier(uint256,uint8)":"af27c152","getVehicleRisk(string)":"9b1e19a7","owner()":"8da5cb5b","renounceOwnership()":"715018a6","tierPremiums(uint8)":"a870afcd","transferOwnership(address)":"f2fde38b","updatePremiumFactors(uint8,uint256,uint256,uint256,uint256)":"ede77d5d","vehicleRisks(string)":"e51267c7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"regPlate\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"riskScore\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"enum IVehicleShield.VerificationTier\",\"name\":\"tier\",\"type\":\"uint8\"}],\"name\":\"RiskAssessed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_regPlate\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_baseValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_age\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_mileage\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"_condition\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"_hasAccidentHistory\",\"type\":\"bool\"}],\"name\":\"assessVehicle\",\"outputs\":[{\"internalType\":\"enum IVehicleShield.VerificationTier\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_regPlate\",\"type\":\"string\"},{\"internalType\":\"enum IVehicleShield.VerificationTier\",\"name\":\"_tier\",\"type\":\"uint8\"}],\"name\":\"calculatePremium\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_age\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_mileage\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"_condition\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"_hasAccidentHistory\",\"type\":\"bool\"}],\"name\":\"calculateRiskScore\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_baseValue\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"_riskScore\",\"type\":\"uint8\"}],\"name\":\"determineTier\",\"outputs\":[{\"internalType\":\"enum IVehicleShield.VerificationTier\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_regPlate\",\"type\":\"string\"}],\"name\":\"getVehicleRisk\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"baseValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"age\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mileage\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"condition\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"riskScore\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"hasAccidentHistory\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"lastAssessment\",\"type\":\"uint256\"}],\"internalType\":\"struct RiskAssessment.VehicleRisk\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IVehicleShield.VerificationTier\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"tierPremiums\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"baseRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ageMultiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"conditionMultiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accidentPenalty\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IVehicleShield.VerificationTier\",\"name\":\"_tier\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_baseRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ageMultiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_conditionMultiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_accidentPenalty\",\"type\":\"uint256\"}],\"name\":\"updatePremiumFactors\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"vehicleRisks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"baseValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"age\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mileage\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"condition\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"riskScore\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"hasAccidentHistory\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"lastAssessment\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/RiskAssessment.sol\":\"RiskAssessment\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/IVehicleShield.sol\":{\"keccak256\":\"0x9797150cb75e8673cf23309964621d0323843e13fd0431f4b4b829f71bac3885\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5f0d54e5945cded1dc87c8f47610d1171f2755f7fb499bda738f9b45a7e3085\",\"dweb:/ipfs/Qmdv2XYtJNedoff4W4yfXRqwqfaExpu6Eb9y4WG57nEtg3\"]},\"contracts/RiskAssessment.sol\":{\"keccak256\":\"0xf3098dfd9cbfaf2aa6ad31d387283ea47a894047aa05936ebe070247139e1916\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49551736e1e5bfa62963e09107a4d85e222f51c574d44ff33a34f5e1a3cb83c4\",\"dweb:/ipfs/QmXzsnfPJ5Qh1s8uEEXG6XVtPXPNSczuVTGv79h2GYsysT\"]}},\"version\":1}"}}}}}
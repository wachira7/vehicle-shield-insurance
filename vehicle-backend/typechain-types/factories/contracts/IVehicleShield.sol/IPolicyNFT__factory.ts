/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IPolicyNFT,
  IPolicyNFTInterface,
} from "../../../contracts/IVehicleShield.sol/IPolicyNFT";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "policyId",
        type: "uint256",
      },
    ],
    name: "burnPolicy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "policyId",
        type: "uint256",
      },
    ],
    name: "getPolicyOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "string",
        name: "vehicleId",
        type: "string",
      },
      {
        internalType: "enum IVehicleShield.VerificationTier",
        name: "tier",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "premium",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "coverage",
        type: "uint256",
      },
    ],
    name: "mintPolicy",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IPolicyNFT__factory {
  static readonly abi = _abi;
  static createInterface(): IPolicyNFTInterface {
    return new Interface(_abi) as IPolicyNFTInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): IPolicyNFT {
    return new Contract(address, _abi, runner) as unknown as IPolicyNFT;
  }
}
